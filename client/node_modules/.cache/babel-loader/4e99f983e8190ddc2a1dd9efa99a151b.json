{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/AlbumList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Card, CardActionArea, Grid, makeStyles, Box, Tabs, Tab, AppBar } from '@material-ui/core';\nimport '../App.css';\nimport Song from './Song';\nimport Information from './Infotmation';\nimport { useSelector, useDispatch } from 'react-redux';\nimport playAction from '../actions/playAction';\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 300,\n    height: 'auto',\n    marginLeft: '20px',\n    marginRight: '20px',\n    borderRadius: 5,\n    border: '1px solid #1e8678',\n    boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n  },\n  titleHead: {\n    borderBottom: '1px solid #1e8678',\n    fontWeight: 'bold'\n  },\n  grid: {\n    flexGrow: 1,\n    flexDirection: 'row'\n  },\n  media: {\n    height: '100%',\n    width: '100%'\n  },\n  button: {\n    color: '#1e8678',\n    fontWeight: 'bold',\n    fontSize: 12\n  },\n  btnGroup: {\n    marginTop: '50px'\n  },\n  pages: {\n    textAlign: 'center',\n    margin: '100px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  song_title_header: {\n    width: '300px'\n  },\n  song_title_header1: {\n    width: '300px'\n  },\n  song_album_header: {\n    width: '250px'\n  },\n  song_artist_header: {\n    width: '200px'\n  },\n  song_length_header: {\n    width: '60px'\n  },\n  song_added_header: {\n    width: '150px'\n  },\n  song_header_container: {\n    display: 'flex',\n    borderBottom: '1px solid #666',\n    paddingBottom: '6px',\n    marginTop: '20px'\n  },\n  appbar: {\n    background: '#006600',\n    marginLeft: '30px',\n    marginRight: '30px',\n    width: 'auto'\n  }\n});\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this);\n}\n\n_c = TabPanel;\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`\n  };\n}\n\nconst AlbumList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState(0); //const regex = /(<([^>]+)>)/gi;\n\n  const classes = useStyles();\n  const [albumList, setAlbumList] = useState(undefined);\n  const [page, setPage] = useState(1);\n  const [isLast, setLast] = useState(false);\n  const [isFirst, setFirst] = useState(true);\n  const [top, setTop] = useState(undefined);\n  const [singerName, setSingerName] = useState('');\n  const [singerPhoto, setSingerPhoto] = useState('');\n  const [singerPop, setSingerPop] = useState(0);\n  const [singerF, setSingerF] = useState(0);\n  const [genre, setGenre] = useState(undefined);\n  const [total, setTotal] = useState(undefined);\n  const [id, setId] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  let card = null;\n\n  async function getData(url, type) {\n    var request = require('request');\n\n    var client_id = 'c9b1db19becd48f78d6913a3431ae24a'; // Your client id\n\n    var client_secret = '98145905039345c4a5df9542ca98cc55'; // Your secret\n\n    var authOptions = {\n      url: 'https://accounts.spotify.com/api/token',\n      headers: {\n        'Authorization': 'Basic ' + new Buffer(client_id + ':' + client_secret).toString('base64')\n      },\n      form: {\n        grant_type: 'client_credentials'\n      },\n      json: true\n    };\n    request.post(authOptions, function (error, response, body) {\n      if (!error && response.statusCode === 200) {\n        var token = body.access_token;\n        var options = {\n          url: url,\n          headers: {\n            'Authorization': 'Bearer ' + token\n          },\n          json: true\n        };\n        request.get(options, function (error, response, body) {\n          if (error) {\n            setError(true);\n            setLoading(false);\n          } else {\n            if (type === 'artist') {\n              setSingerName(body.name);\n              setId(body.id);\n              setSingerPhoto(body.images[1].url);\n              setGenre(body.genres);\n              setSingerPop(body.popularity);\n              setSingerF(body.followers.total);\n            }\n\n            if (type === 'album') {\n              setAlbumList(body.items);\n              setTotal(Math.ceil(body.total / 24));\n            }\n\n            if (type === 'topSong') {\n              setTop(body.tracks);\n              dispatch(playAction.updateSongList(body.tracks, 'albums'));\n            }\n\n            setLoading(false);\n          }\n        });\n      }\n    });\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        await getData(`https://api.spotify.com/v1/artists/${props.match.params.id}/albums?limit=24&&offset=${page * 24 - 24}`, 'album');\n        await getData(`https://api.spotify.com/v1/artists/${props.match.params.id}`, 'artist');\n        await getData(`https://api.spotify.com/v1/artists/${props.match.params.id}/top-tracks?country=SE`, 'topSong');\n\n        if (page === 1) {\n          setFirst(true);\n          setLast(false);\n        } else {\n          setFirst(false);\n        }\n\n        if (page === total) {\n          setLast(true);\n          setFirst(false);\n        } else {\n          setLast(false);\n        }\n      } catch (e) {\n        console.log(e);\n        setError(true);\n      }\n    }\n\n    fetchData();\n  }, [page, props.match.params.id]);\n\n  const changePageHandle = (event, page) => {\n    setPage(page);\n\n    if (page === 1) {\n      setFirst(true);\n    } else {\n      setFirst(false);\n    }\n\n    ;\n\n    if (page === total) {\n      setLast(true);\n    } else {\n      setLast(false);\n    }\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const buildList = albm => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      sm: 4,\n      md: 3,\n      lg: 2,\n      xl: 2,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.card,\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/albums/songsList/${albm.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-image\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"category\",\n                src: albm.icons ? albm.icons[0].url : albm.images[1].url,\n                width: \"100%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 6\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"category-name\",\n                children: albm.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 4\n      }, this)\n    }, albm.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 3\n    }, this);\n  };\n\n  card = albumList && albumList.map(album => {\n    return buildList(album);\n  });\n  let topList = top && top.map(song => {\n    let NewSong = null;\n\n    if (!song.track) {\n      NewSong = {\n        track: song\n      };\n    } else {\n      NewSong = song;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Song, {\n      song: NewSong\n    }, song.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this);\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 4\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 4\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Information, {\n        name: singerName,\n        image: singerPhoto,\n        genre: genre,\n        id: id,\n        follower: singerF,\n        popularity: singerPop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        className: classes.appbar,\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: handleChange,\n          \"aria-label\": \"simple tabs example\",\n          centered: true,\n          variant: \"fullWidth\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"All Albums\",\n            ...a11yProps(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Top Songs\",\n            ...a11yProps(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 0,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            className: classes.grid,\n            spacing: 2,\n            children: card\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), total === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.pages,\n            children: \"No More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.pages,\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              count: total,\n              page: page,\n              defaultPage: page,\n              onChange: changePageHandle,\n              variant: \"outlined\",\n              shape: \"rounded\",\n              hidePrevButton: isFirst,\n              hideNextButton: isLast\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: value,\n        index: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.song_header_container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.song_title_header,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.song_artist_header,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Artist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.song_album_header,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Album\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.song_added_header,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.song_length_header,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), topList]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }, this);\n  }\n};\n\n_s(AlbumList, \"QMzCluQcXQc9QtnDPXXCL5yXsxQ=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c2 = AlbumList;\nexport default _c3 = withRouter(AlbumList);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"AlbumList\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/AlbumList.js"],"names":["React","useState","useEffect","Link","withRouter","Pagination","Card","CardActionArea","Grid","makeStyles","Box","Tabs","Tab","AppBar","Song","Information","useSelector","useDispatch","playAction","useStyles","card","maxWidth","height","marginLeft","marginRight","borderRadius","border","boxShadow","titleHead","borderBottom","fontWeight","grid","flexGrow","flexDirection","media","width","button","color","fontSize","btnGroup","marginTop","pages","textAlign","margin","display","justifyContent","song_title_header","song_title_header1","song_album_header","song_artist_header","song_length_header","song_added_header","song_header_container","paddingBottom","appbar","background","TabPanel","props","children","value","index","other","a11yProps","id","AlbumList","dispatch","setValue","classes","albumList","setAlbumList","undefined","page","setPage","isLast","setLast","isFirst","setFirst","top","setTop","singerName","setSingerName","singerPhoto","setSingerPhoto","singerPop","setSingerPop","singerF","setSingerF","genre","setGenre","total","setTotal","setId","loading","setLoading","error","setError","getData","url","type","request","require","client_id","client_secret","authOptions","headers","Buffer","toString","form","grant_type","json","post","response","body","statusCode","token","access_token","options","get","name","images","genres","popularity","followers","items","Math","ceil","tracks","updateSongList","fetchData","match","params","e","console","log","changePageHandle","event","handleChange","newValue","buildList","albm","icons","map","album","topList","song","NewSong","track"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,IAAT,EAAeC,cAAf,EAAgCC,IAAhC,EAAuCC,UAAvC,EAAoDC,GAApD,EAAyDC,IAAzD,EAA+DC,GAA/D,EAAoEC,MAApE,QAAkF,mBAAlF;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,MAAMC,SAAS,GAAGV,UAAU,CAAC;AACzBW,EAAAA,IAAI,EAAE;AACRC,IAAAA,QAAQ,EAAE,GADF;AAERC,IAAAA,MAAM,EAAE,MAFA;AAGRC,IAAAA,UAAU,EAAE,MAHJ;AAIRC,IAAAA,WAAW,EAAE,MAJL;AAKRC,IAAAA,YAAY,EAAE,CALN;AAMRC,IAAAA,MAAM,EAAE,mBANA;AAORC,IAAAA,SAAS,EAAE;AAPH,GADmB;AAU5BC,EAAAA,SAAS,EAAE;AACVC,IAAAA,YAAY,EAAE,mBADJ;AAEVC,IAAAA,UAAU,EAAE;AAFF,GAViB;AAc5BC,EAAAA,IAAI,EAAE;AACLC,IAAAA,QAAQ,EAAE,CADL;AAELC,IAAAA,aAAa,EAAE;AAFV,GAdsB;AAkB5BC,EAAAA,KAAK,EAAE;AACNZ,IAAAA,MAAM,EAAE,MADF;AAENa,IAAAA,KAAK,EAAE;AAFD,GAlBqB;AAsB5BC,EAAAA,MAAM,EAAE;AACPC,IAAAA,KAAK,EAAE,SADA;AAEPP,IAAAA,UAAU,EAAE,MAFL;AAGPQ,IAAAA,QAAQ,EAAE;AAHH,GAtBoB;AA2B5BC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF,GA3BkB;AA8B5BC,EAAAA,KAAK,EAAE;AAENC,IAAAA,SAAS,EAAE,QAFL;AAGNC,IAAAA,MAAM,EAAE,OAHF;AAINC,IAAAA,OAAO,EAAE,MAJH;AAKNX,IAAAA,aAAa,EAAE,KALT;AAMNY,IAAAA,cAAc,EAAE;AANV,GA9BqB;AAsCzBC,EAAAA,iBAAiB,EAAC;AACdX,IAAAA,KAAK,EAAE;AADO,GAtCO;AAyCzBY,EAAAA,kBAAkB,EAAE;AAChBZ,IAAAA,KAAK,EAAE;AADS,GAzCK;AA4CzBa,EAAAA,iBAAiB,EAAE;AACfb,IAAAA,KAAK,EAAE;AADQ,GA5CM;AA+CzBc,EAAAA,kBAAkB,EAAE;AAChBd,IAAAA,KAAK,EAAE;AADS,GA/CK;AAkDzBe,EAAAA,kBAAkB,EAAE;AAChBf,IAAAA,KAAK,EAAE;AADS,GAlDK;AAqDzBgB,EAAAA,iBAAiB,EAAE;AACfhB,IAAAA,KAAK,EAAE;AADQ,GArDM;AAwDzBiB,EAAAA,qBAAqB,EAAE;AACnBR,IAAAA,OAAO,EAAE,MADU;AAEnBf,IAAAA,YAAY,EAAE,gBAFK;AAGnBwB,IAAAA,aAAa,EAAE,KAHI;AAInBb,IAAAA,SAAS,EAAE;AAJQ,GAxDE;AA8DzBc,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAC,SADP;AAEJhC,IAAAA,UAAU,EAAC,MAFP;AAGJC,IAAAA,WAAW,EAAC,MAHR;AAIJW,IAAAA,KAAK,EAAE;AAJH;AA9DiB,CAAD,CAA5B;;AAqEA,SAASqB,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,KAAnB;AAA0B,OAAGC;AAA7B,MAAuCJ,KAA7C;AAEA,sBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,MAAM,EAAEE,KAAK,KAAKC,KAFpB;AAGE,IAAA,EAAE,EAAG,mBAAkBA,KAAM,EAH/B;AAIE,uBAAkB,cAAaA,KAAM,EAJvC;AAAA,OAKMC,KALN;AAAA,cAOGF,KAAK,KAAKC,KAAV,iBACC,QAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAA,6BACE;AAAA,kBAAMF;AAAN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;KAlBMF,Q;;AAmBP,SAASM,SAAT,CAAmBF,KAAnB,EAA0B;AACxB,SAAO;AACLG,IAAAA,EAAE,EAAG,cAAaH,KAAM,EADnB;AAEL,qBAAkB,mBAAkBA,KAAM;AAFrC,GAAP;AAID;;AAEH,MAAMI,SAAS,GAAIP,KAAD,IAAW;AAAA;;AACzB,QAAMQ,QAAQ,GAAGhD,WAAW,EAA5B;AACA,QAAM,CAAC0C,KAAD,EAAQO,QAAR,IAAoBlE,KAAK,CAACC,QAAN,CAAe,CAAf,CAA1B,CAFyB,CAGzB;;AACA,QAAMkE,OAAO,GAAGhD,SAAS,EAAzB;AACA,QAAM,CAAEiD,SAAF,EAAaC,YAAb,IAA+BpE,QAAQ,CAACqE,SAAD,CAA7C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvE,QAAQ,CAAC,CAAD,CAAhC;AACH,QAAM,CAACwE,MAAD,EAASC,OAAT,IAAoBzE,QAAQ,CAAC,KAAD,CAAlC;AACG,QAAM,CAAC0E,OAAD,EAAUC,QAAV,IAAsB3E,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAAE4E,GAAF,EAAOC,MAAP,IAAiB7E,QAAQ,CAACqE,SAAD,CAA/B;AACH,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8B/E,QAAQ,CAAC,EAAD,CAA5C;AACG,QAAM,CAACgF,WAAD,EAAcC,cAAd,IAAgCjF,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkF,SAAD,EAAYC,YAAZ,IAA4BnF,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACoF,OAAD,EAAUC,UAAV,IAAwBrF,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACsF,KAAD,EAAQC,QAAR,IAAoBvF,QAAQ,CAACqE,SAAD,CAAlC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBzF,QAAQ,CAACqE,SAAD,CAAlC;AACA,QAAM,CAACP,EAAD,EAAK4B,KAAL,IAAc1F,QAAQ,CAACqE,SAAD,CAA5B;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwB5F,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC6F,KAAD,EAAQC,QAAR,IAAsB9F,QAAQ,CAAC,KAAD,CAApC;AAEH,MAAImB,IAAI,GAAG,IAAX;;AAEA,iBAAe4E,OAAf,CAAuBC,GAAvB,EAA4BC,IAA5B,EAAiC;AAC1B,QAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,QAAIC,SAAS,GAAG,kCAAhB,CAF0B,CAE0B;;AACpD,QAAIC,aAAa,GAAG,kCAApB,CAH0B,CAG8B;;AACxD,QAAIC,WAAW,GAAG;AACdN,MAAAA,GAAG,EAAE,wCADS;AAEdO,MAAAA,OAAO,EAAE;AACP,yBAAiB,WAAY,IAAIC,MAAJ,CAAWJ,SAAS,GAAG,GAAZ,GAAkBC,aAA7B,EAA4CI,QAA5C,CAAqD,QAArD;AADtB,OAFK;AAKdC,MAAAA,IAAI,EAAE;AACJC,QAAAA,UAAU,EAAE;AADR,OALQ;AAQdC,MAAAA,IAAI,EAAE;AARQ,KAAlB;AAUAV,IAAAA,OAAO,CAACW,IAAR,CAAaP,WAAb,EAAyB,UAAST,KAAT,EAAgBiB,QAAhB,EAAyBC,IAAzB,EAA8B;AACnD,UAAI,CAAClB,KAAD,IAAUiB,QAAQ,CAACE,UAAT,KAAwB,GAAtC,EAA2C;AACnC,YAAIC,KAAK,GAAGF,IAAI,CAACG,YAAjB;AACA,YAAIC,OAAO,GAAG;AACVnB,UAAAA,GAAG,EAAEA,GADK;AAEVO,UAAAA,OAAO,EAAE;AACL,6BAAiB,YAAYU;AADxB,WAFC;AAKVL,UAAAA,IAAI,EAAE;AALI,SAAd;AAOAV,QAAAA,OAAO,CAACkB,GAAR,CAAYD,OAAZ,EAAqB,UAAStB,KAAT,EAAgBiB,QAAhB,EAA0BC,IAA1B,EAAgC;AACrD,cAAGlB,KAAH,EAAS;AACLC,YAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,YAAAA,UAAU,CAAC,KAAD,CAAV;AACH,WAHD,MAGO;AACH,gBAAGK,IAAI,KAAK,QAAZ,EAAqB;AACjBlB,cAAAA,aAAa,CAACgC,IAAI,CAACM,IAAN,CAAb;AACA3B,cAAAA,KAAK,CAACqB,IAAI,CAACjD,EAAN,CAAL;AACAmB,cAAAA,cAAc,CAAC8B,IAAI,CAACO,MAAL,CAAY,CAAZ,EAAetB,GAAhB,CAAd;AACAT,cAAAA,QAAQ,CAACwB,IAAI,CAACQ,MAAN,CAAR;AACApC,cAAAA,YAAY,CAAC4B,IAAI,CAACS,UAAN,CAAZ;AACAnC,cAAAA,UAAU,CAAC0B,IAAI,CAACU,SAAL,CAAejC,KAAhB,CAAV;AACH;;AACD,gBAAGS,IAAI,KAAK,OAAZ,EAAoB;AAChB7B,cAAAA,YAAY,CAAC2C,IAAI,CAACW,KAAN,CAAZ;AACAjC,cAAAA,QAAQ,CAACkC,IAAI,CAACC,IAAL,CAAUb,IAAI,CAACvB,KAAL,GAAa,EAAvB,CAAD,CAAR;AACH;;AACD,gBAAGS,IAAI,KAAK,SAAZ,EAAsB;AAClBpB,cAAAA,MAAM,CAACkC,IAAI,CAACc,MAAN,CAAN;AACA7D,cAAAA,QAAQ,CAAC/C,UAAU,CAAC6G,cAAX,CAA0Bf,IAAI,CAACc,MAA/B,EAAuC,QAAvC,CAAD,CAAR;AACH;;AACDjC,YAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACA,SAvBD;AAwBP;AACJ,KAnCD;AAoCH;;AAED3F,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAe8H,SAAf,GAA0B;AACtB,UAAG;AACC,cAAMhC,OAAO,CAAE,sCAAqCvC,KAAK,CAACwE,KAAN,CAAYC,MAAZ,CAAmBnE,EAAG,4BAA2BQ,IAAI,GAAC,EAAL,GAAQ,EAAG,EAAnG,EAAqG,OAArG,CAAb;AACA,cAAMyB,OAAO,CAAE,sCAAqCvC,KAAK,CAACwE,KAAN,CAAYC,MAAZ,CAAmBnE,EAAG,EAA7D,EAAgE,QAAhE,CAAb;AACA,cAAMiC,OAAO,CAAE,sCAAqCvC,KAAK,CAACwE,KAAN,CAAYC,MAAZ,CAAmBnE,EAAG,wBAA7D,EAAqF,SAArF,CAAb;;AACA,YAAIQ,IAAI,KAAK,CAAb,EAAgB;AAC3BK,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,UAAAA,OAAO,CAAC,KAAD,CAAP;AACA,SAHW,MAGL;AACNE,UAAAA,QAAQ,CAAC,KAAD,CAAR;AACY;;AACD,YAAIL,IAAI,KAAKkB,KAAb,EAAoB;AAC/Bf,UAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,UAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,SAHW,MAGL;AACNF,UAAAA,OAAO,CAAC,KAAD,CAAP;AACY;AACJ,OAhBD,CAgBE,OAAOyD,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACApC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ;;AAEDiC,IAAAA,SAAS;AACZ,GAzBQ,EAyBN,CAACzD,IAAD,EAAMd,KAAK,CAACwE,KAAN,CAAYC,MAAZ,CAAmBnE,EAAzB,CAzBM,CAAT;;AA2BA,QAAMuE,gBAAgB,GAAG,CAACC,KAAD,EAAQhE,IAAR,KAAiB;AACtCC,IAAAA,OAAO,CAACD,IAAD,CAAP;;AACA,QAAIA,IAAI,KAAK,CAAb,EAAgB;AACZK,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAFD,MAEO;AACHA,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;;AAAA;;AACD,QAAIL,IAAI,KAAKkB,KAAb,EAAoB;AAChBf,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFD,MAEO;AACHA,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,GAZD;;AAaA,QAAM8D,YAAY,GAAG,CAACD,KAAD,EAAQE,QAAR,KAAqB;AACtCvE,IAAAA,QAAQ,CAACuE,QAAD,CAAR;AACD,GAFH;;AAGA,QAAMC,SAAS,GAAIC,IAAD,IAAU;AAC9B,wBACA,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,CAA7B;AAAgC,MAAA,EAAE,EAAE,CAApC;AAAuC,MAAA,EAAE,EAAE,CAA3C;AAAA,6BACC,QAAC,IAAD;AAAM,QAAA,SAAS,EAAExE,OAAO,CAAC/C,IAAzB;AAA+B,QAAA,OAAO,EAAC,UAAvC;AAAA,+BACA,QAAC,cAAD;AAAA,iCACC,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,qBAAoBuH,IAAI,CAAC5E,EAAG,EAAvC;AAAA,mCACA;AAAK,cAAA,SAAS,EAAC,gBAAf;AAAA,sCACC;AAAK,gBAAA,GAAG,EAAC,UAAT;AAAoB,gBAAA,GAAG,EAAE4E,IAAI,CAACC,KAAL,GAAaD,IAAI,CAACC,KAAL,CAAW,CAAX,EAAc3C,GAA3B,GAAiC0C,IAAI,CAACpB,MAAL,CAAY,CAAZ,EAAetB,GAAzE;AAA8E,gBAAA,KAAK,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA,sBADD,eAGE;AAAG,gBAAA,SAAS,EAAC,eAAb;AAAA,0BAA8B0C,IAAI,CAACrB;AAAnC;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADD,OAAoDqB,IAAI,CAAC5E,EAAzD;AAAA;AAAA;AAAA;AAAA,YADA;AAgBG,GAjBD;;AAmBH3C,EAAAA,IAAI,GAAGgD,SAAS,IAAIA,SAAS,CAACyE,GAAV,CAAeC,KAAD,IAAW;AACtC,WAAOJ,SAAS,CAACI,KAAD,CAAhB;AACH,GAFgB,CAApB;AAGG,MAAIC,OAAO,GAAGlE,GAAG,IAAIA,GAAG,CAACgE,GAAJ,CAASG,IAAD,IAAU;AACnC,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAG,CAACD,IAAI,CAACE,KAAT,EAAe;AACXD,MAAAA,OAAO,GAAG;AACNC,QAAAA,KAAK,EAACF;AADA,OAAV;AAGH,KAJD,MAIK;AACDC,MAAAA,OAAO,GAAID,IAAX;AACH;;AACD,wBACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEC;AAAZ,OAA0BD,IAAI,CAACjF,EAA/B;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAZoB,CAArB;;AAcA,MAAG6B,OAAH,EAAW;AACP,wBACL;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADK;AAKH,GAND,MAMM,IAAGE,KAAH,EAAS;AACX,wBACL;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADK;AAKH,GANK,MAMA;AACR,wBACQ;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEf,UAAnB;AAA+B,QAAA,KAAK,EAAEE,WAAtC;AAAmD,QAAA,KAAK,EAAEM,KAA1D;AAAiE,QAAA,EAAE,EAAExB,EAArE;AAAyE,QAAA,QAAQ,EAAEsB,OAAnF;AAA4F,QAAA,UAAU,EAAEF;AAAxG;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,QAAjB;AAA0B,QAAA,SAAS,EAAEhB,OAAO,CAACb,MAA7C;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEK,KAAb;AAAoB,UAAA,QAAQ,EAAE6E,YAA9B;AAA4C,wBAAW,qBAAvD;AAA6E,UAAA,QAAQ,MAArF;AAAsF,UAAA,OAAO,EAAC,WAA9F;AAAA,kCACI,QAAC,GAAD;AAAM,YAAA,KAAK,EAAC,YAAZ;AAAA,eAA6B1E,SAAS,CAAC,CAAD;AAAtC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,GAAD;AAAM,YAAA,KAAK,EAAC,WAAZ;AAAA,eAA4BA,SAAS,CAAC,CAAD;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEH,KAAjB;AAAwB,QAAA,KAAK,EAAE,CAA/B;AAAA,+BACA;AAAA,kCAEI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,SAAS,EAAEQ,OAAO,CAACpC,IAAnC;AAAyC,YAAA,OAAO,EAAE,CAAlD;AAAA,sBACSX;AADT;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAKKqE,KAAK,KAAK,CAAV,gBAAY;AAAK,YAAA,SAAS,EAAEtB,OAAO,CAAC1B,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAZ,gBACD;AAAK,YAAA,SAAS,EAAE0B,OAAO,CAAC1B,KAAxB;AAAA,mCACQ,QAAC,UAAD;AAAY,cAAA,KAAK,EAAEgD,KAAnB;AAA0B,cAAA,IAAI,EAAElB,IAAhC;AAAsC,cAAA,WAAW,EAAEA,IAAnD;AAAyD,cAAA,QAAQ,EAAE+D,gBAAnE;AAAqF,cAAA,OAAO,EAAC,UAA7F;AAAwG,cAAA,KAAK,EAAC,SAA9G;AAAwH,cAAA,cAAc,EAAE3D,OAAxI;AAAiJ,cAAA,cAAc,EAAEF;AAAjK;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cARF,eAoBE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEd,KAAjB;AAAwB,QAAA,KAAK,EAAE,CAA/B;AAAA,gCACA;AAAK,UAAA,SAAS,EAAEQ,OAAO,CAACf,qBAAxB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAEe,OAAO,CAACrB,iBAAxB;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAEqB,OAAO,CAAClB,kBAAxB;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAOI;AAAK,YAAA,SAAS,EAAEkB,OAAO,CAACnB,iBAAxB;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAUI;AAAK,YAAA,SAAS,EAAEmB,OAAO,CAAChB,iBAAxB;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAaI;AAAK,YAAA,SAAS,EAAEgB,OAAO,CAACjB,kBAAxB;AAAA,mCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAmBC6F,OAnBD;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF,eAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AA6CG;AACJ,CApND;;GAAM/E,S;UACe/C,W,EAGDE,S;;;MAJd6C,S;AAyNN,qBAAe5D,UAAU,CAAC4D,SAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Card, CardActionArea,  Grid,  makeStyles,  Box, Tabs, Tab, AppBar } from '@material-ui/core';\nimport '../App.css';\nimport Song from './Song';\nimport Information from './Infotmation';\nimport { useSelector, useDispatch } from 'react-redux';\nimport playAction from '../actions/playAction'\nconst useStyles = makeStyles({\n    card: {\n\t\tmaxWidth: 300,\n\t\theight: 'auto',\n\t\tmarginLeft: '20px',\n\t\tmarginRight: '20px',\n\t\tborderRadius: 5,\n\t\tborder: '1px solid #1e8678',\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n\t},\n\ttitleHead: {\n\t\tborderBottom: '1px solid #1e8678',\n\t\tfontWeight: 'bold'\n\t},\n\tgrid: {\n\t\tflexGrow: 1,\n\t\tflexDirection: 'row'\n\t},\n\tmedia: {\n\t\theight: '100%',\n\t\twidth: '100%'\n\t},\n\tbutton: {\n\t\tcolor: '#1e8678',\n\t\tfontWeight: 'bold',\n\t\tfontSize: 12\n\t},\n\tbtnGroup: {\n\t\tmarginTop: '50px'\n\t},\n\tpages: {\n\n\t\ttextAlign: 'center',\n\t\tmargin: '100px',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n    },\n    song_title_header:{\n        width: '300px'\n    },\n    song_title_header1: {\n        width: '300px'\n    },\n    song_album_header: {\n        width: '250px'\n    },\n    song_artist_header: {\n        width: '200px'\n    },\n    song_length_header: {\n        width: '60px'\n    },\n    song_added_header: {\n        width: '150px'\n    },\n    song_header_container: {\n        display: 'flex',\n        borderBottom: '1px solid #666',\n        paddingBottom: '6px',\n        marginTop: '20px'\n    },\n    appbar: {\n        background:'#006600',\n        marginLeft:'30px',\n        marginRight:'30px',\n        width: 'auto',\n    },\n});\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={2}>\n            <div>{children}</div>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nconst AlbumList = (props) => {\n    const dispatch = useDispatch();\n    const [value, setValue] = React.useState(0);\n    //const regex = /(<([^>]+)>)/gi;\n    const classes = useStyles();\n    const [ albumList, setAlbumList ]  = useState(undefined);\n    const [page, setPage] = useState(1);\n\tconst [isLast, setLast] = useState(false);\n    const [isFirst, setFirst] = useState(true);\n    const [ top, setTop] = useState(undefined);\n\tconst [singerName, setSingerName] = useState('');\n    const [singerPhoto, setSingerPhoto] = useState('');\n    const [singerPop, setSingerPop] = useState(0);\n    const [singerF, setSingerF] = useState(0);\n    const [genre, setGenre] = useState(undefined);\n    const [total, setTotal] = useState(undefined);\n    const [id, setId] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n    const [error, setError]  =  useState(false);\n\n\tlet card = null;\n\n\tasync function getData(url, type){\n        var request = require('request');\n        var client_id = 'c9b1db19becd48f78d6913a3431ae24a'; // Your client id\n        var client_secret = '98145905039345c4a5df9542ca98cc55'; // Your secret\n        var authOptions = {\n            url: 'https://accounts.spotify.com/api/token',\n            headers: {\n              'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n            },\n            form: {\n              grant_type: 'client_credentials'\n            },\n            json: true\n        };\n        request.post(authOptions,function(error, response,body){\n            if (!error && response.statusCode === 200) {\n                    var token = body.access_token;\n                    var options = {\n                        url: url,\n                        headers: {\n                            'Authorization': 'Bearer ' + token\n                        },\n                        json: true\n                    };\n                    request.get(options, function(error, response, body) {\n                    if(error){\n                        setError(true);\n                        setLoading(false);\n                    } else {\n                        if(type === 'artist'){\n                            setSingerName(body.name);\n                            setId(body.id);\n                            setSingerPhoto(body.images[1].url);\n                            setGenre(body.genres);\n                            setSingerPop(body.popularity);\n                            setSingerF(body.followers.total);\n                        }\n                        if(type === 'album'){\n                            setAlbumList(body.items);\n                            setTotal(Math.ceil(body.total / 24));\n                        }\n                        if(type === 'topSong'){\n                            setTop(body.tracks);\n                            dispatch(playAction.updateSongList(body.tracks, 'albums'));\n                        }\n                        setLoading(false);\n                    }\n                    });\n            }\n        });\n    }\n\n    useEffect(() => {\n        async function fetchData(){\n            try{\n                await getData(`https://api.spotify.com/v1/artists/${props.match.params.id}/albums?limit=24&&offset=${page*24-24}`,'album');\n                await getData(`https://api.spotify.com/v1/artists/${props.match.params.id}`, 'artist');\n                await getData(`https://api.spotify.com/v1/artists/${props.match.params.id}/top-tracks?country=SE`,'topSong');\n                if (page === 1) {\n\t\t\t\t\tsetFirst(true);\n\t\t\t\t\tsetLast(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetFirst(false);\n                }\n                if (page === total) {\n\t\t\t\t\tsetLast(true);\n\t\t\t\t\tsetFirst(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetLast(false);\n                }\n            } catch (e) {\n                console.log(e);\n                setError(true);\n            }\n        }\n\n        fetchData();\n    }, [page,props.match.params.id]);\n\n    const changePageHandle = (event, page) => {\n        setPage(page);\n        if (page === 1) {\n            setFirst(true);\n        } else {\n            setFirst(false);\n        };\n        if (page === total) {\n            setLast(true);\n        } else {\n            setLast(false);\n        }\n    }\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n      };\n    const buildList = (albm) => {\n\t\treturn (\n\t\t<Grid item xs={6} sm={4} md={3} lg={2} xl={2}  key={albm.id}>\n\t\t\t<Card className={classes.card} variant='outlined'>\n\t\t\t<CardActionArea>\n\t\t\t\t<Link to={`/albums/songsList/${albm.id}`}>\n\t\t\t\t<div className='category-image'>\n\t\t\t\t\t<img alt=\"category\" src={albm.icons ? albm.icons[0].url : albm.images[1].url} width='100%'/>\n\n\t\t\t\t\t <p className='category-name'>{albm.name}</p>\n\n\t\t\t\t</div>\n\t\t\t\t</Link>\n\t\t\t</CardActionArea>\n\t\t\t</Card>\n\t\t</Grid>\n\t\t);\n    };\n\n\tcard = albumList && albumList.map((album) => {\n        return buildList(album);\n    });\n    let topList = top && top.map((song) => {\n        let NewSong = null;\n        if(!song.track){\n            NewSong = {\n                track:song\n            }\n        }else{\n            NewSong =  song;\n        }\n        return (\n            <Song song={NewSong} key={song.id}></Song>\n        )\n    });\n\n    if(loading){\n        return (\n\t\t\t<div>\n\t\t\t\t<h2>Loading....</h2>\n\t\t\t</div>\n\t\t);\n    }else if(error){\n        return (\n\t\t\t<div>\n\t\t\t\t<h2>Error....</h2>\n\t\t\t</div>\n\t\t);\n    }else {\n\t\treturn (\n          <div>\n            <Information name={singerName} image={singerPhoto} genre={genre} id={id} follower={singerF} popularity={singerPop}></Information>\n            <AppBar position=\"static\" className={classes.appbar}>\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" centered variant=\"fullWidth\">\n                    <Tab  label=\"All Albums\" {...a11yProps(0)} />\n                    <Tab  label=\"Top Songs\" {...a11yProps(1)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n            <div>\n\n                <Grid container className={classes.grid} spacing={2}>\n                        {card}\n                </Grid>\n                {total === 1?<div className={classes.pages}>No More</div>:\n                <div className={classes.pages}>\n                        <Pagination count={total} page={page} defaultPage={page} onChange={changePageHandle} variant=\"outlined\" shape=\"rounded\" hidePrevButton={isFirst} hideNextButton={isLast} />\n                </div>}\n            </div>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n            <div className={classes.song_header_container}>\n                <div className={classes.song_title_header}>\n                    <p>Title</p>\n                </div>\n                <div className={classes.song_artist_header}>\n                    <p>Artist</p>\n                </div>\n                <div className={classes.song_album_header}>\n                    <p>Album</p>\n                </div>\n                <div className={classes.song_added_header}>\n                    <p>Date</p>\n                </div>\n                <div className={classes.song_length_header}>\n                <p>Duration</p>\n                </div>\n\n            </div>\n            {topList}\n            </TabPanel>\n            <div>No More</div>\n          </div>\n        );\n    }\n}\n\n\n\n\nexport default withRouter(AlbumList);\n"]},"metadata":{},"sourceType":"module"}