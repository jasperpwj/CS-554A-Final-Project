{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SongList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport Song from './Song';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { makeStyles } from '@material-ui/core';\nimport Information from './Infotmation';\nimport { useSelector, useDispatch } from 'react-redux';\nimport playAction from '../actions/playAction';\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 250,\n    height: 'auto',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    borderRadius: 5,\n    border: '1px solid #1e8678',\n    boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n  },\n  play_control_header: {\n    width: '200px'\n  },\n  titleHead: {\n    borderBottom: '1px solid #1e8678',\n    fontWeight: 'bold'\n  },\n  grid: {\n    flexGrow: 1,\n    flexDirection: 'row'\n  },\n  media: {\n    height: '100%',\n    width: '100%'\n  },\n  button: {\n    color: '#1e8678',\n    fontWeight: 'bold',\n    fontSize: 12\n  },\n  btnGroup: {\n    marginTop: '50px'\n  },\n  song_li: {\n    listStyleType: 'none',\n    borderBottom: '1px solid #666',\n    display: 'flex',\n    lineHeight: 'normal',\n    fontSize: '14px',\n    cursor: 'pointer',\n    '&:hover': {\n      color: '#1db954',\n      background: '#bbbebc'\n    }\n  },\n  song_title_header: {\n    width: '300px'\n  },\n  song_title: {\n    width: '300px'\n  },\n  song_title_header1: {\n    width: '300px'\n  },\n  song_album: {\n    width: '250px'\n  },\n  song_album_header: {\n    width: '250px'\n  },\n  song_artist: {\n    width: '200px'\n  },\n  song_artist_header: {\n    width: '200px'\n  },\n  song_length: {\n    width: '60px'\n  },\n  song_icon: {\n    width: '60px',\n    textAlign: 'center',\n    position: 'relative',\n    top: '10px'\n  },\n  song_length_header: {\n    width: '100px'\n  },\n  song_added: {\n    width: '150px'\n  },\n  song_added_header: {\n    width: '200px'\n  },\n  song_header_container: {\n    display: 'flex',\n    borderBottom: '1px solid #666',\n    paddingBottom: '6px',\n    marginTop: '20px',\n    marginLeft: '30px',\n    marginRight: '30px',\n    background: '#ccffcc'\n  },\n  pages: {\n    textAlign: 'center',\n    margin: '100px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'black',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n  linkhover: {\n    textDecoration: 'underline'\n  }\n});\n\nconst SongList = props => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [song, setSong] = useState(undefined);\n  const [isLast, setLast] = useState(false);\n  const [isFirst, setFirst] = useState(true);\n  const [total, setTotal] = useState(undefined);\n  const [description, setDescription] = useState(undefined);\n  const [image, setImage] = useState(undefined);\n  const [follow, setFollow] = useState(undefined);\n  const [name, setName] = useState(undefined);\n  const [owner, setOwner] = useState(undefined);\n  const [date, setDate] = useState(undefined);\n  const [artists, setArtists] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  async function getData(url, type) {\n    var request = require('request');\n\n    var client_id = 'c9b1db19becd48f78d6913a3431ae24a'; // Your client id\n\n    var client_secret = '98145905039345c4a5df9542ca98cc55'; // Your secret\n\n    var authOptions = {\n      url: 'https://accounts.spotify.com/api/token',\n      headers: {\n        'Authorization': 'Basic ' + new Buffer(client_id + ':' + client_secret).toString('base64')\n      },\n      form: {\n        grant_type: 'client_credentials'\n      },\n      json: true\n    };\n    request.post(authOptions, function (error, response, body) {\n      if (!error && response.statusCode === 200) {\n        var token = body.access_token;\n        var options = {\n          url: url,\n          headers: {\n            'Authorization': 'Bearer ' + token\n          },\n          json: true\n        };\n        request.get(options, function (error, response, body) {\n          if (error) {\n            setError(true);\n            setLoading(false);\n          } else {\n            if (type === 'playlists') {\n              //console.log(body)\n              setDescription(body.description || body.label);\n              setImage(body.images[0].url);\n              setFollow(body.followers ? body.followers.total : body.popularity);\n              setName(body.name);\n              setOwner(body.owner ? body.owner.display_name : 'author');\n              setArtists(body.artists);\n              setDate(body.release_date);\n            }\n\n            if (type === 'song') {\n              // console.log(body);\n              setTotal(Math.ceil(body.total / 10));\n              setSong(body.items);\n              dispatch(playAction.updateSongList(body.items));\n            }\n\n            setLoading(false);\n          }\n        });\n      }\n    });\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        await getData(`https://api.spotify.com/v1/${props.match.params.type}/${props.match.params.id}`, 'playlists');\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    fetchData();\n  }, [props.match.params.id, props.match.params.type]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        await getData(`https://api.spotify.com/v1/${props.match.params.type}/${props.match.params.id}/tracks?limit=10&&offset=${page * 10 - 10}`, 'song');\n\n        if (page === 1) {\n          setFirst(true);\n          setLast(false);\n        } else {\n          setFirst(false);\n        }\n\n        if (page === total) {\n          setLast(true);\n          setFirst(false);\n        } else {\n          setLast(false);\n        }\n      } catch (e) {\n        console.log(e);\n        setError(true);\n      }\n    }\n\n    fetchData();\n  }, [page, props.match.params.id, total, props.match.params.type]);\n\n  const changePageHandle = (event, page) => {\n    setPage(page);\n\n    if (page === 1) {\n      setFirst(true);\n    } else {\n      setFirst(false);\n    }\n\n    ;\n\n    if (page === total) {\n      setLast(true);\n    } else {\n      setLast(false);\n    }\n  };\n\n  const buildList = (song, index) => {\n    console.log(index);\n    return /*#__PURE__*/_jsxDEV(Song, {\n      song: song,\n      index: index\n    }, song.id ? song.id : song.track.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this);\n  };\n\n  let related_album = [];\n  let NewSong = null;\n  let card = song && song.map((song, index) => {\n    if (!song.track) {\n      NewSong = {\n        track: song\n      };\n    } else {\n      NewSong = song;\n    }\n\n    if (song.track) {\n      related_album.push(song.track.album.images[1]);\n    }\n\n    return buildList(NewSong, index);\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 4\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 4\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Information, {\n          artists: artists,\n          date: date,\n          name: name,\n          image: image,\n          id: \"\",\n          popularity: \"\",\n          follower: follow,\n          description: description,\n          owner: owner,\n          related_album: related_album\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.song_header_container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.play_control_header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.song_title_header,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.song_artist_header,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.song_album_header,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.song_added_header,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.song_length_header,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }, this), card, total === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.pages,\n        children: \"No More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.pages,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: total,\n          page: page,\n          defaultPage: page,\n          onChange: changePageHandle,\n          variant: \"outlined\",\n          shape: \"rounded\",\n          hidePrevButton: isFirst,\n          hideNextButton: isLast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this);\n  }\n};\n\n_s(SongList, \"2jw4hXSaigNN7XBV89rmwfLicpc=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = SongList;\nexport default _c2 = withRouter(SongList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SongList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SongList.js"],"names":["React","useState","useEffect","withRouter","Song","Pagination","makeStyles","Information","useSelector","useDispatch","playAction","useStyles","card","maxWidth","height","marginLeft","marginRight","borderRadius","border","boxShadow","play_control_header","width","titleHead","borderBottom","fontWeight","grid","flexGrow","flexDirection","media","button","color","fontSize","btnGroup","marginTop","song_li","listStyleType","display","lineHeight","cursor","background","song_title_header","song_title","song_title_header1","song_album","song_album_header","song_artist","song_artist_header","song_length","song_icon","textAlign","position","top","song_length_header","song_added","song_added_header","song_header_container","paddingBottom","pages","margin","justifyContent","link","textDecoration","linkhover","SongList","props","classes","dispatch","page","setPage","song","setSong","undefined","isLast","setLast","isFirst","setFirst","total","setTotal","description","setDescription","image","setImage","follow","setFollow","name","setName","owner","setOwner","date","setDate","artists","setArtists","loading","setLoading","error","setError","getData","url","type","request","require","client_id","client_secret","authOptions","headers","Buffer","toString","form","grant_type","json","post","response","body","statusCode","token","access_token","options","get","label","images","followers","popularity","display_name","release_date","Math","ceil","items","updateSongList","fetchData","match","params","id","e","console","log","changePageHandle","event","buildList","index","track","related_album","NewSong","map","push","album"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {  withRouter } from 'react-router-dom';\nimport Song from './Song';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { makeStyles } from '@material-ui/core';\nimport Information from './Infotmation';\nimport { useSelector, useDispatch } from 'react-redux';\nimport playAction from '../actions/playAction'\nconst useStyles = makeStyles({\n\tcard: {\n\t\tmaxWidth: 250,\n\t\theight: 'auto',\n\t\tmarginLeft: 'auto',\n\t\tmarginRight: 'auto',\n\t\tborderRadius: 5,\n\t\tborder: '1px solid #1e8678',\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n    },\n    play_control_header:{\n        width:'200px',\n    },\n\ttitleHead: {\n\t\tborderBottom: '1px solid #1e8678',\n\t\tfontWeight: 'bold'\n\t},\n\tgrid: {\n\t\tflexGrow: 1,\n\t\tflexDirection: 'row'\n\t},\n\tmedia: {\n\t\theight: '100%',\n\t\twidth: '100%'\n\t},\n\tbutton: {\n\t\tcolor: '#1e8678',\n\t\tfontWeight: 'bold',\n\t\tfontSize: 12\n\t},\n\tbtnGroup: {\n\t\tmarginTop: '50px'\n\t},\n\tsong_li: {\n        listStyleType: 'none',\n        borderBottom: '1px solid #666',\n        display: 'flex',\n        lineHeight: 'normal',\n        fontSize: '14px',\n        cursor: 'pointer',\n        '&:hover':{\n            color: '#1db954',\n            background: '#bbbebc'\n        }\n    },\n    song_title_header:{\n        width: '300px'\n    },\n    song_title: {\n        width: '300px'\n    },\n    song_title_header1: {\n        width: '300px'\n    },\n    song_album:{\n        width: '250px'\n    },\n    song_album_header: {\n        width: '250px'\n    },\n    song_artist:{\n        width: '200px'\n    },\n    song_artist_header: {\n        width: '200px'\n    },\n    song_length:{\n        width: '60px',\n    },\n    song_icon:{\n        width: '60px',\n        textAlign:'center',\n        position: 'relative',\n        top: '10px'\n    },\n    song_length_header: {\n        width: '100px'\n    },\n    song_added:{\n        width: '150px'\n    },\n    song_added_header: {\n        width: '200px'\n    },\n    song_header_container: {\n        display: 'flex',\n        borderBottom: '1px solid #666',\n        paddingBottom: '6px',\n        marginTop: '20px',\n        marginLeft:'30px',\n        marginRight:'30px',\n        background:'#ccffcc',\n\n    },\n\tpages: {\n\n\t\ttextAlign: 'center',\n\t\tmargin: '100px',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'black',\n        '&:hover':{\n            textDecoration: 'underline'\n        }\n    },\n    linkhover :{\n        textDecoration: 'underline'\n    }\n\n});\nconst SongList = (props)=>{\n    const classes = useStyles();\n    const dispatch =  useDispatch();\n    const [ page, setPage ] = useState(1);\n    const [ song, setSong ] = useState(undefined);\n    const [isLast, setLast] = useState(false);\n    const [isFirst, setFirst] = useState(true);\n    const [ total, setTotal] = useState(undefined);\n    const [ description, setDescription] = useState(undefined);\n    const [ image, setImage] = useState(undefined);\n    const [ follow, setFollow] = useState(undefined);\n    const [ name, setName] = useState(undefined);\n    const [ owner, setOwner] = useState(undefined);\n    const [ date, setDate] = useState(undefined);\n    const [ artists, setArtists] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n    const [error, setError]  =  useState(false);\n\n    async function getData(url, type){\n        var request = require('request');\n        var client_id = 'c9b1db19becd48f78d6913a3431ae24a'; // Your client id\n        var client_secret = '98145905039345c4a5df9542ca98cc55'; // Your secret\n        var authOptions = {\n            url: 'https://accounts.spotify.com/api/token',\n            headers: {\n              'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n            },\n            form: {\n              grant_type: 'client_credentials'\n            },\n            json: true\n        };\n        request.post(authOptions,function(error, response,body){\n            if (!error && response.statusCode === 200) {\n                    var token = body.access_token;\n                    var options = {\n                        url: url,\n                        headers: {\n                            'Authorization': 'Bearer ' + token\n                        },\n                        json: true\n                    };\n                    request.get(options, function(error, response, body) {\n                    if(error){\n                        setError(true);\n                        setLoading(false);\n                    }else{\n                        if(type === 'playlists'){\n                            //console.log(body)\n                            setDescription(body.description||body.label);\n                            setImage(body.images[0].url);\n                            setFollow(body.followers?body.followers.total:body.popularity);\n                            setName(body.name);\n                            setOwner(body.owner?body.owner.display_name:'author');\n                            setArtists(body.artists);\n                            setDate(body.release_date);\n                        }\n                        if(type === 'song'){\n                            // console.log(body);\n                            setTotal(Math.ceil(body.total / 10));\n                            setSong(body.items);\n                            dispatch(playAction.updateSongList(body.items));\n\n                        }\n                        setLoading(false);\n                    }\n                    });\n            }\n        });\n    }\n    useEffect(()=>{\n        async function fetchData(){\n            try{\n                await getData(`https://api.spotify.com/v1/${props.match.params.type}/${props.match.params.id}`, 'playlists')\n            }catch(e){\n                console.log(e);\n            }\n        }\n        fetchData();\n    },[props.match.params.id,props.match.params.type])\n\n\n    useEffect(()=> {\n        async function fetchData () {\n            try{\n                await getData(`https://api.spotify.com/v1/${props.match.params.type}/${props.match.params.id}/tracks?limit=10&&offset=${page*10-10}`,'song');\n                if (page === 1) {\n\t\t\t\t\tsetFirst(true);\n\t\t\t\t\tsetLast(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetFirst(false);\n                }\n                if (page === total) {\n\t\t\t\t\tsetLast(true);\n\t\t\t\t\tsetFirst(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetLast(false);\n                }\n            } catch (e) {\n                console.log(e);\n                setError(true);\n            }\n        }\n\n        fetchData();\n    }, [page, props.match.params.id,total,props.match.params.type]);\n    const changePageHandle = (event, page) => {\n\t\tsetPage(page);\n\t\tif (page === 1) {\n\t\t\tsetFirst(true);\n\t\t} else {\n\t\t\tsetFirst(false);\n\t\t};\n\t\tif (page === total) {\n\t\t\tsetLast(true);\n\t\t} else {\n\t\t\tsetLast(false);\n\t\t}\n    }\n\n    const buildList = (song, index)=>{\n        console.log(index);\n        return (\n            <Song song={song} key={song.id?song.id:song.track.id} index={index}></Song>\n        )\n    }\n    let related_album = [];\n    let NewSong = null;\n    let card = song && song.map((song, index) => {\n        if(!song.track){\n            NewSong = {\n                track:song\n            }\n        }else{\n            NewSong =  song;\n        }\n\n        if(song.track){\n            related_album.push(song.track.album.images[1]);\n        }\n        return buildList(NewSong, index);\n    });\n\n    if(loading){\n        return (\n\t\t\t<div>\n\t\t\t\t<h2>Loading....</h2>\n\t\t\t</div>\n\t\t);\n    }else if(error){\n        return (\n\t\t\t<div>\n\t\t\t\t<h2>Error....</h2>\n\t\t\t</div>\n\t\t);\n    }else {\n        return(\n\n        <div>\n            <div>\n                <Information artists={artists} date={date} name={name} image={image}  id='' popularity=''  follower={follow} description={description} owner={owner} related_album={related_album}></Information>\n            </div>\n            <div className={classes.song_header_container}>\n            <div className={classes.play_control_header}>\n\n            </div>\n            <div className={classes.song_title_header}>\n                <p>Title</p>\n            </div>\n            <div className={classes.song_artist_header}>\n                <p>Artist</p>\n            </div>\n            <div className={classes.song_album_header}>\n                <p>Album</p>\n            </div>\n            <div className={classes.song_added_header}>\n                <p>Date</p>\n            </div>\n            <div className={classes.song_length_header}>\n            <p>Duration</p>\n            </div>\n            </div>\n            {card}\n            {total === 1?<div className={classes.pages}>No More</div>:\n                <div className={classes.pages}>\n                <Pagination count={total} page={page} defaultPage={page} onChange={changePageHandle} variant=\"outlined\" shape=\"rounded\" hidePrevButton={isFirst} hideNextButton={isLast} />\n            </div>}\n            </div>\n        );\n    }\n\n\n\n}\nexport default withRouter(SongList);"]},"metadata":{},"sourceType":"module"}