{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/GenresList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Card, CardActionArea, Grid, makeStyles, AppBar, Tab } from '@material-ui/core';\nimport '../App.css';\nconst useStyles = makeStyles({\n  appbar: {\n    background: '#006600',\n    marginLeft: '30px',\n    marginRight: '30px',\n    width: 'auto',\n    marginBottom: '30px'\n  },\n  card: {\n    maxWidth: 200,\n    height: 'auto',\n    marginLeft: '30px',\n    marginRight: '30px',\n    borderRadius: 5,\n    border: '1px solid #1e8678',\n    boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n  },\n  titleHead: {\n    borderBottom: '1px solid #1e8678',\n    fontWeight: 'bold'\n  },\n  grid: {\n    flexGrow: 1,\n    flexDirection: 'row'\n  },\n  media: {\n    height: '100%',\n    width: '100%'\n  },\n  button: {\n    color: '#1e8678',\n    fontWeight: 'bold',\n    fontSize: 12\n  },\n  btnGroup: {\n    marginTop: '50px'\n  },\n  pages: {\n    textAlign: 'center',\n    margin: '100px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  }\n});\n\nconst GenresList = props => {\n  _s();\n\n  const classes = useStyles();\n  const [genresList, setGenresList] = useState(undefined);\n  const [page, setPage] = useState(1);\n  const [isLast, setLast] = useState(false);\n  const [isFirst, setFirst] = useState(true);\n  const [total, setTotal] = useState(undefined);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  let card = null;\n\n  async function getData(url) {\n    var request = require('request');\n\n    var client_id = 'c9b1db19becd48f78d6913a3431ae24a'; // Your client id\n\n    var client_secret = '98145905039345c4a5df9542ca98cc55'; // Your secret\n\n    var authOptions = {\n      url: 'https://accounts.spotify.com/api/token',\n      headers: {\n        'Authorization': 'Basic ' + new Buffer(client_id + ':' + client_secret).toString('base64')\n      },\n      form: {\n        grant_type: 'client_credentials'\n      },\n      json: true\n    };\n    request.post(authOptions, function (error, response, body) {\n      if (!error && response.statusCode === 200) {\n        var token = body.access_token;\n        var options = {\n          url: url,\n          headers: {\n            'Authorization': 'Bearer ' + token\n          },\n          json: true\n        };\n        request.get(options, function (error, response, body) {\n          if (error) {\n            setError(true);\n            setLoading(false);\n          } else {\n            setTotal(Math.ceil(body.categories.total / 24));\n            setGenresList(body.categories.items);\n            setLoading(false);\n          }\n        });\n      }\n    });\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        await getData(`https://api.spotify.com/v1/browse/categories?limit=24&&offset=${page * 24 - 24}`);\n\n        if (page === 1) {\n          setFirst(true);\n          setLast(false);\n        } else {\n          setFirst(false);\n        }\n\n        if (page === total) {\n          setLast(true);\n          setFirst(false);\n        } else {\n          setLast(false);\n        }\n      } catch (e) {\n        console.log(e);\n        setError(true);\n      }\n    }\n\n    fetchData();\n  }, [page]);\n\n  const changePageHandle = (event, page) => {\n    setPage(page);\n\n    if (page === 1) {\n      setFirst(true);\n    } else {\n      setFirst(false);\n    }\n\n    ;\n\n    if (page === total) {\n      setLast(true);\n    } else {\n      setLast(false);\n    }\n  };\n\n  const buildCard = genre => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      md: 3,\n      lg: 2,\n      xl: 2,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.card,\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/${genre.id}/playList`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-image\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"category\",\n                src: genre.icons ? genre.icons[0].url : genre.images[0].url,\n                width: \"100%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"category-name\",\n                children: genre.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this)\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this);\n  };\n\n  card = genresList && genresList.map(genre => {\n    return buildCard(genre);\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        className: classes.appbar,\n        children: /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.grid,\n        spacing: 2,\n        children: card\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this), total === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.pages,\n        children: \"No More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.pages,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          count: total,\n          page: page,\n          defaultPage: page,\n          onChange: changePageHandle,\n          variant: \"outlined\",\n          shape: \"rounded\",\n          hidePrevButton: isFirst,\n          hideNextButton: isLast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }, this);\n  }\n};\n\n_s(GenresList, \"AJtgwyV4/hxS2dq2GLZ1a7USG34=\", false, function () {\n  return [useStyles];\n});\n\n_c = GenresList;\nexport default _c2 = withRouter(GenresList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GenresList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/GenresList.js"],"names":["React","useState","useEffect","Link","withRouter","Pagination","Card","CardActionArea","Grid","makeStyles","AppBar","Tab","useStyles","appbar","background","marginLeft","marginRight","width","marginBottom","card","maxWidth","height","borderRadius","border","boxShadow","titleHead","borderBottom","fontWeight","grid","flexGrow","flexDirection","media","button","color","fontSize","btnGroup","marginTop","pages","textAlign","margin","display","justifyContent","GenresList","props","classes","genresList","setGenresList","undefined","page","setPage","isLast","setLast","isFirst","setFirst","total","setTotal","loading","setLoading","error","setError","getData","url","request","require","client_id","client_secret","authOptions","headers","Buffer","toString","form","grant_type","json","post","response","body","statusCode","token","access_token","options","get","Math","ceil","categories","items","fetchData","e","console","log","changePageHandle","event","buildCard","genre","id","icons","images","name","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Card, CardActionArea,  Grid,  makeStyles, AppBar,Tab } from '@material-ui/core';\nimport '../App.css';\nconst useStyles = makeStyles({\n    appbar: {\n        background:'#006600',\n        marginLeft:'30px',\n        marginRight:'30px',\n        width: 'auto',\n        marginBottom:'30px',\n    },\n\tcard: {\n\t\tmaxWidth: 200,\n\t\theight: 'auto',\n\t\tmarginLeft: '30px',\n\t\tmarginRight: '30px',\n\t\tborderRadius: 5,\n\t\tborder: '1px solid #1e8678',\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n\t},\n\ttitleHead: {\n\t\tborderBottom: '1px solid #1e8678',\n\t\tfontWeight: 'bold'\n\t},\n\tgrid: {\n\t\tflexGrow: 1,\n\t\tflexDirection: 'row'\n\t},\n\tmedia: {\n\t\theight: '100%',\n\t\twidth: '100%'\n\t},\n\tbutton: {\n\t\tcolor: '#1e8678',\n\t\tfontWeight: 'bold',\n\t\tfontSize: 12\n\t},\n\tbtnGroup: {\n\t\tmarginTop: '50px'\n\t},\n\tpages: {\n\t\ttextAlign: 'center',\n\t\tmargin: '100px',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t}\n});\n\nconst GenresList = (props) =>{\n    const classes = useStyles();\n    const [ genresList, setGenresList ] = useState(undefined);\n    const [page, setPage] = useState(1);\n    const [isLast, setLast] = useState(false);\n    const [isFirst, setFirst] = useState(true);\n    const [total, setTotal] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n    const [error, setError]  =  useState(false);\n    let card = null;\n\n    async function getData(url){\n        var request = require('request');\n        var client_id = 'c9b1db19becd48f78d6913a3431ae24a'; // Your client id\n        var client_secret = '98145905039345c4a5df9542ca98cc55'; // Your secret\n        var authOptions = {\n            url: 'https://accounts.spotify.com/api/token',\n            headers: {\n              'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n            },\n            form: {\n              grant_type: 'client_credentials'\n            },\n            json: true\n        };\n        request.post(authOptions,function(error, response,body){\n            if (!error && response.statusCode === 200) {\n                    var token = body.access_token;\n                    var options = {\n                        url: url,\n                        headers: {\n                            'Authorization': 'Bearer ' + token\n                        },\n                        json: true\n                    };\n                    request.get(options, function(error, response, body) {\n                    if(error){\n                        setError(true);\n                        setLoading(false);\n                    }else{\n                    setTotal(Math.ceil(body.categories.total / 24));\n                    setGenresList(body.categories.items);\n                    setLoading(false);\n                    }\n                    });\n            }\n        });\n    }\n\n\n    useEffect(()=> {\n        async function fetchData () {\n            try{\n\n                await getData(`https://api.spotify.com/v1/browse/categories?limit=24&&offset=${page*24-24}`);\n                if (page === 1) {\n\t\t\t\t\tsetFirst(true);\n\t\t\t\t\tsetLast(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetFirst(false);\n                }\n                if (page === total) {\n\t\t\t\t\tsetLast(true);\n\t\t\t\t\tsetFirst(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetLast(false);\n                }\n            } catch (e) {\n                console.log(e);\n                setError(true);\n            }\n        }\n\n        fetchData();\n    }, [page]);\n\n\n    const changePageHandle = (event, page) => {\n        setPage(page);\n        if (page === 1) {\n            setFirst(true);\n        } else {\n            setFirst(false);\n        };\n        if (page === total) {\n            setLast(true);\n        } else {\n            setLast(false);\n        }\n    }\n\n\n        const buildCard = (genre)  => {\n            return(\n                <Grid item xs={12} sm={4} md={3} lg={2} xl={2}  key={genre.id}>\n                    <Card className={classes.card} variant='outlined'>\n                    <CardActionArea>\n                        <Link to={`/${genre.id}/playList`}>\n                        <div className='category-image'>\n                            <img alt=\"category\" src={genre.icons ? genre.icons[0].url : genre.images[0].url} width='100%'/>\n\n                             <p className='category-name'>{genre.name}</p>\n\n                        </div>\n                        </Link>\n                    </CardActionArea>\n                    </Card>\n                </Grid>\n            );\n        };\n        card = genresList && genresList.map((genre) => {\n            return buildCard(genre);\n        });\n        if(loading){\n            return (\n                <div>\n                    <h2>Loading....</h2>\n                </div>\n            );\n        }else if(error){\n            return (\n                <div>\n                    <h2>Error....</h2>\n                </div>\n            );\n        }else {\n            return (\n                <div>\n                    <AppBar position=\"static\" className={classes.appbar}>\n                    <Tab  label=\"All Categories\" />\n                    </AppBar>\n                    <Grid container className={classes.grid} spacing={2}>\n                        {card}\n                    </Grid>\n                    {total === 1?<div className={classes.pages}>No More</div>:\n                    <div className={classes.pages}>\n                        <Pagination count={total} page={page} defaultPage={page} onChange={changePageHandle} variant=\"outlined\" shape=\"rounded\" hidePrevButton={isFirst} hideNextButton={isLast} />\n                    </div>}\n\n                </div>\n            );\n        }\n\n};\n\nexport default withRouter(GenresList);"]},"metadata":{},"sourceType":"module"}