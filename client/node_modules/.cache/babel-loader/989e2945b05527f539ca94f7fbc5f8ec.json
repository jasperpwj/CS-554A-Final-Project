{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SongPlay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport playAction from '../actions/playAction';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport FastForwardIcon from '@material-ui/icons/FastForward';\nimport FastRewindIcon from '@material-ui/icons/FastRewind';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles({\n  song_details: {\n    position: 'absolute',\n    left: '20px',\n    lineHeight: '22px'\n  },\n  song_name: {\n    fontFamily: '\"Proxima Nova\" Georgia sans-serif',\n    color: '#fff',\n    fontSize: '14px'\n  },\n  artist_name: {\n    fontFamily: '\"Proxima Nova\" Georgia sans-serif',\n    color: '#aaa',\n    fontSize: '12px'\n  },\n  progress_container: {\n    position: 'relative',\n    top: '-7px',\n    fontSize: '40px',\n    margin: '0 5px',\n    marginTop: '10px',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  progress: {\n    width: '500px',\n    height: '4px',\n    background: 'rgb(64, 64, 64)',\n    borderRadius: '4px'\n  },\n  footer: {\n    position: 'fixed',\n    width: '100%',\n    bottom: 0,\n    left: 0,\n    background: '#006600',\n    height: '80px',\n    zIndex: 2\n  },\n  song_controls: {\n    justifyContent: 'center',\n    display: 'flex',\n    marginTop: '20px'\n  },\n  play_btn: {\n    padding: \"0 5px\",\n    color: 'rgb(179, 179, 179)',\n    cursor: 'pointer'\n  },\n  last_song: {\n    padding: \"0 5px\",\n    color: 'rgb(179, 179, 179)',\n    cursor: 'pointer'\n  },\n  next_song: {\n    padding: \"0 5px\",\n    color: 'rgb(179, 179, 179)',\n    cursor: 'pointer'\n  }\n});\n\nconst SongPlay = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [audio, setAudio] = useState(undefined);\n  const allState = useSelector(state => state);\n  const songsPlay = allState.songsPlay;\n  const song = allState.songsPlay.song;\n  const songList = allState.songsPlay.songList;\n  const track = allState.songsPlay.track;\n  let songTrackList = [];\n\n  if (track === 'albums') {\n    songList.map(everySong => {\n      let song = {\n        track: everySong\n      };\n      songTrackList.push(song);\n    });\n  } else {\n    songTrackList = songList;\n  }\n\n  const stopSong = () => {\n    if (audio) {\n      audio.pause();\n    }\n  };\n\n  const pauseSong = () => {\n    if (audio) {\n      audio.pause();\n    }\n  };\n\n  const resumeSong = () => {\n    if (audio) {\n      audio.play();\n    }\n  };\n\n  const audioControl = (song, index) => {\n    //const { playSong, stopSong } = this.props;\n    let audioplay = null;\n\n    if (audio === undefined) {\n      if (song.track.preview_url) {\n        audioplay = new Audio(song.track.preview_url);\n        console.log(audioplay);\n        setAudio(audioplay);\n        audio.play();\n      }\n    } else {\n      stopSong(); //audioplay.pause();\n\n      dispatch(playAction.stopSong());\n\n      if (song.track.preview_url) {\n        dispatch(playAction.playSong(song, index));\n        const audioplay = new Audio(song.track.preview_url);\n        console.log(audioplay);\n        setAudio(audioplay);\n        audio.play();\n      }\n    }\n  };\n\n  const getSongIndex = () => {\n    let SongIndex = null;\n    songTrackList.map((everySong, index) => {\n      if (everySong.track.id === song.track.id) {\n        return SongIndex = index;\n      }\n    });\n    return SongIndex;\n  };\n\n  const last = () => {\n    let SongIndex;\n\n    if (song) {\n      SongIndex = getSongIndex();\n    } else {\n      SongIndex = 0;\n    }\n\n    setProgress(0);\n    SongIndex === 0 ? audioControl(songTrackList[songTrackList.length - 1]) : audioControl(songTrackList[SongIndex - 1]);\n  };\n\n  const next = () => {\n    let SongIndex;\n    console.log(songTrackList);\n\n    if (song) {\n      SongIndex = getSongIndex();\n    } else {\n      SongIndex = songTrackList.length - 1;\n    }\n\n    setProgress(0);\n    SongIndex === songTrackList.length - 1 ? audioControl(songTrackList[0]) : audioControl(songTrackList[SongIndex + 1]);\n  };\n\n  const handleChange = song => {\n    if (songsPlay.globalPlay) {\n      dispatch(playAction.pauseSong());\n      console.log(\"ee\");\n      pauseSong();\n    } else {\n      if (song) {\n        dispatch(playAction.resumeSong());\n        resumeSong(); //audioControl(song);\n      } else {\n        audioControl(songTrackList[0]);\n      }\n    }\n  };\n\n  const MAX = 30;\n  const MIN = 0;\n\n  const normalise = value => (value - MIN) * 100 / (MAX - MIN);\n\n  const [progress, setProgress] = React.useState(0);\n  useEffect(() => {\n    if (songsPlay.globalPlay) {\n      setProgress(0);\n      const timer = setInterval(() => {\n        var time = 0;\n        setProgress(oldProgress => {\n          if (oldProgress === 30) {\n            dispatch(playAction.pauseSong());\n            clearInterval(timer);\n            return 0;\n          }\n\n          const diff = 1;\n          time += oldProgress;\n          return Math.min(oldProgress + diff, 30);\n        });\n      }, 1000);\n      return () => {\n        clearInterval(timer);\n      };\n    }\n  }, [song, songsPlay.globalPlay]);\n  useEffect(() => {\n    if (songsPlay.globalPlay) {\n      audioControl(song);\n    } else {\n      pauseSong();\n    }\n  }, [songsPlay.globalPlay, song]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.footer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.song_details,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.song_name,\n        children: song ? song.track.name : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.artist_name,\n        children: song ? song.track.artists[0].name : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.song_controls,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => last(),\n        className: classes.last_song,\n        children: /*#__PURE__*/_jsxDEV(FastRewindIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.play_btn,\n        onClick: () => handleChange(song),\n        children: songsPlay.globalPlay ? /*#__PURE__*/_jsxDEV(PauseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 44\n        }, this) : /*#__PURE__*/_jsxDEV(PlayArrowIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => next(),\n        className: classes.next_song,\n        children: /*#__PURE__*/_jsxDEV(FastForwardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.progress_container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.progress,\n        children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: normalise(progress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 11\n  }, this);\n};\n\n_s(SongPlay, \"f/sDIAVdkjI9oMhj1iVBCRBluTU=\", false, function () {\n  return [useDispatch, useStyles, useSelector];\n});\n\n_c = SongPlay;\nexport default _c2 = withRouter(SongPlay);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SongPlay\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SongPlay.js"],"names":["React","useState","useEffect","useDispatch","useSelector","playAction","withRouter","makeStyles","FastForwardIcon","FastRewindIcon","PauseIcon","PlayArrowIcon","LinearProgress","useStyles","song_details","position","left","lineHeight","song_name","fontFamily","color","fontSize","artist_name","progress_container","top","margin","marginTop","display","justifyContent","progress","width","height","background","borderRadius","footer","bottom","zIndex","song_controls","play_btn","padding","cursor","last_song","next_song","SongPlay","props","dispatch","classes","audio","setAudio","undefined","allState","state","songsPlay","song","songList","track","songTrackList","map","everySong","push","stopSong","pause","pauseSong","resumeSong","play","audioControl","index","audioplay","preview_url","Audio","console","log","playSong","getSongIndex","SongIndex","id","last","setProgress","length","next","handleChange","globalPlay","MAX","MIN","normalise","value","timer","setInterval","time","oldProgress","clearInterval","diff","Math","min","name","artists"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport playAction from '../actions/playAction'\nimport {  withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport FastForwardIcon from '@material-ui/icons/FastForward';\nimport FastRewindIcon from '@material-ui/icons/FastRewind';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nconst useStyles = makeStyles({\n    song_details :{\n        position: 'absolute',\n        left: '20px',\n        lineHeight: '22px',\n    },\n    song_name: {\n        fontFamily:'\"Proxima Nova\" Georgia sans-serif',\n        color: '#fff',\n        fontSize: '14px'\n    },\n    artist_name: {\n        fontFamily: '\"Proxima Nova\" Georgia sans-serif',\n        color: '#aaa',\n        fontSize: '12px'\n      },\n\n    progress_container:{\n        position: 'relative',\n        top: '-7px',\n        fontSize: '40px',\n        margin: '0 5px',\n        marginTop: '10px',\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    progress : {\n        width: '500px',\n        height: '4px',\n        background: 'rgb(64, 64, 64)',\n        borderRadius: '4px'\n      },\n    footer :{\n        position: 'fixed',\n        width: '100%',\n        bottom: 0,\n        left: 0,\n        background: '#006600',\n        height: '80px',\n        zIndex: 2,\n    },\n    song_controls:{\n        justifyContent: 'center',\n        display: 'flex',\n        marginTop: '20px',\n    },\n    play_btn :{\n        padding: \"0 5px\",\n        color: 'rgb(179, 179, 179)',\n        cursor: 'pointer',\n    },\n    last_song:{\n        padding: \"0 5px\",\n        color: 'rgb(179, 179, 179)',\n        cursor: 'pointer',\n    },\n    next_song:{\n        padding: \"0 5px\",\n        color: 'rgb(179, 179, 179)',\n        cursor: 'pointer',\n    }\n\n});\n\nconst SongPlay = (props)=>{\n    const dispatch = useDispatch();\n    const  classes =  useStyles();\n    const [audio, setAudio] = useState(undefined);\n    const allState = useSelector((state) => state);\n    const songsPlay = allState.songsPlay;\n    const song = allState.songsPlay.song;\n    const songList = allState.songsPlay.songList;\n    const track = allState.songsPlay.track;\n\n    let songTrackList = [];\n\n        if(track==='albums'){\n            songList.map((everySong)=>{\n                let song = {\n                    track: everySong\n                }\n                songTrackList.push(song);\n\n\n            });\n        }else{\n            songTrackList =  songList;\n        }\n\n\n    const stopSong = () => {\n        if (audio) {\n\n        audio.pause();\n        }\n    };\n\n    const pauseSong = () => {\n        if (audio){\n        audio.pause();\n        }\n    };\n\n    const resumeSong = () => {\n        if (audio) {\n        audio.play();\n\n        }\n    };\n\n\n    const audioControl = (song, index) => {\n        //const { playSong, stopSong } = this.props;\n        let  audioplay=null;\n\n        if (audio === undefined) {\n            if(song.track.preview_url){\n                audioplay = new Audio(song.track.preview_url);\n\n                console.log(audioplay);\n                setAudio(audioplay);\n                audio.play();\n            }\n        } else {\n            stopSong();\n            //audioplay.pause();\n            dispatch(playAction.stopSong());\n            if(song.track.preview_url){\n                dispatch(playAction.playSong(song, index));\n                const audioplay = new Audio(song.track.preview_url);\n                console.log(audioplay);\n                setAudio(audioplay);\n                audio.play();\n            }\n        }\n    };\n\n    const getSongIndex = () => {\n        let SongIndex = null;\n        songTrackList.map((everySong, index) => {\n\n                if (everySong.track.id === song.track.id) {\n                    return SongIndex = index;\n                }\n\n        });\n        return SongIndex;\n   }\n    const last =()=>{\n        let SongIndex;\n        if(song){\n            SongIndex = getSongIndex();\n        }else{\n            SongIndex = 0;\n        }\n        setProgress(0);\n        SongIndex === 0 ? audioControl(songTrackList[songTrackList.length - 1]) : audioControl(songTrackList[SongIndex - 1]);\n\n    }\n    const next =()=>{\n        let SongIndex;\n        console.log(songTrackList);\n        if(song){\n            SongIndex = getSongIndex();\n        }else{\n            SongIndex = songTrackList.length - 1\n        }\n        setProgress(0);\n        SongIndex === songTrackList.length - 1 ? audioControl(songTrackList[0]) : audioControl(songTrackList[SongIndex + 1]);\n\n    }\n\n    const handleChange = (song)=>{\n        if(songsPlay.globalPlay){\n            dispatch(playAction.pauseSong());\n            console.log(\"ee\");\n            pauseSong();\n        }else{\n            if(song){\n                dispatch(playAction.resumeSong());\n                resumeSong();\n                //audioControl(song);\n            }else{\n                audioControl(songTrackList[0])\n            }\n        }\n    }\n    const MAX  = 30;\n    const MIN  =  0;\n    const normalise = value => (value - MIN) * 100 / (MAX - MIN);\n\n    const [progress, setProgress] = React.useState(0);\n\n    useEffect(() => {\n        if(songsPlay.globalPlay){\n            setProgress(0);\n            const timer = setInterval(() => {\n            var time =  0;\n            setProgress((oldProgress) => {\n                if (oldProgress === 30) {\n                    dispatch(playAction.pauseSong());\n                    clearInterval(timer);\n                return 0;\n\n                }\n                const diff = 1;\n                time += oldProgress\n                return Math.min(oldProgress + diff, 30);\n            });\n\n            }, 1000);\n\n\n        return () => {\n        clearInterval(timer);\n        };\n      }\n    }, [song, songsPlay.globalPlay]);\n    useEffect(() => {\n        if(songsPlay.globalPlay){\n            audioControl(song);\n        }else{\n            pauseSong();\n        }\n    }, [songsPlay.globalPlay, song]);\n\n    return(\n          <div className={classes.footer}>\n                <div className={classes.song_details}>\n                    <p className={classes.song_name}>{song?song.track.name:''}</p>\n                    <p className={classes.artist_name}>{song?song.track.artists[0].name:''}</p>\n               </div>\n               <div className={classes.song_controls}>\n\n                    <div onClick={()=>last()} className={classes.last_song}>\n                     <FastRewindIcon></FastRewindIcon>\n                    </div>\n\n                    <div className={classes.play_btn} onClick={()=>handleChange(song)}>\n                    {/* <i onClick={\"!this.props.songPaused ? this.props.pauseSong : this.props.resumeSong\"} className={\"showPlay\"} aria-hidden=\"true\" /> */}\n                    {songsPlay.globalPlay? <PauseIcon/>:<PlayArrowIcon></PlayArrowIcon>\n                    }\n                    </div>\n\n                    <div onClick={()=>next()} className={classes.next_song}>\n                     <FastForwardIcon></FastForwardIcon>\n                    </div>\n\n                </div>\n                <div className= {classes.progress_container}>\n                    <div className={classes.progress}>\n                       <LinearProgress variant=\"determinate\" value={normalise(progress)} />\n                    </div>\n                </div>\n\n          </div>\n      )\n\n}\n\nexport default withRouter(SongPlay);"]},"metadata":{},"sourceType":"module"}