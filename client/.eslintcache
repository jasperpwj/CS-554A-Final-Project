[{"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/index.js":"1","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/App.js":"2","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/store.js":"3","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/reportWebVitals.js":"4","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/serviceWorker.js":"5","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/UserProfile.js":"6","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/PlayList.js":"7","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Register/Register.js":"8","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Login/Login.js":"9","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SongList.js":"10","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Home.js":"11","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/GenresList.js":"12","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/AlbumList.js":"13","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SongPlay.js":"14","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/libs/contextLib.js":"15","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/reducers/rootReducer.js":"16","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Infotmation.js":"17","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Song.js":"18","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/reducers/songPlayer.js":"19","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/actions/playAction.js":"20","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Search.js":"21","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/LikedPage.js":"22","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Nav/TopNav.js":"23","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/actions/addSong.js":"24","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/NewRelease.js":"25","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/My404Component.js":"26","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/actions/removeSong.js":"27","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/UserAccount.js":"28","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/EditProfile.js":"29","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/AddImage.js":"30","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Nav/Aside.js":"31","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SearchSinger.js":"32"},{"size":668,"mtime":1607783535424,"results":"33","hashOfConfig":"34"},{"size":4612,"mtime":1608102677289,"results":"35","hashOfConfig":"34"},{"size":237,"mtime":1607666854140,"results":"36","hashOfConfig":"34"},{"size":362,"mtime":1607665978552,"results":"37","hashOfConfig":"34"},{"size":5086,"mtime":1607783535425,"results":"38","hashOfConfig":"34"},{"size":2408,"mtime":1607783535423,"results":"39","hashOfConfig":"34"},{"size":6005,"mtime":1608002875026,"results":"40","hashOfConfig":"34"},{"size":8166,"mtime":1608087817623,"results":"41","hashOfConfig":"34"},{"size":4579,"mtime":1608087817621,"results":"42","hashOfConfig":"34"},{"size":9358,"mtime":1608104701215,"results":"43","hashOfConfig":"34"},{"size":3277,"mtime":1608087817620,"results":"44","hashOfConfig":"34"},{"size":5908,"mtime":1608101492959,"results":"45","hashOfConfig":"34"},{"size":9833,"mtime":1608104546444,"results":"46","hashOfConfig":"34"},{"size":9050,"mtime":1608101555062,"results":"47","hashOfConfig":"34"},{"size":168,"mtime":1607783535424,"results":"48","hashOfConfig":"34"},{"size":171,"mtime":1607666835606,"results":"49","hashOfConfig":"34"},{"size":7016,"mtime":1608103849884,"results":"50","hashOfConfig":"34"},{"size":7951,"mtime":1608092845190,"results":"51","hashOfConfig":"34"},{"size":2088,"mtime":1608092804277,"results":"52","hashOfConfig":"34"},{"size":802,"mtime":1607801070259,"results":"53","hashOfConfig":"34"},{"size":7636,"mtime":1608097922312,"results":"54","hashOfConfig":"34"},{"size":7250,"mtime":1608009994251,"results":"55","hashOfConfig":"34"},{"size":5912,"mtime":1608097922308,"results":"56","hashOfConfig":"34"},{"size":584,"mtime":1607916665007,"results":"57","hashOfConfig":"34"},{"size":5965,"mtime":1608002492565,"results":"58","hashOfConfig":"34"},{"size":879,"mtime":1608009994253,"results":"59","hashOfConfig":"34"},{"size":440,"mtime":1608009994250,"results":"60","hashOfConfig":"34"},{"size":4112,"mtime":1608094868942,"results":"61","hashOfConfig":"34"},{"size":5233,"mtime":1608094868942,"results":"62","hashOfConfig":"34"},{"size":2102,"mtime":1608087817620,"results":"63","hashOfConfig":"34"},{"size":3899,"mtime":1608102206965,"results":"64","hashOfConfig":"34"},{"size":5985,"mtime":1608097922312,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"1gr11ca",{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"69"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"69"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"69"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"69"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"69"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"69"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"69"},"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/index.js",["146"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["147","148"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/App.js",["149","150"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/store.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/reportWebVitals.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/serviceWorker.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/UserProfile.js",["151"],"import '../App.css';\nimport React, {useState, useEffect} from 'react';\n\n\nconst UserProfile = (props) => {\n    const playerUrl = \"https://open.spotify.com\";\n    const [userData, setUserData] = useState(''); \n    var curUrl = window.location;\n    // console.log(\"url: \" + curUrl);\n\n\n    const hash = window.location.hash.substr(1); //url of the current page\n    const arHash = hash.split('='); //this creates an array with key ([0] element) and value ([1] element)\n    const hash_value =  arHash[1];\n\n    const accessToken = hash_value;\n\n\n    useEffect(() => {\n        async function fetchData(){\n            try{\n                const url = \"https://api.spotify.com/v1/me/\";\n\n                const options = {\n                    headers: {\n                        Authorization: \"Bearer \" + accessToken\n                    }\n                };\n                fetch(url, options)\n                .then( res => res.json() )\n                // .then( data => console.log(\"typeof data: \" + typeof data))\n                .then( data => {\n                    console.log(data);\n                    console.log(\"test\");\n                    setUserData(data)\n                } );\n            } catch (e) {\n                console.log(e);\n                // setError(true);\n            }\n        }\n\n        fetchData();\n    }, [accessToken]);\n \n\n    return (\n\t\t<div>\n  \n        <p class = \"login\" style={{fontSize:'30px'}}>\n  \n          Login Successful!\n        </p>\n\n        \n        <p class = \"login\" style={{fontSize:'30px'}}>\n\n                <a\n                    href= {playerUrl}\n                >\n                    Spotify official player\n                </a>\n\t\t</p>\n\n\n        <p style={{fontSize:'50px'}}>\n            The user's profile:\n\t\t</p>\n\n        <p style={{fontSize:'25px'}}>\n            Country: {userData.country} \n\t\t</p>\n\n        <p style={{fontSize:'25px'}}>\n            Name: {userData.display_name}\n\t\t</p>\n\n        <p style={{fontSize:'25px'}}>\n            Email: {userData.email}\n\t\t</p>\n\n        {/* <p style={{fontSize:'25px'}}>\n            External url:  \n                <a\n                    href= {userData.external_urls.spotify}\n                >\n                    Click to open\n                </a>\n\t\t</p> */}\n\n        <p style={{fontSize:'25px'}}>\n            Account type: {userData.product}\n\t\t</p>\n              \n      </div>\n\n        \n    )\n};\n\nexport default UserProfile;\n","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/PlayList.js",["152"],"import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Card, CardActionArea,  Grid,  makeStyles, AppBar, Tab } from '@material-ui/core';\nimport '../App.css';\nconst useStyles = makeStyles({\n        appbar: {\n            background:'#006600',\n            marginLeft:'30px',\n            marginRight:'30px',\n            width: 'auto',\n            marginBottom:'30px',\n        },\n        card: {\n            maxWidth: 300,\n            height: 'auto',\n            marginLeft: '30px',\n            marginRight: '30px',\n            borderRadius: 5,\n            border: '1px solid #1e8678',\n            boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n        },\n\ttitleHead: {\n\t\tborderBottom: '1px solid #1e8678',\n\t\tfontWeight: 'bold'\n\t},\n\tgrid: {\n\t\tflexGrow: 1,\n\t\tflexDirection: 'row'\n\t},\n\tmedia: {\n\t\theight: '100%',\n\t\twidth: '100%'\n\t},\n\tbutton: {\n\t\tcolor: '#1e8678',\n\t\tfontWeight: 'bold',\n\t\tfontSize: 12\n\t},\n\tbtnGroup: {\n\t\tmarginTop: '50px'\n\t},\n\tpages: {\n\t\ttextAlign: 'center',\n\t\tmargin: '100px',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n    },\n    list_name:{\n        textAlign: 'center'\n    }\n});\n\nconst PlayList=(props)=>{\n    const classes = useStyles();\n    const [ playList, setPlayList ] = useState(undefined);\n    const [page, setPage] = useState(1);\n    const [ total, setTotal] =  useState(undefined);\n    const [isLast, setLast] = useState(false);\n    const [isFirst, setFirst] = useState(true);\n    const [loading, setLoading] = useState(true);\n    const [error, setError]  =  useState(false);\n\n    async function getData(url, type){\n        var request = require('request');\n        var client_id = 'c9b1db19becd48f78d6913a3431ae24a'; // Your client id\n        var client_secret = '98145905039345c4a5df9542ca98cc55'; // Your secret\n        var authOptions = {\n            url: 'https://accounts.spotify.com/api/token',\n            headers: {\n              'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n            },\n            form: {\n              grant_type: 'client_credentials'\n            },\n            json: true\n        };\n        request.post(authOptions,function(error, response,body){\n            if (!error && response.statusCode === 200) {\n                    var token = body.access_token;\n                    var options = {\n                        url: url,\n                        headers: {\n                            'Authorization': 'Bearer ' + token\n                        },\n                        json: true\n                    };\n                    request.get(options, function(error, response, body) {\n                    if(error ||  response.statusCode  ===  404){\n                        setError(true);\n                        setLoading(false);\n                    }else{\n                        if(type === 'playlists'){\n                            setPlayList(body.playlists.items);\n                            setTotal(Math.ceil(body.playlists.total / 24))\n                        }\n                        setLoading(false);\n                    }\n                    });\n            }\n        });\n    }\n\n    useEffect(()=> {\n        async function fetchData () {\n            try{\n\n                await getData(`https://api.spotify.com/v1/browse/categories/${props.match.params.categories}/playlists?limit=24&&offset=${page*24-24}`,'playlists');\n                if (page === 1) {\n\t\t\t\t\tsetFirst(true);\n\t\t\t\t\tsetLast(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetFirst(false);\n                }\n                if (page === total) {\n\t\t\t\t\tsetLast(true);\n\t\t\t\t\tsetFirst(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetLast(false);\n                }\n            } catch (e) {\n                console.log(e);\n                setError(true);\n            }\n        }\n\n        fetchData();\n    }, [page]);\n\n    const changePageHandle = (event, page) => {\n        setPage(page);\n        if (page === 1) {\n            setFirst(true);\n        } else {\n            setFirst(false);\n        };\n        if (page === total) {\n            setLast(true);\n        } else {\n            setLast(false);\n        }\n    }\n\n    const buildCard = (playlist)  => {\n        return(\n            <Grid item xs={12} sm={4} md={3} lg={2} xl={2}  key={playlist.id}>\n                <Card className={classes.card} variant='outlined'>\n                <CardActionArea>\n                    <Link to={`/playlists/songsList/${playlist.id}`}>\n                    <div className='category-image'>\n                        <img alt=\"category\" src={playlist.icons ? playlist.icons[0].url : playlist.images[0].url} width='100%'/>\n\n                         <p className={classes.list_name}>{playlist.name}</p>\n\n                    </div>\n                    </Link>\n                </CardActionArea>\n                </Card>\n            </Grid>\n        );\n    };\n    let card = playList && playList.map((playlist) => {\n        return buildCard(playlist);\n    });\n\n\n    if(loading){\n        return (\n\t\t\t<div>\n\t\t\t\t<h2>Loading....</h2>\n\t\t\t</div>\n\t\t);\n    }else if(error){\n        return (\n\t\t\t<div>\n\t\t\t\t<h2>Error....</h2>\n\t\t\t</div>\n\t\t);\n    }else {\n        return(\n            <div>\n                <AppBar position=\"static\" className={classes.appbar}>\n                    <Tab  label={`All PlayLists from ${props.match.params.categories}`} />\n                    </AppBar>\n                <Grid container className={classes.grid} spacing={2}>\n                        {card}\n                </Grid>\n                {total === 1?<div className={classes.pages}>No More</div>:\n                <div className={classes.pages}>\n                        <Pagination count={total} page={page} defaultPage={page} onChange={changePageHandle} variant=\"outlined\" shape=\"rounded\" hidePrevButton={isFirst} hideNextButton={isLast} />\n                </div>\n                }\n            </div>\n\n        );\n    }\n}\nexport default withRouter(PlayList);","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Register/Register.js",["153","154","155","156","157","158","159"],"import React, {useState, useEffect} from 'react';\n// import user from '../../data/users';\nimport \"./Register.css\";\nimport axios from 'axios'\nimport { Redirect } from \"react-router-dom\";\nimport video from '../../videos/wap.mp4'\n\nimport classes from '../..//BackgroundVideo.module.css';\n\n\nfunction RegistrationForm(props) {\n    const [state , setState] = useState({\n        firstname: \"\",\n        lastname:\"\",\n        gender:\"\",\n        email : \"\",\n        password : \"\"\n    })\n    const [userEmail , setUserEmail] = useState(\"\");\n    const [registerError, setRegisterError] = useState(null);\n\n\n    console.log(\"email: \" + userEmail);\n    // console.log(\"error: \" + JSON.stringify(registerError));\n    console.log(\"error: \" + registerError);\n\n    \n\n\n    const handleChange = (e) => {\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        try {\n            if (state.firstname == \"\") {\n                alert(\"firstname cannot be null\");\n            }\n            else if (state.lastname == \"\") {\n                alert(\"lastname cannot be null\");\n            }\n            else if (state.gender == \"\") {\n                alert(\"gender cannot be null\");\n            }\n            else if (state.email == \"\") {\n                alert(\"email cannot be null\");\n            }\n            else if (state.password == \"\") {\n                alert(\"password cannot be null\");\n            }\n            else if (state.confirmPassword == \"\") {\n                alert(\"confirmPassword cannot be null\");\n            }\n            if (state.password === state.confirmPassword) {\n                const user = {\n                    firstName: state.firstname,\n                    lastName: state.lastname,\n                    gender: state.gender,\n                    email: state.email,\n                    password: state.password\n                };\n                try {\n                    axios.post('http://localhost:5000/users/add', user)\n                    .then(response => setUserEmail(response.data.email ))\n                    .catch(error => {\n                        setRegisterError(error.message);\n                    })\n                } catch (error){\n                    console.log(error);\n                }\n            }\n            else{\n                alert(\"two passwords are different\");\n\n            }\n\n            \n                \n            \n\n            \n        }\n        catch(e) {\n            console.log(\"error: \" + e);\n        }\n    }\n\n    \n\n    // if (registerError) {\n\n    //     return(\n    //         <p style={{fontSize:'30px'}}>\n    //             Error! <br/>\n    //             Email might be already used <br/>\n    //             Each fiels cannot be null<br/>\n    //             <a\n    //                 href= \"http://localhost:3000/register\"\n    //             >\n    //                 Back to Register\n    //             </a>\n    //         </p>\n    //     );\n    // }\n\n    \n\n    return(\n        <div>\n        {userEmail ? (\n            <div>\n                <Redirect to=\"/login\" />\n\n                {/* <p>Register successful</p>\n                <p style={{fontSize:'30px'}}>\n\n                    <a\n                        href=\"http://localhost:3000/login\"\n                    >\n                        Login now\n                    </a>\n                </p> */}\n            </div>\n        ) : (\n            <div className={classes.Container}>\n                <video autoPlay=\"autoplay\" loop=\"loop\" muted className={classes.Video} >\n                  <source src={video} type=\"video/mp4\" />\n                  Your browser does not support the video tag.\n\t\t\t\t</video>\n\n                <div className={classes.Content}>\n                    <div className={classes.SubContentRegister}>\n                        <form>\n\n                            <h1 class=\"registerHere\">Register Here</h1>\n\n                            {registerError? (\n                                <p class=\"error\">Email is already used or one of fileds is empty</p>\n                            ) : (\n                                <p></p>\n\n                            )}\n\n                            <div className=\"form-group text-left\">\n                                <label>First Name</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"firstname\" \n                                    placeholder=\"First Name\"\n                                    value={state.firstname}\n                                    onChange={handleChange} \n                                />\n                            </div>\n\n                            <div className=\"form-group text-left\">\n                                <label>Last Name</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"lastname\" \n                                    placeholder=\"Last Name\"\n                                    value={state.lastname}\n                                    onChange={handleChange} \n                                />\n                            </div>\n\n                            <div className=\"form-group text-left\">\n                                <label>Gender</label>\n                                <input type=\"text\" \n                                    className=\"form-control\" \n                                    id=\"gender\" \n                                    placeholder=\"Gender\"\n                                    value={state.gender}\n                                    onChange={handleChange} \n                                />\n                            </div>\n\n                            <div className=\"form-group text-left\">\n                            <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                                <input type=\"email\" \n                                    className=\"form-control\" \n                                    id=\"email\" \n                                    aria-describedby=\"emailHelp\" \n                                    placeholder=\"Email\" \n                                    value={state.email}\n                                    onChange={handleChange}\n                                />\n\n                            </div>\n                            <div className=\"form-group text-left\">\n                                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                                <input type=\"password\" \n                                    className=\"form-control\" \n                                    id=\"password\" \n                                    placeholder=\"Password\"\n                                    value={state.password}\n                                    onChange={handleChange} \n                                />\n                            </div>\n                            <div className=\"form-group text-left\">\n                                <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n                                <input type=\"password\" \n                                    className=\"form-control\" \n                                    id=\"confirmPassword\" \n                                    placeholder=\"Confirm Password\"\n                                    value={state.confirmPassword}\n                                    onChange={handleChange} \n                                />\n                            </div>\n                            <button \n                                type=\"submit\" \n                                className=\"register\"\n                                onClick={handleSubmitClick}\n                            >\n                                Register\n                            </button>\n                        </form>\n                    </div>\n                </div>\n                \n\n\n            </div>\n        )}\n        </div>\n        \n        \n    )\n}\n\nexport default RegistrationForm;\n","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Login/Login.js",["160","161"],"import React, { useState } from \"react\";\nimport { useAppContext } from \"../../libs/contextLib\";\nimport axios from 'axios'\nimport { Redirect } from \"react-router-dom\";\nimport video from '../../videos/wap.mp4'\nimport classes from '../..//BackgroundVideo.module.css';\n\n\nimport \"./Login.css\";\n\nexport default function Login() {\n  const {isAuthenticated ,userHasAuthenticated } = useAppContext();\n\n  const [state , setState] = useState({\n    \n    email : \"\",\n    password : \"\"\n  })\n  const [userEmail , setUserEmail] = useState(\"\");\n  const [loginError, setLoginError] = useState(null);\n\n\n  // console.log(\"email: \" + userEmail);\n  // console.log(\"error: \" + loginError);\n\n\n\n\n  const handleChange = (e) => {\n    const {id , value} = e.target   \n    setState(prevState => ({\n        ...prevState,\n        [id] : value\n    }))\n  }\n\n  const handleSubmitClick = (e) => {\n    e.preventDefault();\n    try {\n        \n        if (state.email == \"\") {\n            alert(\"email cannot be null\");\n        }\n        else if (state.password == \"\") {\n            alert(\"password cannot be null\");\n        }\n        else{\n          const user = {\n            email: state.email,\n            password: state.password\n          };\n          try {              \n            axios.post('http://localhost:5000/users/login', user)\n            .then(response => setUserEmail(response.data.email))\n            .catch(error => {\n                setLoginError(error.message);\n            })\n          } catch (error){\n            console.log(error);\n          }\n        }\n      \n          \n    }\n    catch(e) {\n        console.log(\"error: \" + e);\n    }\n  }\n\n  if (userEmail) {\n    userHasAuthenticated(true);\n    window.sessionStorage.setItem(\"userEmail\", userEmail);\n    window.location.reload(true);\n\n    // localStorage.setItem('test', 1);\n\n  }\n  // const s = window.sessionStorage.getItem(\"userEmail\")\n  // console.log(\"session : \" + s);\n\n\n  return (\n    <div>\n      {isAuthenticated ? (\n        <div>\n            <Redirect to=\"/\" />\n            {/* <p style={{fontSize:'30px'}}>\n              Have fun! {window.sessionStorage.getItem(\"userEmail\")}<br/>\n              \n              <a\n                  href= \"http://localhost:3000/\"\n              >\n                  Back to home\n              </a>\n            </p> */}\n        </div>\n      ) : (\n        <div className={classes.Container}>\n\n              <video autoPlay=\"autoplay\" loop=\"loop\" muted className={classes.Video} >\n                  <source src={video} type=\"video/mp4\" />\n                  Your browser does not support the video tag.\n\t\t\t\t\t\t  </video>\n\n              <div className={classes.Content}>\n                <div className={classes.SubContent}>\t\t\t\t\t\t\t\t\n                  <form>\n                    \n                    <h1 class=\"loginHere\">Login Here</h1>\n                    \n                    {loginError? (\n                        <p class=\"error\">Email or password is wrong</p>\n                    ) : (\n                      <p></p>\n\n                    )}\n\n                    <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputEmail1\">Email</label>\n                    <input type=\"email\" \n                          className=\"form-control\" \n                          id=\"email\" \n                          aria-describedby=\"emailHelp\" \n                          placeholder=\"Email\" \n                          value={state.email}\n                          onChange={handleChange}\n                    />\n                    \n                    </div>\n                    <div className=\"form-group text-left\">\n                        <label htmlFor=\"exampleInputPassword1\">Password</label>\n                        <input type=\"password\" \n                            className=\"form-control\" \n                            id=\"password\" \n                            placeholder=\"Password\"\n                            value={state.password}\n                            onChange={handleChange} \n                        />\n                    </div>\n                    \n                    <button\n                        class=\"login\" \n                        type=\"submit\" \n                        className=\"login\"\n                        onClick={handleSubmitClick}\n                    >\n                        Login\n                    </button>\n                  </form>\n                  <a href=\"http://localhost:3000/register\" class=\"yet\">Haven't created an account yet?</a>\n\n                </div>\n\n              </div>\n\n\n        </div>\n\n\n\n\n          \n      )}\n    </div>\n  );\n}","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SongList.js",["162","163"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Home.js",["164"],"import React from \"react\";\nimport '../App.css';\nimport { Redirect } from \"react-router-dom\";\n\n\n\nconst Home = () => {\n    const url = 'https://accounts.spotify.com/authorize?show_dialog=true&client_id=230be2f46909426b8b80cac36446b52a&scope=playlist-read-private%20playlist-read-collaborative%20playlist-modify-public%20user-read-recently-played%20playlist-modify-private%20ugc-image-upload%20user-follow-modify%20user-follow-read%20user-library-read%20user-library-modify%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state&response_type=token&redirect_uri=http://localhost:3000/callback';\n    const e = window.sessionStorage.getItem(\"userEmail\");\n    \n    if (e) {\n        return (\n            <div class=\"home\">\n                <p class = \"welcome\" style={{fontSize:'30px'}}>\n\n                    Welcome<br/>\n                    Spotify was founded in 2006 in Stockholm, Sweden, the company's title was initially misheard from a name shouted by Lorentzon. Later they thought out an etymology of a combination of \"spot\" and \"identify.\"\n\n                </p>\n\n                {/* <button class=\"homeBTN\" style=\"vertical-align:middle\"><span>Hover </span></button> */}\n                <div class=\"child\">\n                    <button\n                    class=\"button\" \n                    >\n                    <span>\n                        <a class=\"homeURL\"\n                            href= \"http://localhost:3000/categories\"\n                        >\n                            Categories\n                        </a> \n                    </span>\n                    </button>\n\n                    <button\n                    class=\"button\" \n                    >\n                    <span>\n                        <a class=\"homeURL\"\n                            href= \"http://localhost:3000/likedpage\"\n                        >\n                            Liked Songs\n                        </a> \n                    </span>\n                    </button>\n\n                    <button\n                    class=\"button\" \n                    >\n                    <span>\n                        <a class=\"homeURL\"\n                            href= \"http://localhost:3000/toplists/playList\"\n                        >\n                            Top List\n                        </a> \n                    </span>\n                    </button>\n\n                    <button\n                    class=\"button\" \n                    >\n                    <span>\n                        <a class=\"homeURL\"\n                            href= \"http://localhost:3000/account\"\n                        >\n                            My Profile\n                        </a> \n                    </span>\n                    </button>\n                </div>\n            </div>\n          \n        )\n    }\n\n    return (\n        \n\t\t<div class=\"home\">\n\n            <p class = \"welcome\" style={{fontSize:'30px'}}>\n\n                Welcome to music website, you can access other page after login <br/>\n                If you don't want to login you can &nbsp;\n\n                <a\n                    href= {url}\n                >\n                    Open Spotify Online\n                </a>\n\n            </p>\n            \n\t\t</div>\n      \n    )\n};\n\nexport default Home;\n","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/GenresList.js",["165"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/AlbumList.js",["166","167"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SongPlay.js",["168","169","170"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/libs/contextLib.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/reducers/rootReducer.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Infotmation.js",["171","172","173","174"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Song.js",["175"],"import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter } from 'react-router-dom';\nimport LibraryAddOutlined from '@material-ui/icons/LibraryAddOutlined';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport moment from \"moment\";\nimport { makeStyles } from '@material-ui/core';\nimport { useSelector, useDispatch } from 'react-redux';\nimport playAction from '../actions/playAction'\nimport addSong from '../actions/addSong'\nimport axios from 'axios'\nimport Snackbar from '@material-ui/core/Snackbar';\n\nconst useStyles = makeStyles({\n\tsong_li: {\n        listStyleType: 'none',\n        borderBottom: '1px solid #666',\n        display: 'flex',\n        lineHeight: 'normal',\n        fontSize: '14px',\n        cursor: 'pointer',\n        marginLeft:'30px',\n        marginRight:'30px',\n        '&:hover':{\n            color: '#000000',\n            background: '#f2ffe5'\n        }\n    },\n    song_title_header:{\n        width: '300px'\n    },\n    song_title: {\n        width: '300px'\n    },\n    song_title_header1: {\n        width: '300px'\n    },\n    song_album:{\n        width: '250px'\n    },\n    song_album_header: {\n        width: '250px'\n    },\n    song_artist:{\n        width: '200px'\n    },\n    song_artist_header: {\n        width: '200px'\n    },\n    song_length:{\n        width: '100px',\n    },\n    song_icon:{\n        width: '100px',\n        textAlign:'left',\n        position: 'relative',\n        top: '10px',\n        '&:hover':{\n            color: '#8c8c8c',\n        }\n    },\n    song_length_header: {\n        width: '100px'\n    },\n    song_added:{\n        width: '200px'\n    },\n    song_added_header: {\n        width: '150px'\n    },\n    song_header_container: {\n        display: 'flex',\n        borderBottom: '1px solid #666',\n        paddingBottom: '6px',\n        marginTop: '20px'\n    },\n    play_control:{\n        width:'100px',\n        textAlign:'center',\n        position: 'relative',\n        top: '10px',\n        '&:hover':{\n            color: '#8c8c8c',\n        }\n\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'black',\n        '&:hover':{\n            textDecoration: 'underline'\n        }\n    },\n    linkhover :{\n        textDecoration: 'underline'\n    },\n    p:{\n        marginTop:'revert',\n        marginBottom:'revert',\n    }\n\n});\nconst Song = (props)=>{\n    const classes = useStyles();\n    const [ play, setPlay] = useState(false);\n    //const [ pause, setPause] = useState(true);\n    const [ message, setMessage] = useState('');\n    const [open, setOpen] = useState(false);\n    const allState = useSelector((state) => state);\n    const songsPlay = allState.songsPlay;\n    const songR = allState.songsPlay.song;\n    const dispatch = useDispatch();\n    const {song, index}=props;\n    const track = song.track;\n    function timeFormat(time){\n        const min = Math.floor(time/60000);\n        const sec = ((time % 60000) / 1000).toFixed(0);\n        return min+\":\"+(sec < 10 ? \"0\" : \"\")+sec;\n    }\n\n    // if(songsPlay.globalPlay&&song.track.id===songR.track.id){\n    //     setPlay(true);\n    // }else{\n    //     setPlay(false);\n    // }\n    useEffect(()=>{\n        if(songsPlay.globalPlay&&song.track.id===songR.track.id){\n            setPlay(true);\n        }else{\n            setPlay(false);\n        }\n    },[songR,songsPlay.globalPlay])\n\n\n\n    const handleChange=(song)=>{\n        if(play){\n            dispatch(playAction.pauseSong());\n            //setPause(true);\n            setPlay(false);\n            //pauseSong();\n\n        }else{\n            if(song.track.preview_url){\n                console.log(song);\n                dispatch(playAction.playSong(song,index));\n                //setPause(false);\n                setPlay(true);\n                //audioControl(song);\n            }else{\n                dispatch(playAction.toSong(song));\n            }\n        }\n    }\n    async function checkExist(ID){\n        try{\n            const userInfo = {\n                userEmail: window.sessionStorage.userEmail\n            };\n            const existSongs = await axios.post('http://localhost:5000/users/favoriteSongs', userInfo);\n            const existSong = existSongs.data;\n            for(let i =0; i<existSong.length;i++){\n                if(existSong[i].songId===ID){\n                    return true;\n                }\n            }\n            return false;\n\n        }catch(e){\n            console.log(e);\n        }\n    }\n    function handleOpen (mes) {\n        setMessage(mes);\n        setOpen(true);\n\n    };\n    function handleClose ()  {\n        setOpen(false);\n    };\n    async function handleAdd(song){\n        if(window.sessionStorage.userEmail){\n            const result = await checkExist(song.track.id);\n            if(result === true){\n                handleOpen('The song has been added')\n            }else if(result === false){\n                const favoriteSong = {\n                    artist: song.track.artists[0].name,\n                    albumName: song.track.album?song.track.album.name : '-',\n                    artistId:song.track.artists[0].id,\n                    albumId:song.track.album?song.track.album.id : '-',\n                    title:song.track.name,\n                    playUrl:song.track.preview_url,\n                    songId:song.track.id,\n                }\n                await addSong(favoriteSong);\n                handleOpen('Successfully Added')\n            }else{\n                handleOpen('Fail Add')\n            }\n        }else{\n            handleOpen('Please log in');\n        }\n\n    }\n    return (\n        <div>\n        <Snackbar\n                    anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                    }}\n                    open={open}\n                    autoHideDuration={6000}\n                    onClose={handleClose}\n                    message={message}\n                />\n        <li className={classes.song_li} >\n            <div  className={classes.play_control} onClick={()=>handleChange(song, index)}>\n                {play&&songsPlay.globalPlay&&song.track.id===songR.track.id?<PauseCircleOutlineIcon></PauseCircleOutlineIcon>\n                :\n                <PlayCircleOutlineIcon  ></PlayCircleOutlineIcon>\n                }\n            </div>\n            <div className={classes.song_icon} onClick={()=>handleAdd(song)}>\n                <i>\n                <LibraryAddOutlined></LibraryAddOutlined>\n                </i>\n            </div>\n            <div className={classes.song_title}>\n                <p className={classes.p}>{song.track? song.track.name : song.name}</p>\n            </div>\n\n            <Link to={track?`/albumList/${track.artists[0].id}`:`/albumList/${song.artists[0].id}`} className={classes.link}>\n            <div className={classes.song_artist}>\n                <p  className={classes.p}> {song.track?track.artists[0].name:song.artists[0].name}</p>\n            </div>\n            </Link>\n            {song.track.album?\n            <Link to={`/albums/songsList/${song.track.album.id}`} className={classes.link}>\n            <div className={classes.song_album}>\n                <p className={classes.p}>{song.track?song.track.album.name:'-'}</p>\n            </div>\n            </Link>:\n            <div className={classes.song_album}>\n                <p className={classes.p}>{song.album?song.album.name:song.name?song.name:'-'}</p>\n            </div>}\n\n            <div className={classes.song_added}>\n                <p className={classes.p}>{song.track? moment(song.added_at).format(\"YYYY-MM-DD\") : song.album?song.album.release_date:'-'}</p>\n            </div>\n\n            <div className={classes.song_length}>\n                <p className={classes.p}>{song.track?timeFormat(song.track.duration_ms):timeFormat(song.duration_ms)}</p>\n            </div>\n\n        </li>\n        </div>\n    )\n}\nexport default withRouter(Song);","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/reducers/songPlayer.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/actions/playAction.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Search.js",["176","177","178","179","180","181","182","183","184","185","186"],"import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Card, CardActionArea,  Grid,  makeStyles, AppBar,Tab } from '@material-ui/core';\nimport Image from 'react-bootstrap/Image'\nimport noImage from '../img/download.jpeg';\nimport '../App.css';\nconst useStyles = makeStyles({\n    appbar: {\n        background:'#006600',\n        marginLeft:'30px',\n        marginRight:'30px',\n        width: 'auto',\n        marginBottom:'30px',\n    },\n\tcard: {\n\t\tmaxWidth: 200,\n\t\theight: 'auto',\n\t\tmarginLeft: '30px',\n\t\tmarginRight: '30px',\n\t\tborderRadius: 5,\n\t\tborder: '1px solid #1e8678',\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n\t},\n\ttitleHead: {\n\t\tborderBottom: '1px solid #1e8678',\n\t\tfontWeight: 'bold'\n\t},\n\tgrid: {\n\t\tflexGrow: 1,\n\t\tflexDirection: 'row'\n\t},\n\tmedia: {\n\t\theight: '100%',\n\t\twidth: '100%'\n\t},\n\tbutton: {\n\t\tcolor: '#1e8678',\n\t\tfontWeight: 'bold',\n\t\tfontSize: 12\n\t},\n\tbtnGroup: {\n\t\tmarginTop: '50px'\n\t},\n\tpages: {\n\t\ttextAlign: 'center',\n\t\tmargin: '100px',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t}\n});\n\nconst Search = (props) =>{\n    const classes = useStyles();\n    const [ albumList, setAlbumList ] = useState(undefined);\n    const [ artistsList, setArtistsList ] = useState(undefined);\n    const [ playList, setPlayList ] = useState(undefined);\n    const [ page, setPage ] = useState(1);\n    const [ isLast, setLast ] = useState(false);\n    const [ isFirst, setFirst ] = useState(true);\n    const [ loading, setLoading ] = useState(false);\n    const [ error, setError ]  =  useState(false);\n    const [ searchTerm, setSearchTerm ] = useState('');\n    let card = null;\n    let card2 = null;\n    let card3 = null;\n    async function getData(url){\n        var request = require('request');\n        var client_id = 'c9b1db19becd48f78d6913a3431ae24a'; // Your client id\n        var client_secret = '98145905039345c4a5df9542ca98cc55'; // Your secret\n        var authOptions = {\n            url: 'https://accounts.spotify.com/api/token',\n            headers: {\n              'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n            },\n            form: {\n              grant_type: 'client_credentials'\n            },\n            json: true\n        };\n        request.post(authOptions,function(error, response,body){\n            if (!error && response.statusCode === 200) {\n                    var token = body.access_token;\n                    var options = {\n                        url: url,\n                        headers: {\n                            'Authorization': 'Bearer ' + token\n                        },\n                        json: true\n                    };\n                    request.get(options, function(error, response, body) {\n                    if(error){\n                        setError(true);\n                    }else{\n                    setAlbumList(body.albums.items);\n                    setArtistsList(body.artists.items);\n                    setPlayList(body.playlists.items);\n                    setLoading(false);\n                    }\n                    });\n            }\n        });\n    }\n\n    const handleChange = (e) => {\n        setSearchTerm(e.target.value);\n        // setLoading(true);\n        console.log(e.target.value);\n        if(e.target.value){\n            getData(`https://api.spotify.com/v1/search?query=${e.target.value}&offset=0&limit=6&type=album%2Cartist%2Cplaylist`);\n        }\n    };\n    const searchValue = async (value) => {\n\t\tsetSearchTerm(value);\n\t};\n    const buildCard = (genre)  => {\n        return(\n            <Grid item xs={12} sm={4} md={3} lg={2} xl={2}  key={genre.id}>\n                <Card className={classes.card} variant='outlined'>\n                <CardActionArea>\n                    <Link to={genre.type==='artist'?`/albumList/${genre.id}`:genre.type==='album'?`/albums/songsList/${genre.id}`:`/playlists/songsList/${genre.id}`}>\n                    <div className='category-image'>\n                        <img alt=\"category\" src={genre.images && genre.images.length === 0 ? noImage : genre.images[0].url} width='100%'/>\n                         <p className='category-name'>{genre.name}</p>\n                    </div>\n                    </Link>\n                </CardActionArea>\n                </Card>\n            </Grid>\n        );\n    };\n    card = artistsList && artistsList.map((artist) => {\n        return buildCard(artist);\n    });\n    card2 = albumList && albumList.map((artist) => {\n        return buildCard(artist);\n    });\n    card3 = playList && playList.map((artist) => {\n        return buildCard(artist);\n    });\n\n    if(loading){\n        return (\n            <div>\n                <h2>Loading....</h2>\n            </div>\n        );\n    }else if(error){\n        return (\n            <div>\n                <h2>Error....</h2>\n            </div>\n        );\n    }else {\n            return (\n                <div className = 'searchbox'>\n                    <div className=\"form__group field\">\n                    <form\n                        className = \"searchform\"\n                        method='POST '\n                        onSubmit={(e) => {\n                            e.preventDefault();\n                        }}\n                        name='formName'\n                    >\n                        <input className=\"form__field\" autoComplete='off' type='text' name='searchTerm' placeholder=\"Search Artists, Albums or PlayList\" onChange={handleChange} />\n                        <label for=\"name\" class=\"form__label\">Search</label>\n                    </form>\n                    </div>\n                     {(searchTerm) ? (<div>\n                        <AppBar position=\"static\" className={classes.appbar}>\n                        <Tab  label=\"Artists\" />\n                        </AppBar>\n                        <Grid container className={classes.grid} spacing={2}>\n                            {card}\n                        </Grid>\n                        <AppBar position=\"static\" className={classes.appbar}>\n                        <Tab  label=\"Albums\" />\n                        </AppBar>\n                        <Grid container className={classes.grid} spacing={2}>\n                            {card2}\n                        </Grid>\n                        <AppBar position=\"static\" className={classes.appbar}>\n                        <Tab  label=\"PlayList\" />\n                        </AppBar>\n                        <Grid container className={classes.grid} spacing={2}>\n                            {card3}\n                        </Grid>\n                    </div>):(\n                    <div>\n                        {/* <h1 className =\"searchh1\">Search Artists, Albums or PlayList</h1> */}\n                    </div>\n                     )}\n                    {/* {total === 1?<div className={classes.pages}>No More</div>:\n                    <div className={classes.pages}>\n                        <Pagination count={total} page={page} defaultPage={page} onChange={changePageHandle} variant=\"outlined\" shape=\"rounded\" hidePrevButton={isFirst} hideNextButton={isLast} />\n                    </div>} */}\n                </div>\n            );\n    }\n\n\t// return (\n\t// \t<form\n\t// \t\tmethod='POST '\n\t// \t\tonSubmit={(e) => {\n\t// \t\t\te.preventDefault();\n\t// \t\t}}\n\t// \t\tname='formName'\n\t// \t\tclassName='center'\n\t// \t>\n\t// \t\t<label>\n\t// \t\t<input autoComplete='off' type='text' name='searchTerm' placeholder=\"Search\" onChange={handleChange} />\n\t// \t\t</label>\n\t// \t</form>\n\t// );\n\n};\n\nexport default Search;","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/LikedPage.js",["187","188","189","190"],"import React, {useState, useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport Pagination from '@material-ui/lab/Pagination'\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Link} from '@material-ui/core'\nimport playAction from '../actions/playAction'\nimport removeSong from \"../actions/removeSong\";\nimport {useDispatch} from 'react-redux';\nconst axios = require('axios').default;\n\nconst columns = [\n    { id: 'title', label: 'Title', align: 'center', minWidth: 100 },\n    { id: 'artist', label: 'Artist', align: 'center', minWidth: 100 },\n    {\n        id: 'albumName',\n        label: 'Album Name',\n        minWidth: 100,\n        align: 'center',\n    },\n    {\n        id: 'remove',\n        label: 'Remove',\n        minWidth: 100,\n        align: 'center',\n    }\n\n];\n\n\n// if(Nsong.track.preview_url){\n//     dispatch(playAction.playSong(song));\n// }else{\n//     dispatch(playAction.toSong(song))\n// }\n\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n    },\n    container: {\n        maxHeight: 700,\n    },\n});\nconst LikedPage = () => {\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [favoriteSongList, SetFavoriteSongList] = useState(undefined);\n    const [dataSize, SetDatSie] = useState(0);\n    const [loading, SetLoading] = useState(true);\n    const [error, SetError] = useState(false);\n\n    const dispatch = useDispatch();\n\n    async function getFavoriteSongs() {\n        try {\n            const userInfo = {\n                userEmail: window.sessionStorage.userEmail\n            };\n            const favoriteSongs = await axios.post('http://localhost:5000/users/favoriteSongs', userInfo);\n            let newFavoriteSongs = [];\n            if(favoriteSongs.data) {\n                favoriteSongs.data.map(song => {\n                    let newSongFormat = {\n                        storedId: song.id,\n                        track: {\n                            album:{\n                                id: song.albumId,\n                                name: song.albumName,\n                            },\n                            artists: [\n                                {\n                                    id: song.artistId,\n                                    name: song.artist\n                                }\n                                ],\n                            name: song.title,\n                            preview_url: song.playUrl,\n                            id: song.songId\n                        },\n                    };\n                    newFavoriteSongs.push(newSongFormat)\n                })\n            }\n            await SetFavoriteSongList(newFavoriteSongs);\n            await SetDatSie(newFavoriteSongs.length);\n            await SetLoading(false)\n        } catch(e) {\n            SetError(true);\n            console.log({error: e})\n        }\n    }\n    useEffect(()=> {\n        getFavoriteSongs();\n    }, [dataSize, page]);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const handleRemoveSong = (songId) => {\n        try {\n            const result =  removeSong(songId);\n            SetDatSie(dataSize - 1);\n            if(result) {\n                alert(\"Remove the song successfully\")\n            }\n        } catch(e) {\n            console.log({error:e})\n        }\n    };\n\n    if(loading) {\n        return (\n            <div>Loading....</div>\n        )\n    } else if(error) {\n        return (\n            <div>Error.....</div>\n        )\n    } else {\n        return (\n            <Paper className={classes.root}>\n                <TableContainer className={classes.container}>\n                    <Table stickyHeader aria-label=\"sticky table\" >\n                        <TableHead>\n                            <TableRow>\n                                {columns.map((column) => (\n                                    <TableCell\n                                        key={column.id}\n                                        align={column.align}\n                                        style={{ minWidth: column.minWidth }}\n                                    >\n                                        {column.label}\n                                    </TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {favoriteSongList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((favoriteSong) => {\n                                return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={favoriteSong.storedId}>\n                                        <TableCell align='center'>\n                                            {favoriteSong.track? favoriteSong.track.name: '-'}\n                                        </TableCell >\n                                        <TableCell align='center'>\n                                            <Link href={favoriteSong.track?`/albumList/${favoriteSong.track.artists[0].id}`:\"\"} >\n                                                {favoriteSong.track?favoriteSong.track.artists[0].name:'-'}\n                                            </Link>\n                                        </TableCell>\n                                        <TableCell align='center'>\n                                            <Link href={favoriteSong.track?`/albums/songsList/${favoriteSong.track.album.id}`:\"\"}>\n                                                {favoriteSong.track?favoriteSong.track.album.name:'-'}\n                                            </Link>\n                                        </TableCell>\n                                        <TableCell align='center' onClick={()=>{handleRemoveSong(favoriteSong.storedId)}}>\n                                            <DeleteOutlinedIcon/>\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[10, 25, 100]}\n                    component=\"div\"\n                    count={dataSize}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        );\n    }\n};\n\nexport default LikedPage\n\n\n\n\n\n","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Nav/TopNav.js",["191","192","193","194","195","196","197"],"import React, { useState, useEffect } from \"react\";\nimport {  withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport UserProfile from '../UserProfile';\nimport { Navbar,Nav,NavDropdown } from 'react-bootstrap'\nimport { AppBar } from '@material-ui/core';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Search from '../Search'\nconst useStyles = makeStyles({\n    topnav:{\n        overflow: \"hidden\",\n        background: \"#333\",\n        position: \"fixed\",\n        top: \"0\",\n        width: \"100%\",\n        zIndex:'200px'\n    },\n});\n\nconst TopNav = (props)=>{\n    const  classes =  useStyles();\n    const [isAuthenticated, userHasAuthenticated] = useState(false);\n    const e = window.sessionStorage.getItem(\"userEmail\");\n    const [userEmail, setUserEmail]= useState(e);\n    console.log(\"user email: \" + userEmail);\n    console.log(\"userHasAuthenticated: \" + isAuthenticated);\n    useEffect(() => {\n      onLoadAgain();\n    }, [e]);\n    async function onLoadAgain() {\n      if (userEmail) {\n        userHasAuthenticated(true);\n      }else{\n        console.log(\"user email is empty\");\n        userHasAuthenticated(false);\n      }\n    }\n    if (window.location.href.includes(\"access_token\")) {\n      return (\n        <UserProfile />\n      );\n    }\n    function handleLogout() {\n        window.sessionStorage.setItem(\"userEmail\", \"\");\n        userHasAuthenticated(false);\n        window.location.reload(false);\n      }\n    const url = 'https://accounts.spotify.com/authorize?show_dialog=true&client_id=230be2f46909426b8b80cac36446b52a&scope=playlist-read-private%20playlist-read-collaborative%20playlist-modify-public%20user-read-recently-played%20playlist-modify-private%20ugc-image-upload%20user-follow-modify%20user-follow-read%20user-library-read%20user-library-modify%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state&response_type=token&redirect_uri=http://localhost:3000/callback';\n    if(isAuthenticated){\n        return(\n            <AppBar position=\"static\">\n            <Navbar className = {classes.topnave} collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">Music Website</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/\">Home</Nav.Link>\n                <Nav.Link href=\"/search\">Search</Nav.Link>\n                <Nav.Link href=\"/search\">Playlist</Nav.Link>\n                </Nav>\n                <Nav>\n                <NavDropdown title={userEmail} id=\"collasible-nav-dropdown\">\n                    <NavDropdown.Item href=\"#action/3.1\">Account</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.2\">Profile</NavDropdown.Item>\n                    <NavDropdown.Item href=\"/likedpage\">Favorite List</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item onClick={handleLogout} >Log out</NavDropdown.Item>\n                </NavDropdown>\n                </Nav>\n            </Navbar.Collapse>\n            </Navbar>\n            </AppBar>\n        )\n    }\n    else{\n        return(\n            <AppBar position=\"static\">\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/\">Music Website</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                {/* <Nav.Link href=\"#features\">Features</Nav.Link>\n                <Nav.Link href=\"#pricing\">Pricing</Nav.Link> */}\n                {/* <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                </NavDropdown> */}\n                </Nav>\n                <Nav>\n                <Nav.Link href=\"http://localhost:3000/register\">Register</Nav.Link>\n                <Nav.Link href=\"http://localhost:3000/login\">\n                    Login\n                </Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n            </Navbar>\n            </AppBar>\n        )\n    }\n    //return(\n    //     <header className=\"App-header\">\n    //     {/* <TopNav></TopNav> */}\n    //     {(isAuthenticated) ? (\n    //       <div>\n    //         < button class=\"login\"  className=\"login\" onClick={handleLogout} >\n    //             Logout\n    //         </button>\n    //         <p class = \"login\" style={{fontSize:'30px'}}>  To logout you might need double click</p>\n    //         <p class = \"login\" style={{fontSize:'30px'}}> <a href= \"http://localhost:3000/register\"> Register </a></p>\n    //       </div>\n    //       ) : (\n    //     <div>\n    //         <h1 className=\"App-title\"> Welcome To Our Music Website </h1>\n    //         <p class = \"login\" style={{fontSize:'30px'}}>\n    //         <a href= \"http://localhost:3000/\" > Categories</a> </p>\n\n    //         <p class = \"login\" style={{fontSize:'30px'}}>\n    //         <a  href= \"http://localhost:3000/login\"> Login </a></p>\n\n    //         <p class = \"login\" style={{fontSize:'30px'}}>\n    //         <a href= \"http://localhost:3000/register\"> Register</a></p>\n\n    //         <p class = \"login\" style={{fontSize:'30px'}}>\n    //         <a  href= {url} > Open Spotify Online </a></p>\n    //         </div>\n    //       )}\n    //   </header>\n    //)\n}\n\nexport default withRouter(TopNav);","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/actions/addSong.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/NewRelease.js",["198"],"import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Card, CardActionArea,  Grid,  makeStyles, AppBar, Tab } from '@material-ui/core';\nimport '../App.css';\nconst useStyles = makeStyles({\n        appbar: {\n            background:'#006600',\n            marginLeft:'30px',\n            marginRight:'30px',\n            width: 'auto',\n            marginBottom:'30px',\n        },\n        card: {\n            maxWidth: 300,\n            height: 'auto',\n            marginLeft: '30px',\n            marginRight: '30px',\n            borderRadius: 5,\n            border: '1px solid #1e8678',\n            boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n        },\n\ttitleHead: {\n\t\tborderBottom: '1px solid #1e8678',\n\t\tfontWeight: 'bold'\n\t},\n\tgrid: {\n\t\tflexGrow: 1,\n\t\tflexDirection: 'row'\n\t},\n\tmedia: {\n\t\theight: '100%',\n\t\twidth: '100%'\n\t},\n\tbutton: {\n\t\tcolor: '#1e8678',\n\t\tfontWeight: 'bold',\n\t\tfontSize: 12\n\t},\n\tbtnGroup: {\n\t\tmarginTop: '50px'\n\t},\n\tpages: {\n\t\ttextAlign: 'center',\n\t\tmargin: '100px',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n    },\n    list_name:{\n        textAlign: 'center'\n    }\n});\n\nconst NewRelease=(props)=>{\n    const classes = useStyles();\n    const [ newAlbumList, setNewAlbumList ] = useState(undefined);\n    const [page, setPage] = useState(1);\n    const [ total, setTotal] =  useState(undefined);\n    const [isLast, setLast] = useState(false);\n    const [isFirst, setFirst] = useState(true);\n    const [loading, setLoading] = useState(true);\n    const [error, setError]  =  useState(false);\n\n    async function getData(url, type){\n        var request = require('request');\n        var client_id = 'c9b1db19becd48f78d6913a3431ae24a'; // Your client id\n        var client_secret = '98145905039345c4a5df9542ca98cc55'; // Your secret\n        var authOptions = {\n            url: 'https://accounts.spotify.com/api/token',\n            headers: {\n              'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n            },\n            form: {\n              grant_type: 'client_credentials'\n            },\n            json: true\n        };\n        request.post(authOptions,function(error, response,body){\n            if (!error && response.statusCode === 200) {\n                    var token = body.access_token;\n                    var options = {\n                        url: url,\n                        headers: {\n                            'Authorization': 'Bearer ' + token\n                        },\n                        json: true\n                    };\n                    request.get(options, function(error, response, body) {\n                    if(error ||  response.statusCode  ===  404){\n                        setError(true);\n                        setLoading(false);\n                    }else{\n                        if(type === 'albumlists'){\n                            console.log(body);\n                            setNewAlbumList(body.albums.items);\n                            setTotal(Math.ceil(body.albums.total / 24))\n                        }\n                        setLoading(false);\n                    }\n                    });\n            }\n        });\n    }\n\n    useEffect(()=> {\n        async function fetchData () {\n            try{\n\n                await getData(`https://api.spotify.com/v1/browse/new-releases?limit=24&&offset=${page*24-24}`,'albumlists');\n                if (page === 1) {\n\t\t\t\t\tsetFirst(true);\n\t\t\t\t\tsetLast(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetFirst(false);\n                }\n                if (page === total) {\n\t\t\t\t\tsetLast(true);\n\t\t\t\t\tsetFirst(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetLast(false);\n                }\n            } catch (e) {\n                console.log(e);\n                setError(true);\n            }\n        }\n\n        fetchData();\n    }, [page]);\n\n    const changePageHandle = (event, page) => {\n        setPage(page);\n        if (page === 1) {\n            setFirst(true);\n        } else {\n            setFirst(false);\n        };\n        if (page === total) {\n            setLast(true);\n        } else {\n            setLast(false);\n        }\n    }\n\n    const buildCard = (list)  => {\n        return(\n            <Grid item xs={12} sm={4} md={3} lg={2} xl={2}  key={list.id}>\n                <Card className={classes.card} variant='outlined'>\n                <CardActionArea>\n                    <Link to={`/albums/songsList/${list.id}`}>\n                    <div className='category-image'>\n                        <img alt=\"category\" src={list.icons ? list.icons[0].url : list.images[0].url} width='100%'/>\n\n                         <p className={classes.list_name}>{list.name}</p>\n\n                    </div>\n                    </Link>\n                </CardActionArea>\n                </Card>\n            </Grid>\n        );\n    };\n    let card = newAlbumList && newAlbumList.map((playlist) => {\n        return buildCard(playlist);\n    });\n\n\n    if(loading){\n        return (\n\t\t\t<div>\n\t\t\t\t<h2>Loading....</h2>\n\t\t\t</div>\n\t\t);\n    }else if(error){\n        return (\n\t\t\t<div>\n\t\t\t\t<h2>Error....</h2>\n\t\t\t</div>\n\t\t);\n    }else {\n        return(\n            <div>\n                <AppBar position=\"static\" className={classes.appbar}>\n                    <Tab  label=\"New Release Albums\" />\n                    </AppBar>\n                <Grid container className={classes.grid} spacing={2}>\n                        {card}\n                </Grid>\n                {total === 1?<div className={classes.pages}>No More</div>:\n                <div className={classes.pages}>\n                        <Pagination count={total} page={page} defaultPage={page} onChange={changePageHandle} variant=\"outlined\" shape=\"rounded\" hidePrevButton={isFirst} hideNextButton={isLast} />\n                </div>\n                }\n            </div>\n\n        );\n    }\n}\nexport default withRouter(NewRelease);","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/My404Component.js",["199","200"],"import React from \"react\";\nimport '../App.css';\n\n\n\nconst My404Component = () => {\n    const url = 'https://accounts.spotify.com/authorize?show_dialog=true&client_id=230be2f46909426b8b80cac36446b52a&scope=playlist-read-private%20playlist-read-collaborative%20playlist-modify-public%20user-read-recently-played%20playlist-modify-private%20ugc-image-upload%20user-follow-modify%20user-follow-read%20user-library-read%20user-library-modify%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state&response_type=token&redirect_uri=http://localhost:3000/callback';\n    const e = window.sessionStorage.getItem(\"userEmail\");\n    \n\n    return (\n        \n\t\t<div>\n\n            <p class = \"login\" style={{fontSize:'30px'}}>\n\n                404 Not Found &nbsp;\n                \n\n            </p>\n            \n\t\t</div>\n      \n    )\n};\n\nexport default My404Component;\n","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/actions/removeSong.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/UserAccount.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/EditProfile.js",["201"],"import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport  {makeStyles, Grid} from \"@material-ui/core\";\nimport Select from '@material-ui/core/Select';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nconst axios = require('axios');\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '15ch',\n        },\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\nexport default function FormDialog() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const initialFormData = Object.freeze({\n        firstName: '',\n        lastName: '',\n        gender: '',\n    });\n\n    const [formData, SetFormData] = useState(initialFormData);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(formData);\n        try {\n            let updateInfo = {\n                userEmail: window.sessionStorage.userEmail,\n                firstName: formData.firstName,\n                lastName: formData.lastName,\n                gender: formData.gender,\n            };\n            const updateRes = axios.post('http://localhost:5000/users/updateUser', updateInfo);\n            window.location.reload()\n        } catch(e) {\n            console.log()\n        }\n\n    };\n    const handleChange = (e) => {\n        if(e.target.name && e.target.value) {\n            SetFormData({\n                ...formData,\n                [e.target.name]: e.target.value\n            })\n        }\n    };\n\n    return (\n        <div>\n            <Button variant=\"contained\"\n                    color=\"primary\"\n                    size=\"medium\"\n                    onClick={handleClickOpen}\n                    startIcon={<EditIcon/>}>\n                Edit\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Edit Profile Information</DialogTitle>\n                <DialogContent>\n                    <form\n                        className={classes.form}\n                        onSubmit={handleSubmit}\n                    >\n                        <TextField className=\"form-group\"\n                            required\n                            id=\"standard-required\"\n                            label=\"First Name\"\n                                   name=\"firstName\"\n                                   onChange={handleChange}\n                        />\n                        <TextField className=\"form-group\"\n                            required\n                            id=\"outlined-required\"\n                            label=\"Last Name\"\n                            name=\"lastName\"\n                            onChange={handleChange}\n                        />\n                        <FormControl  className={classes.formControl}>\n                            <InputLabel>gender</InputLabel>\n                            <Select\n                                required\n                                id=\"outlined-required\"\n                                name=\"gender\"\n                                value={formData.gender}\n                                displayEmpty\n                                className={classes.selectEmpty}\n                                inputProps={{ 'aria-label': 'Without label' }}\n                                onChange={handleChange}\n                            >\n                                <MenuItem value={\"Male\"}> Male</MenuItem>\n                                <MenuItem value={\"Female\"}>Female</MenuItem>\n                                <MenuItem value={\"Transgender\"}>Transgender</MenuItem>\n                                <MenuItem value={\"Gender-neutral\"}>Gender-neutral</MenuItem>\n                                <MenuItem value={\"Non-binary\"}>Non-binary</MenuItem>\n                                <MenuItem value={\"Others\"}>Others</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <br/>\n                        <br/>\n                        <Grid container justify=\"flex-end\">\n                            <Button onClick={handleClose} color=\"primary\" align='right'>\n                                Cancel\n                            </Button>\n                            <Button type=\"submit\" color=\"primary\" align='right'>\n                                Submit\n                            </Button>\n                        </Grid>\n\n                    </form>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/AddImage.js",["202"],"import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport AddAPhotoTwoToneIcon from '@material-ui/icons/AddAPhotoTwoTone';\nconst axios = require('axios').default;\n\nconst initialState = {\n    open: false,\n    files: []\n};\n\nexport default function DropzoneDialogExample() {\n    const [state, setState] = React.useState(initialState);\n\n\n    const handleOpen = () => {\n        setState({\n            ...state,\n            open: true\n        });\n    };\n\n    const handleClose = () => {\n        setState({\n            ...state,\n            open: false\n        });\n    };\n\n    const handleSave = files => {\n        setState({\n            ...state,\n            files: files,\n            open: false\n        });\n        const formData = new FormData();\n        formData.append('myImg', files[0]);\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        };\n\n        const returnImg = axios.post('http://localhost:5000/users/addImg', formData, config)\n            .then((response)=> {\n            alert(\"Upload image successfully\")\n        }).catch((error)=> {console.log({error:error})})\n\n    };\n\n    return (\n        <div>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"medium\"\n                onClick={handleOpen}\n                startIcon={<AddAPhotoTwoToneIcon/>}\n            >\n                Upload\n            </Button>\n            <DropzoneDialog\n                open={state.open}\n                onSave={handleSave}\n                acceptedFiles={[\"image/jpeg\", \"image/png\", \"image/bmp\"]}\n                showPreviews={true}\n                maxFileSize={5000000}\n                onClose={handleClose}\n                cancelButtonText={\"Cancel\"}\n                submitButtonText={\"Upload\"}\n                showFileNamesInPreview={true}\n                dialogTitle={\"Upload Image\"}\n                dropzoneText={\"Drag and drop an image file here or click\"}\n            />\n        </div>\n    );\n}\n","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Nav/Aside.js",["203","204","205"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SearchSinger.js",["206"],"import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport noImage from '../img/download.jpeg';\nimport { Card, CardActionArea,  Grid,  makeStyles, AppBar,Tab } from '@material-ui/core';\nimport '../App.css';\nconst useStyles = makeStyles({\n    appbar: {\n        background:'#006600',\n        marginLeft:'30px',\n        marginRight:'30px',\n        width: 'auto',\n        marginBottom:'30px',\n    },\n\tcard: {\n\t\tmaxWidth: 200,\n\t\theight: 'auto',\n\t\tmarginLeft: '30px',\n\t\tmarginRight: '30px',\n\t\tborderRadius: 5,\n\t\tborder: '1px solid #1e8678',\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n\t},\n\ttitleHead: {\n\t\tborderBottom: '1px solid #1e8678',\n\t\tfontWeight: 'bold'\n\t},\n\tgrid: {\n\t\tflexGrow: 1,\n\t\tflexDirection: 'row'\n\t},\n\tmedia: {\n\t\theight: '100%',\n\t\twidth: '100%'\n\t},\n\tbutton: {\n\t\tcolor: '#1e8678',\n\t\tfontWeight: 'bold',\n\t\tfontSize: 12\n\t},\n\tbtnGroup: {\n\t\tmarginTop: '50px'\n\t},\n\tpages: {\n\t\ttextAlign: 'center',\n\t\tmargin: '100px',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n    },\n    list_name:{\n        textAlign: 'center'\n    }\n});\n\nconst SearchSinger = (props) =>{\n    const classes = useStyles();\n    const [ genresList, setGenresList ] = useState(undefined);\n    const [page, setPage] = useState(1);\n    const [isLast, setLast] = useState(false);\n    const [isFirst, setFirst] = useState(true);\n    const [total, setTotal] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n    const [error, setError]  =  useState(false);\n    let card = null;\n\n    async function getData(url){\n        var request = require('request');\n        var client_id = 'c9b1db19becd48f78d6913a3431ae24a'; // Your client id\n        var client_secret = '98145905039345c4a5df9542ca98cc55'; // Your secret\n        var authOptions = {\n            url: 'https://accounts.spotify.com/api/token',\n            headers: {\n              'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n            },\n            form: {\n              grant_type: 'client_credentials'\n            },\n            json: true\n        };\n        request.post(authOptions,function(error, response,body){\n            if (!error && response.statusCode === 200) {\n                    var token = body.access_token;\n                    var options = {\n                        url: url,\n                        headers: {\n                            'Authorization': 'Bearer ' + token\n                        },\n                        json: true\n                    };\n                    request.get(options, function(error, response, body) {\n                    if(error){\n                        setError(true);\n                    }else{\n                    setTotal(Math.ceil(body.artists.total / 24));\n                    setGenresList(body.artists.items);\n                    setLoading(false);\n                    }\n                    });\n            }\n        });\n    }\n\n\n    useEffect(()=> {\n        async function fetchData () {\n            try{\n                // console.log(props.value);\n                getData(`https://api.spotify.com/v1/search?query=${props.match.params.letter}&offset=${page*24-24}&limit=24&type=artist`);\n                if (page === 1) {\n\t\t\t\t\tsetFirst(true);\n\t\t\t\t\tsetLast(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetFirst(false);\n                }\n                if (page === total) {\n\t\t\t\t\tsetLast(true);\n\t\t\t\t\tsetFirst(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetLast(false);\n                }\n            } catch (e) {\n                console.log(e);\n                setError(true);\n            }\n        }\n\n        fetchData();\n    }, [page]);\n\n\n    const changePageHandle = (event, page) => {\n        setPage(page);\n        if (page === 1) {\n            setFirst(true);\n        } else {\n            setFirst(false);\n        };\n        if (page === total) {\n            setLast(true);\n        } else {\n            setLast(false);\n        }\n    }\n\n\n        const buildCard = (genre)  => {\n            return(\n                <Grid item xs={12} sm={4} md={3} lg={2} xl={2}  key={genre.id}>\n                    <Card className={classes.card} variant='outlined'>\n                    <CardActionArea>\n                        <Link to={`/albumList/${genre.id}`}>\n                        <div className='category-image'>\n                        <img alt=\"category\" src={genre.images && genre.images.length === 0 ? noImage : genre.images[0].url} width='100%' height='180px'/>\n                         <p className='category-name'>{genre.name}</p>\n                         </div>\n                        </Link>\n                    </CardActionArea>\n                    </Card>\n                </Grid>\n            );\n        };\n        card = genresList && genresList.map((genre) => {\n            return buildCard(genre);\n        });\n        if(loading){\n            return (\n                <div>\n                    <h2>Loading....</h2>\n                </div>\n            );\n        }else if(error){\n            return (\n                <div>\n                    <h2>Error....</h2>\n                </div>\n            );\n        }else {\n            return (\n                <div>\n                    <AppBar position=\"static\" className={classes.appbar}>\n                    <Tab  label=\"All Categories\" />\n                    </AppBar>\n                    <Grid container className={classes.grid} spacing={2}>\n                        {card}\n                    </Grid>\n                    {total === 1?<div className={classes.pages}>No More</div>:\n                    <div className={classes.pages}>\n                        <Pagination count={total} page={page} defaultPage={page} onChange={changePageHandle} variant=\"outlined\" shape=\"rounded\" hidePrevButton={isFirst} hideNextButton={isLast} />\n                    </div>}\n\n                </div>\n            );\n        }\n\n};\n\nexport default withRouter(SearchSinger);",{"ruleId":"207","severity":1,"message":"208","line":6,"column":13,"nodeType":"209","messageId":"210","endLine":6,"endColumn":26},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"207","severity":1,"message":"215","line":30,"column":21,"nodeType":"209","messageId":"210","endLine":30,"endColumn":33},{"ruleId":"216","severity":1,"message":"217","line":39,"column":6,"nodeType":"218","endLine":39,"endColumn":9,"suggestions":"219"},{"ruleId":"207","severity":1,"message":"220","line":8,"column":9,"nodeType":"209","messageId":"210","endLine":8,"endColumn":15},{"ruleId":"216","severity":1,"message":"221","line":129,"column":8,"nodeType":"218","endLine":129,"endColumn":14,"suggestions":"222"},{"ruleId":"207","severity":1,"message":"223","line":1,"column":26,"nodeType":"209","messageId":"210","endLine":1,"endColumn":35},{"ruleId":"224","severity":1,"message":"225","line":41,"column":33,"nodeType":"226","messageId":"227","endLine":41,"endColumn":35},{"ruleId":"224","severity":1,"message":"225","line":44,"column":37,"nodeType":"226","messageId":"227","endLine":44,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":47,"column":35,"nodeType":"226","messageId":"227","endLine":47,"endColumn":37},{"ruleId":"224","severity":1,"message":"225","line":50,"column":34,"nodeType":"226","messageId":"227","endLine":50,"endColumn":36},{"ruleId":"224","severity":1,"message":"225","line":53,"column":37,"nodeType":"226","messageId":"227","endLine":53,"endColumn":39},{"ruleId":"224","severity":1,"message":"225","line":56,"column":44,"nodeType":"226","messageId":"227","endLine":56,"endColumn":46},{"ruleId":"224","severity":1,"message":"225","line":41,"column":25,"nodeType":"226","messageId":"227","endLine":41,"endColumn":27},{"ruleId":"224","severity":1,"message":"225","line":44,"column":33,"nodeType":"226","messageId":"227","endLine":44,"endColumn":35},{"ruleId":"216","severity":1,"message":"228","line":205,"column":7,"nodeType":"218","endLine":205,"endColumn":54,"suggestions":"229"},{"ruleId":"216","severity":1,"message":"228","line":231,"column":8,"nodeType":"218","endLine":231,"endColumn":67,"suggestions":"230"},{"ruleId":"207","severity":1,"message":"231","line":3,"column":10,"nodeType":"209","messageId":"210","endLine":3,"endColumn":18},{"ruleId":"216","severity":1,"message":"232","line":128,"column":8,"nodeType":"218","endLine":128,"endColumn":14,"suggestions":"233"},{"ruleId":"207","severity":1,"message":"234","line":8,"column":10,"nodeType":"209","messageId":"210","endLine":8,"endColumn":21},{"ruleId":"216","severity":1,"message":"235","line":211,"column":8,"nodeType":"218","endLine":211,"endColumn":36,"suggestions":"236"},{"ruleId":"207","severity":1,"message":"237","line":249,"column":17,"nodeType":"209","messageId":"210","endLine":249,"endColumn":21},{"ruleId":"216","severity":1,"message":"238","line":260,"column":8,"nodeType":"218","endLine":260,"endColumn":36,"suggestions":"239"},{"ruleId":"216","severity":1,"message":"240","line":272,"column":8,"nodeType":"218","endLine":272,"endColumn":36,"suggestions":"241"},{"ruleId":"216","severity":1,"message":"242","line":131,"column":3,"nodeType":"218","endLine":131,"endColumn":13,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":138,"column":54,"nodeType":"246","messageId":"247","endLine":138,"endColumn":56},{"ruleId":"244","severity":1,"message":"245","line":147,"column":67,"nodeType":"246","messageId":"247","endLine":147,"endColumn":69},{"ruleId":"244","severity":1,"message":"245","line":156,"column":56,"nodeType":"246","messageId":"247","endLine":156,"endColumn":58},{"ruleId":"216","severity":1,"message":"248","line":132,"column":7,"nodeType":"218","endLine":132,"endColumn":35,"suggestions":"249"},{"ruleId":"207","severity":1,"message":"223","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":36},{"ruleId":"207","severity":1,"message":"250","line":2,"column":16,"nodeType":"209","messageId":"210","endLine":2,"endColumn":26},{"ruleId":"207","severity":1,"message":"251","line":3,"column":8,"nodeType":"209","messageId":"210","endLine":3,"endColumn":18},{"ruleId":"207","severity":1,"message":"252","line":5,"column":8,"nodeType":"209","messageId":"210","endLine":5,"endColumn":13},{"ruleId":"207","severity":1,"message":"253","line":59,"column":13,"nodeType":"209","messageId":"210","endLine":59,"endColumn":17},{"ruleId":"207","severity":1,"message":"254","line":59,"column":19,"nodeType":"209","messageId":"210","endLine":59,"endColumn":26},{"ruleId":"207","severity":1,"message":"255","line":60,"column":13,"nodeType":"209","messageId":"210","endLine":60,"endColumn":19},{"ruleId":"207","severity":1,"message":"256","line":60,"column":21,"nodeType":"209","messageId":"210","endLine":60,"endColumn":28},{"ruleId":"207","severity":1,"message":"257","line":61,"column":13,"nodeType":"209","messageId":"210","endLine":61,"endColumn":20},{"ruleId":"207","severity":1,"message":"258","line":61,"column":22,"nodeType":"209","messageId":"210","endLine":61,"endColumn":30},{"ruleId":"207","severity":1,"message":"259","line":114,"column":11,"nodeType":"209","messageId":"210","endLine":114,"endColumn":22},{"ruleId":"207","severity":1,"message":"251","line":10,"column":8,"nodeType":"209","messageId":"210","endLine":10,"endColumn":18},{"ruleId":"207","severity":1,"message":"260","line":14,"column":8,"nodeType":"209","messageId":"210","endLine":14,"endColumn":18},{"ruleId":"207","severity":1,"message":"261","line":62,"column":11,"nodeType":"209","messageId":"210","endLine":62,"endColumn":19},{"ruleId":"244","severity":1,"message":"262","line":72,"column":45,"nodeType":"246","messageId":"263","endLine":72,"endColumn":47},{"ruleId":"207","severity":1,"message":"264","line":8,"column":27,"nodeType":"209","messageId":"210","endLine":8,"endColumn":33},{"ruleId":"207","severity":1,"message":"265","line":8,"column":35,"nodeType":"209","messageId":"210","endLine":8,"endColumn":40},{"ruleId":"207","severity":1,"message":"266","line":8,"column":42,"nodeType":"209","messageId":"210","endLine":8,"endColumn":46},{"ruleId":"207","severity":1,"message":"267","line":9,"column":8,"nodeType":"209","messageId":"210","endLine":9,"endColumn":14},{"ruleId":"207","severity":1,"message":"215","line":25,"column":23,"nodeType":"209","messageId":"210","endLine":25,"endColumn":35},{"ruleId":"216","severity":1,"message":"217","line":30,"column":8,"nodeType":"218","endLine":30,"endColumn":11,"suggestions":"268"},{"ruleId":"207","severity":1,"message":"269","line":49,"column":11,"nodeType":"209","messageId":"210","endLine":49,"endColumn":14},{"ruleId":"216","severity":1,"message":"232","line":130,"column":8,"nodeType":"218","endLine":130,"endColumn":14,"suggestions":"270"},{"ruleId":"207","severity":1,"message":"269","line":7,"column":11,"nodeType":"209","messageId":"210","endLine":7,"endColumn":14},{"ruleId":"207","severity":1,"message":"271","line":8,"column":11,"nodeType":"209","messageId":"210","endLine":8,"endColumn":12},{"ruleId":"207","severity":1,"message":"272","line":57,"column":19,"nodeType":"209","messageId":"210","endLine":57,"endColumn":28},{"ruleId":"207","severity":1,"message":"273","line":44,"column":15,"nodeType":"209","messageId":"210","endLine":44,"endColumn":24},{"ruleId":"207","severity":1,"message":"274","line":20,"column":10,"nodeType":"209","messageId":"210","endLine":20,"endColumn":25},{"ruleId":"207","severity":1,"message":"215","line":22,"column":21,"nodeType":"209","messageId":"210","endLine":22,"endColumn":33},{"ruleId":"216","severity":1,"message":"217","line":26,"column":6,"nodeType":"218","endLine":26,"endColumn":9,"suggestions":"275"},{"ruleId":"216","severity":1,"message":"276","line":129,"column":8,"nodeType":"218","endLine":129,"endColumn":14,"suggestions":"277"},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["278"],"no-negated-in-lhs",["279"],"'setUserEmail' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onLoadAgain'. Either include it or remove the dependency array.","ArrayExpression",["280"],"'curUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.match.params.categories' and 'total'. Either include them or remove the dependency array.",["281"],"'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["282"],["283"],"'Redirect' is defined but never used.","React Hook useEffect has a missing dependency: 'total'. Either include it or remove the dependency array.",["284"],"'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'getData' and 'total'. Either include them or remove the dependency array.",["285"],"'time' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["286"],"React Hook useEffect has missing dependencies: 'audioControl', 'pauseSong', and 'songsPlay.playing'. Either include them or remove the dependency array.",["287"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["288"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'song.track.id'. Either include it or remove the dependency array.",["289"],"'withRouter' is defined but never used.","'Pagination' is defined but never used.","'Image' is defined but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'isLast' is assigned a value but never used.","'setLast' is assigned a value but never used.","'isFirst' is assigned a value but never used.","'setFirst' is assigned a value but never used.","'searchValue' is assigned a value but never used.","'playAction' is defined but never used.","'dispatch' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Search' is defined but never used.",["290"],"'url' is assigned a value but never used.",["291"],"'e' is assigned a value but never used.","'updateRes' is assigned a value but never used.","'returnImg' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.",["292"],"React Hook useEffect has missing dependencies: 'props.match.params.letter' and 'total'. Either include them or remove the dependency array.",["293"],"no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"294","fix":"314"},{"desc":"302","fix":"315"},{"desc":"294","fix":"316"},{"desc":"317","fix":"318"},"Update the dependencies array to be: [e, onLoadAgain]",{"range":"319","text":"320"},"Update the dependencies array to be: [page, props.match.params.categories, total]",{"range":"321","text":"322"},"Update the dependencies array to be: [getData, props.match.params.id, props.match.params.type]",{"range":"323","text":"324"},"Update the dependencies array to be: [page, props.match.params.id, total, props.match.params.type, getData]",{"range":"325","text":"326"},"Update the dependencies array to be: [page, total]",{"range":"327","text":"328"},"Update the dependencies array to be: [getData, page, props.match.params.id, total]",{"range":"329","text":"330"},"Update the dependencies array to be: [dispatch, song, songsPlay.globalPlay]",{"range":"331","text":"332"},"Update the dependencies array to be: [songsPlay.globalPlay, song, songsPlay.playing, audioControl, pauseSong]",{"range":"333","text":"334"},"Update the dependencies array to be: [id, props.id]",{"range":"335","text":"336"},"Update the dependencies array to be: [song.track.id, songR, songsPlay.globalPlay]",{"range":"337","text":"338"},{"range":"339","text":"320"},{"range":"340","text":"328"},{"range":"341","text":"320"},"Update the dependencies array to be: [page, props.match.params.letter, total]",{"range":"342","text":"343"},[1421,1424],"[e, onLoadAgain]",[3910,3916],"[page, props.match.params.categories, total]",[5950,5997],"[getData, props.match.params.id, props.match.params.type]",[6639,6698],"[page, props.match.params.id, total, props.match.params.type, getData]",[3603,3609],"[page, total]",[6301,6329],"[getData, page, props.match.params.id, total]",[6911,6939],"[dispatch, song, songsPlay.globalPlay]",[7250,7278],"[songsPlay.globalPlay, song, songsPlay.playing, audioControl, pauseSong]",[3131,3141],"[id, props.id]",[3369,3397],"[song.track.id, songR, songsPlay.globalPlay]",[1039,1042],[3926,3932],[771,774],[3710,3716],"[page, props.match.params.letter, total]"]