[{"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/index.js":"1","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/App.js":"2","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/store.js":"3","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/reportWebVitals.js":"4","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/serviceWorker.js":"5","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/UserProfile.js":"6","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/PlayList.js":"7","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Register/Register.js":"8","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Login/Login.js":"9","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SongList.js":"10","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Home.js":"11","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/GenresList.js":"12","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/AlbumList.js":"13","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SongPlay.js":"14","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/libs/contextLib.js":"15","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/reducers/rootReducer.js":"16","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Infotmation.js":"17","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Song.js":"18","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/reducers/songPlayer.js":"19","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/actions/playAction.js":"20"},{"size":668,"mtime":1607783535424,"results":"21","hashOfConfig":"22"},{"size":4897,"mtime":1607783535421,"results":"23","hashOfConfig":"22"},{"size":237,"mtime":1607666854140,"results":"24","hashOfConfig":"22"},{"size":362,"mtime":1607665978552,"results":"25","hashOfConfig":"22"},{"size":5086,"mtime":1607783535425,"results":"26","hashOfConfig":"22"},{"size":2408,"mtime":1607783535423,"results":"27","hashOfConfig":"22"},{"size":5907,"mtime":1607666653211,"results":"28","hashOfConfig":"22"},{"size":6824,"mtime":1607783535423,"results":"29","hashOfConfig":"22"},{"size":3943,"mtime":1607783535422,"results":"30","hashOfConfig":"22"},{"size":8982,"mtime":1607800935746,"results":"31","hashOfConfig":"22"},{"size":1152,"mtime":1607783535422,"results":"32","hashOfConfig":"22"},{"size":5790,"mtime":1607783535421,"results":"33","hashOfConfig":"22"},{"size":9638,"mtime":1607801371669,"results":"34","hashOfConfig":"22"},{"size":9009,"mtime":1607801695821,"results":"35","hashOfConfig":"22"},{"size":168,"mtime":1607783535424,"results":"36","hashOfConfig":"22"},{"size":171,"mtime":1607666835606,"results":"37","hashOfConfig":"22"},{"size":7031,"mtime":1607666653210,"results":"38","hashOfConfig":"22"},{"size":5909,"mtime":1607800980923,"results":"39","hashOfConfig":"22"},{"size":2125,"mtime":1607801079130,"results":"40","hashOfConfig":"22"},{"size":802,"mtime":1607801070259,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"1gr11ca",{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"45"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/index.js",["92"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["93","94"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/App.js",["95","96","97"],"import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register'\n\nimport AlbumList from './components/AlbumList'\nimport GenresList from './components/GenresList'\nimport PlayList from './components/PlayList'\nimport SongList from './components/SongList'\nimport Songplay from './components/SongPlay'\n\nimport { AppContext } from \"./libs/contextLib\";\n\n\n\nfunction App() {\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const e = window.sessionStorage.getItem(\"userEmail\");\n  const [userEmail, setUserEmail]= useState(e);\n\n\n\n  console.log(\"user email: \" + userEmail);\n  console.log(\"userHasAuthenticated: \" + isAuthenticated);\n\n  useEffect(() => {\n    onLoadAgain();\n  }, [e]);\n  \n  async function onLoadAgain() {\n    if (userEmail) {\n      userHasAuthenticated(true);\n    }else{\n      console.log(\"user email is empty\");\n      userHasAuthenticated(false);\n    }\n\n  }\n\n  if (window.location.href.includes(\"access_token\")) {\n    return (\n      <UserProfile />\n        \n    );\n  }\n  function handleLogout() {\n    window.sessionStorage.setItem(\"userEmail\", \"\");\n    userHasAuthenticated(false);\n    \n  }\n  const url = 'https://accounts.spotify.com/authorize?show_dialog=true&client_id=230be2f46909426b8b80cac36446b52a&scope=playlist-read-private%20playlist-read-collaborative%20playlist-modify-public%20user-read-recently-played%20playlist-modify-private%20ugc-image-upload%20user-follow-modify%20user-follow-read%20user-library-read%20user-library-modify%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state&response_type=token&redirect_uri=http://localhost:3000/callback';\n\n  return (\n    // !isAuthenticating && (\n      <Router>\n        <div>\n          <header className=\"App-header\">\n            \n            {(isAuthenticated) ? (\n              <div>\n                <button\n                    class=\"login\" \n                    className=\"login\"\n                    onClick={handleLogout}\n                >\n                    Logout\n                </button>\n                <p class = \"login\" style={{fontSize:'30px'}}> \n                      To logout you might need double click\n                  </p>\n                <p class = \"login\" style={{fontSize:'30px'}}> \n                      <a\n                          href= \"http://localhost:3000/register\"\n                      >\n                          Register\n                      </a>\n                  </p>\n              </div>  \n              ) : (\n                <div>\n                  <h1 className=\"App-title\">\n                    Welcome To Our Music Website\n                  </h1>\n                  <p class = \"login\" style={{fontSize:'30px'}}>\n\n                      <a\n                          href= \"http://localhost:3000/\"\n                      >\n                          Categories\n                      </a>\n\n                      \n                  </p>\n                  <p class = \"login\" style={{fontSize:'30px'}}>\n\n                      <a\n                          href= \"http://localhost:3000/login\"\n                      >\n                          Login\n                      </a>\n\n                      \n                  </p>\n                  \n                  <p class = \"login\" style={{fontSize:'30px'}}> \n                      <a\n                          href= \"http://localhost:3000/register\"\n                      >\n                          Register\n                      </a>\n                  </p>\n\n                  <p class = \"login\" style={{fontSize:'30px'}}>\n\n                  <a\n                      href= {url}\n                  >\n                      Open Spotify Online\n                  </a>\n\n                \n\t\t\t</p>\n                </div>\n              )}\n          </header>\n          {/* Rupu's play components */}\n          <Songplay></Songplay>\n\n\n          <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n            {/* Yichao's routes */}\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/userprofile\" component={UserProfile} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n\n            {/* Rupu's routes */}\n            <Route exact path='/' component={GenresList} />\n            <Route exact path='/:categories/playList' component={PlayList} />\n            <Route exact path='/:type/songsList/:id' component={SongList} />\n            <Route exact path='/albumList/:id' component={AlbumList} />\n          </AppContext.Provider>\n\n          \n\n\n        </div>\n      </Router>\n    // )\n  );\n}\n\nexport default App;\n\n\n\n\n","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/store.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/reportWebVitals.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/serviceWorker.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/UserProfile.js",["98"],"import '../App.css';\nimport React, {useState, useEffect} from 'react';\n\n\nconst UserProfile = (props) => {\n    const playerUrl = \"https://open.spotify.com\";\n    const [userData, setUserData] = useState(''); \n    var curUrl = window.location;\n    // console.log(\"url: \" + curUrl);\n\n\n    const hash = window.location.hash.substr(1); //url of the current page\n    const arHash = hash.split('='); //this creates an array with key ([0] element) and value ([1] element)\n    const hash_value =  arHash[1];\n\n    const accessToken = hash_value;\n\n\n    useEffect(() => {\n        async function fetchData(){\n            try{\n                const url = \"https://api.spotify.com/v1/me/\";\n\n                const options = {\n                    headers: {\n                        Authorization: \"Bearer \" + accessToken\n                    }\n                };\n                fetch(url, options)\n                .then( res => res.json() )\n                // .then( data => console.log(\"typeof data: \" + typeof data))\n                .then( data => {\n                    console.log(data);\n                    console.log(\"test\");\n                    setUserData(data)\n                } );\n            } catch (e) {\n                console.log(e);\n                // setError(true);\n            }\n        }\n\n        fetchData();\n    }, [accessToken]);\n \n\n    return (\n\t\t<div>\n  \n        <p class = \"login\" style={{fontSize:'30px'}}>\n  \n          Login Successful!\n        </p>\n\n        \n        <p class = \"login\" style={{fontSize:'30px'}}>\n\n                <a\n                    href= {playerUrl}\n                >\n                    Spotify official player\n                </a>\n\t\t</p>\n\n\n        <p style={{fontSize:'50px'}}>\n            The user's profile:\n\t\t</p>\n\n        <p style={{fontSize:'25px'}}>\n            Country: {userData.country} \n\t\t</p>\n\n        <p style={{fontSize:'25px'}}>\n            Name: {userData.display_name}\n\t\t</p>\n\n        <p style={{fontSize:'25px'}}>\n            Email: {userData.email}\n\t\t</p>\n\n        {/* <p style={{fontSize:'25px'}}>\n            External url:  \n                <a\n                    href= {userData.external_urls.spotify}\n                >\n                    Click to open\n                </a>\n\t\t</p> */}\n\n        <p style={{fontSize:'25px'}}>\n            Account type: {userData.product}\n\t\t</p>\n              \n      </div>\n\n        \n    )\n};\n\nexport default UserProfile;\n","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/PlayList.js",["99"],"import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Card, CardActionArea,  Grid,  makeStyles, AppBar, Tab } from '@material-ui/core';\nimport '../App.css';\nconst useStyles = makeStyles({\n        appbar: {\n            background:'#006600',\n            marginLeft:'30px',\n            marginRight:'30px',\n            width: 'auto',\n            marginBottom:'30px',\n        },\n        card: {\n            maxWidth: 300,\n            height: 'auto',\n            marginLeft: '30px',\n            marginRight: '30px',\n            borderRadius: 5,\n            border: '1px solid #1e8678',\n            boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n        },\n\ttitleHead: {\n\t\tborderBottom: '1px solid #1e8678',\n\t\tfontWeight: 'bold'\n\t},\n\tgrid: {\n\t\tflexGrow: 1,\n\t\tflexDirection: 'row'\n\t},\n\tmedia: {\n\t\theight: '100%',\n\t\twidth: '100%'\n\t},\n\tbutton: {\n\t\tcolor: '#1e8678',\n\t\tfontWeight: 'bold',\n\t\tfontSize: 12\n\t},\n\tbtnGroup: {\n\t\tmarginTop: '50px'\n\t},\n\tpages: {\n\t\ttextAlign: 'center',\n\t\tmargin: '100px',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t}\n});\n\nconst PlayList=(props)=>{\n    const classes = useStyles();\n    const [ playList, setPlayList ] = useState(undefined);\n    const [page, setPage] = useState(1);\n    const [ total, setTotal] =  useState(undefined);\n    const [isLast, setLast] = useState(false);\n    const [isFirst, setFirst] = useState(true);\n    const [loading, setLoading] = useState(true);\n    const [error, setError]  =  useState(false);\n\n    async function getData(url, type){\n        var request = require('request');\n        var client_id = 'c9b1db19becd48f78d6913a3431ae24a'; // Your client id\n        var client_secret = '98145905039345c4a5df9542ca98cc55'; // Your secret\n        var authOptions = {\n            url: 'https://accounts.spotify.com/api/token',\n            headers: {\n              'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n            },\n            form: {\n              grant_type: 'client_credentials'\n            },\n            json: true\n        };\n        request.post(authOptions,function(error, response,body){\n            if (!error && response.statusCode === 200) {\n                    var token = body.access_token;\n                    var options = {\n                        url: url,\n                        headers: {\n                            'Authorization': 'Bearer ' + token\n                        },\n                        json: true\n                    };\n                    request.get(options, function(error, response, body) {\n                    if(error ||  response.statusCode  ===  404){\n                        setError(true);\n                        setLoading(false);\n                    }else{\n                        if(type === 'playlists'){\n                            setPlayList(body.playlists.items);\n                            setTotal(Math.ceil(body.playlists.total / 24))\n                        }\n                        setLoading(false);\n                    }\n                    });\n            }\n        });\n    }\n\n    useEffect(()=> {\n        async function fetchData () {\n            try{\n\n                await getData(`https://api.spotify.com/v1/browse/categories/${props.match.params.categories}/playlists?limit=24&&offset=${page*24-24}`,'playlists');\n                if (page === 1) {\n\t\t\t\t\tsetFirst(true);\n\t\t\t\t\tsetLast(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetFirst(false);\n                }\n                if (page === total) {\n\t\t\t\t\tsetLast(true);\n\t\t\t\t\tsetFirst(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetLast(false);\n                }\n            } catch (e) {\n                console.log(e);\n                setError(true);\n            }\n        }\n\n        fetchData();\n    }, [page]);\n\n    const changePageHandle = (event, page) => {\n        setPage(page);\n        if (page === 1) {\n            setFirst(true);\n        } else {\n            setFirst(false);\n        };\n        if (page === total) {\n            setLast(true);\n        } else {\n            setLast(false);\n        }\n    }\n\n    const buildCard = (playlist)  => {\n        return(\n            <Grid item xs={12} sm={4} md={3} lg={2} xl={2}  key={playlist.id}>\n                <Card className={classes.card} variant='outlined'>\n                <CardActionArea>\n                    <Link to={`/playlists/songsList/${playlist.id}`}>\n                    <div className='category-image'>\n                        <img alt=\"category\" src={playlist.icons ? playlist.icons[0].url : playlist.images[0].url} width='100%'/>\n\n                         <p className='category-name'>{playlist.name}</p>\n\n                    </div>\n                    </Link>\n                </CardActionArea>\n                </Card>\n            </Grid>\n        );\n    };\n    let card = playList && playList.map((playlist) => {\n        return buildCard(playlist);\n    });\n\n\n    if(loading){\n        return (\n\t\t\t<div>\n\t\t\t\t<h2>Loading....</h2>\n\t\t\t</div>\n\t\t);\n    }else if(error){\n        return (\n\t\t\t<div>\n\t\t\t\t<h2>Error....</h2>\n\t\t\t</div>\n\t\t);\n    }else {\n        return(\n            <div>\n                <AppBar position=\"static\" className={classes.appbar}>\n                    <Tab  label=\"All PlayLists\" />\n                    </AppBar>\n                <Grid container className={classes.grid} spacing={2}>\n                        {card}\n                </Grid>\n                {total === 1?<div className={classes.pages}>No More</div>:\n                <div className={classes.pages}>\n                        <Pagination count={total} page={page} defaultPage={page} onChange={changePageHandle} variant=\"outlined\" shape=\"rounded\" hidePrevButton={isFirst} hideNextButton={isLast} />\n                </div>\n                }\n            </div>\n\n        );\n    }\n}\nexport default withRouter(PlayList);","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Register/Register.js",["100","101","102","103","104","105","106"],"import React, {useState, useEffect} from 'react';\n// import user from '../../data/users';\nimport \"./Register.css\";\nimport axios from 'axios'\n\n\nfunction RegistrationForm(props) {\n    const [state , setState] = useState({\n        firstname: \"\",\n        lastname:\"\",\n        gender:\"\",\n        email : \"\",\n        password : \"\"\n    })\n    const [userEmail , setUserEmail] = useState(\"\");\n    const [registerError, setRegisterError] = useState(null);\n\n\n    console.log(\"email: \" + userEmail);\n    // console.log(\"error: \" + JSON.stringify(registerError));\n    console.log(\"error: \" + registerError);\n\n    \n\n\n    const handleChange = (e) => {\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        try {\n            if (state.firstname == \"\") {\n                alert(\"firstname cannot be null\");\n            }\n            else if (state.lastname == \"\") {\n                alert(\"lastname cannot be null\");\n            }\n            else if (state.gender == \"\") {\n                alert(\"gender cannot be null\");\n            }\n            else if (state.email == \"\") {\n                alert(\"email cannot be null\");\n            }\n            else if (state.password == \"\") {\n                alert(\"password cannot be null\");\n            }\n            else if (state.confirmPassword == \"\") {\n                alert(\"confirmPassword cannot be null\");\n            }\n            if (state.password === state.confirmPassword) {\n                const user = {\n                    firstName: state.firstname,\n                    lastName: state.lastname,\n                    gender: state.gender,\n                    email: state.email,\n                    password: state.password\n                };\n                try {\n                    axios.post('http://localhost:5000/users/add', user)\n                    .then(response => setUserEmail(response.data.email ))\n                    .catch(error => {\n                        setRegisterError(error.message);\n                    })\n                } catch (error){\n                    console.log(error);\n                }\n            }\n            else{\n                alert(\"two passwords are different\");\n\n            }\n\n            \n                \n            \n\n            \n        }\n        catch(e) {\n            console.log(\"error: \" + e);\n        }\n    }\n\n    \n\n    if (registerError) {\n\n        return(\n            <p style={{fontSize:'30px'}}>\n                Error! <br/>\n                Email might be already used <br/>\n                Each fiels cannot be null<br/>\n                <a\n                    href= \"http://localhost:3000/register\"\n                >\n                    Back to Register\n                </a>\n            </p>\n        );\n    }\n\n    \n\n    return(\n        <div>\n        {userEmail ? (\n            <div>\n                <p>Register successful</p>\n                <p style={{fontSize:'30px'}}>\n\n                    <a\n                        href=\"http://localhost:3000/login\"\n                    >\n                        Login now\n                    </a>\n                </p>\n            </div>\n        ) : (\n            <div id=\"register-box\">\n                <form>\n\n                    <h1 class=\"registerHere\">Register Here</h1>\n\n                    <div className=\"form-group text-left\">\n                        <label>First Name</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"firstname\" \n                            placeholder=\"First Name\"\n                            value={state.firstname}\n                            onChange={handleChange} \n                        />\n                    </div>\n\n                    <div className=\"form-group text-left\">\n                        <label>Last Name</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"lastname\" \n                            placeholder=\"Last Name\"\n                            value={state.lastname}\n                            onChange={handleChange} \n                        />\n                    </div>\n\n                    <div className=\"form-group text-left\">\n                        <label>Gender</label>\n                        <input type=\"text\" \n                            className=\"form-control\" \n                            id=\"gender\" \n                            placeholder=\"Gender\"\n                            value={state.gender}\n                            onChange={handleChange} \n                        />\n                    </div>\n\n                    <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                        <input type=\"email\" \n                            className=\"form-control\" \n                            id=\"email\" \n                            aria-describedby=\"emailHelp\" \n                            placeholder=\"Email\" \n                            value={state.email}\n                            onChange={handleChange}\n                        />\n                    \n                    </div>\n                    <div className=\"form-group text-left\">\n                        <label htmlFor=\"exampleInputPassword1\">Password</label>\n                        <input type=\"password\" \n                            className=\"form-control\" \n                            id=\"password\" \n                            placeholder=\"Password\"\n                            value={state.password}\n                            onChange={handleChange} \n                        />\n                    </div>\n                    <div className=\"form-group text-left\">\n                        <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n                        <input type=\"password\" \n                            className=\"form-control\" \n                            id=\"confirmPassword\" \n                            placeholder=\"Confirm Password\"\n                            value={state.confirmPassword}\n                            onChange={handleChange} \n                        />\n                    </div>\n                    <button \n                        type=\"submit\" \n                        className=\"register\"\n                        onClick={handleSubmitClick}\n                    >\n                        Register\n                    </button>\n                </form>\n\n                {/* <p> firstname : {state.firstname}</p>\n                <p> password : {state.password}</p> */}\n\n            </div>\n        )}\n        </div>\n        \n        \n    )\n}\n\nexport default RegistrationForm;\n","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Login/Login.js",["107","108","109"],"import React, { useState } from \"react\";\nimport { useAppContext } from \"../../libs/contextLib\";\nimport axios from 'axios'\nimport { Redirect } from \"react-router-dom\";\n\n\nimport \"./Login.css\";\n\nexport default function Login() {\n  const { userHasAuthenticated } = useAppContext();\n\n  const [state , setState] = useState({\n    \n    email : \"\",\n    password : \"\"\n  })\n  const [userEmail , setUserEmail] = useState(\"\");\n  const [loginError, setLoginError] = useState(null);\n\n\n  // console.log(\"email: \" + userEmail);\n  // console.log(\"error: \" + loginError);\n\n\n\n\n  const handleChange = (e) => {\n    const {id , value} = e.target   \n    setState(prevState => ({\n        ...prevState,\n        [id] : value\n    }))\n  }\n\n  const handleSubmitClick = (e) => {\n    e.preventDefault();\n    try {\n        \n        if (state.email == \"\") {\n            alert(\"email cannot be null\");\n        }\n        else if (state.password == \"\") {\n            alert(\"password cannot be null\");\n        }\n        else{\n          const user = {\n            email: state.email,\n            password: state.password\n          };\n          try {              \n            axios.post('http://localhost:5000/users/login', user)\n            .then(response => setUserEmail(response.data.email))\n            .catch(error => {\n                setLoginError(error.message);\n            })\n          } catch (error){\n            console.log(error);\n          }\n        }\n      \n          \n    }\n    catch(e) {\n        console.log(\"error: \" + e);\n    }\n  }\n\n  if (userEmail) {\n    userHasAuthenticated(true);\n    window.sessionStorage.setItem(\"userEmail\", userEmail);\n    // localStorage.setItem('test', 1);\n\n  }\n  // const s = window.sessionStorage.getItem(\"userEmail\")\n  // console.log(\"session : \" + s);\n\n  if (loginError) {\n\n    return(\n      <p style={{fontSize:'30px'}}>\n          Error! <br/>\n          Email or password is wrong <br/>\n          <a\n              href= \"http://localhost:3000/login\"\n          >\n              Back to Login\n          </a>\n      </p>\n  );\n\n  }\n  return (\n    <div>\n      {userEmail ? (\n        <div>\n            {/* <Redirect to=\"/\" /> */}\n            <p style={{fontSize:'30px'}}>\n              Have fun! {window.sessionStorage.getItem(\"userEmail\")}<br/>\n              \n              <a\n                  href= \"http://localhost:3000/\"\n              >\n                  Back to categories\n              </a>\n            </p>\n        </div>\n      ) : (\n            <div class=\"loginbox\">\n            <form>\n              <h1 class=\"loginHere\">Login Here</h1>\n\n\n              <div className=\"form-group text-left\">\n              <label htmlFor=\"exampleInputEmail1\">Email</label>\n              <input type=\"email\" \n                    className=\"form-control\" \n                    id=\"email\" \n                    aria-describedby=\"emailHelp\" \n                    placeholder=\"Email\" \n                    value={state.email}\n                    onChange={handleChange}\n              />\n              \n              </div>\n              <div className=\"form-group text-left\">\n                  <label htmlFor=\"exampleInputPassword1\">Password</label>\n                  <input type=\"password\" \n                      className=\"form-control\" \n                      id=\"password\" \n                      placeholder=\"Password\"\n                      value={state.password}\n                      onChange={handleChange} \n                  />\n              </div>\n              \n              <button\n                  class=\"login\" \n                  type=\"submit\" \n                  className=\"login\"\n                  onClick={handleSubmitClick}\n              >\n                  Login\n              </button>\n            </form>\n\n            <a href=\"http://localhost:3000/register\">Haven't created an account yet?</a>\n\n\n          {/* <p> email : {state.email}</p>\n          <p> password : {state.password}</p> */}\n\n        </div>\n      )}\n    </div>\n  );\n}","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SongList.js",["110","111","112"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Home.js",["113"],"import React from 'react';\nimport '../App.css';\n\nconst Home = () => {\n    const url = 'https://accounts.spotify.com/authorize?show_dialog=true&client_id=230be2f46909426b8b80cac36446b52a&scope=playlist-read-private%20playlist-read-collaborative%20playlist-modify-public%20user-read-recently-played%20playlist-modify-private%20ugc-image-upload%20user-follow-modify%20user-follow-read%20user-library-read%20user-library-modify%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state&response_type=token&redirect_uri=http://localhost:3000/callback';\n    const localUrl = 'http://localhost:3000/login';\n    \n    return (\n\t\t<div>\n\n            <p class = \"login\" style={{fontSize:'30px'}}>\n\n                <a\n                    href= {url}\n                >\n                    Open Spotify Online\n                </a>\n\n                \n\t\t\t</p>\n            \n            {/* <p class = \"login\" style={{fontSize:'30px'}}> \n                <a\n                    href= {localUrl}\n                >\n                    Login locally\n                </a>\n            </p> */}\n\n            \n\t\t</div>\n      \n    )\n};\n\nexport default Home;\n","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/GenresList.js",["114"],"import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Card, CardActionArea,  Grid,  makeStyles, AppBar,Tab } from '@material-ui/core';\nimport '../App.css';\nconst useStyles = makeStyles({\n    appbar: {\n        background:'#006600',\n        marginLeft:'30px',\n        marginRight:'30px',\n        width: 'auto',\n        marginBottom:'30px',\n    },\n\tcard: {\n\t\tmaxWidth: 200,\n\t\theight: 'auto',\n\t\tmarginLeft: '30px',\n\t\tmarginRight: '30px',\n\t\tborderRadius: 5,\n\t\tborder: '1px solid #1e8678',\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\n\t},\n\ttitleHead: {\n\t\tborderBottom: '1px solid #1e8678',\n\t\tfontWeight: 'bold'\n\t},\n\tgrid: {\n\t\tflexGrow: 1,\n\t\tflexDirection: 'row'\n\t},\n\tmedia: {\n\t\theight: '100%',\n\t\twidth: '100%'\n\t},\n\tbutton: {\n\t\tcolor: '#1e8678',\n\t\tfontWeight: 'bold',\n\t\tfontSize: 12\n\t},\n\tbtnGroup: {\n\t\tmarginTop: '50px'\n\t},\n\tpages: {\n\t\ttextAlign: 'center',\n\t\tmargin: '100px',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'center',\n\t}\n});\n\nconst GenresList = (props) =>{\n    const classes = useStyles();\n    const [ genresList, setGenresList ] = useState(undefined);\n    const [page, setPage] = useState(1);\n    const [isLast, setLast] = useState(false);\n    const [isFirst, setFirst] = useState(true);\n    const [total, setTotal] = useState(undefined);\n    const [loading, setLoading] = useState(true);\n    const [error, setError]  =  useState(false);\n    let card = null;\n\n    async function getData(url){\n        var request = require('request');\n        var client_id = 'c9b1db19becd48f78d6913a3431ae24a'; // Your client id\n        var client_secret = '98145905039345c4a5df9542ca98cc55'; // Your secret\n        var authOptions = {\n            url: 'https://accounts.spotify.com/api/token',\n            headers: {\n              'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n            },\n            form: {\n              grant_type: 'client_credentials'\n            },\n            json: true\n        };\n        request.post(authOptions,function(error, response,body){\n            if (!error && response.statusCode === 200) {\n                    var token = body.access_token;\n                    var options = {\n                        url: url,\n                        headers: {\n                            'Authorization': 'Bearer ' + token\n                        },\n                        json: true\n                    };\n                    request.get(options, function(error, response, body) {\n                    if(error){\n                        setError(true);\n                    }else{\n                    setTotal(Math.ceil(body.categories.total / 24));\n                    setGenresList(body.categories.items);\n                    setLoading(false);\n                    }\n                    });\n            }\n        });\n    }\n\n\n    useEffect(()=> {\n        async function fetchData () {\n            try{\n\n                await getData(`https://api.spotify.com/v1/browse/categories?limit=24&&offset=${page*24-24}`);\n                if (page === 1) {\n\t\t\t\t\tsetFirst(true);\n\t\t\t\t\tsetLast(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetFirst(false);\n                }\n                if (page === total) {\n\t\t\t\t\tsetLast(true);\n\t\t\t\t\tsetFirst(false);\n\t\t\t\t} else {\n\t\t\t\t\tsetLast(false);\n                }\n            } catch (e) {\n                console.log(e);\n                setError(true);\n            }\n        }\n\n        fetchData();\n    }, [page]);\n\n\n    const changePageHandle = (event, page) => {\n        setPage(page);\n        if (page === 1) {\n            setFirst(true);\n        } else {\n            setFirst(false);\n        };\n        if (page === total) {\n            setLast(true);\n        } else {\n            setLast(false);\n        }\n    }\n\n\n        const buildCard = (genre)  => {\n            return(\n                <Grid item xs={12} sm={4} md={3} lg={2} xl={2}  key={genre.id}>\n                    <Card className={classes.card} variant='outlined'>\n                    <CardActionArea>\n                        <Link to={`/${genre.id}/playList`}>\n                        <div className='category-image'>\n                            <img alt=\"category\" src={genre.icons ? genre.icons[0].url : genre.images[0].url} width='100%'/>\n\n                             <p className='category-name'>{genre.name}</p>\n\n                        </div>\n                        </Link>\n                    </CardActionArea>\n                    </Card>\n                </Grid>\n            );\n        };\n        card = genresList && genresList.map((genre) => {\n            return buildCard(genre);\n        });\n        if(loading){\n            return (\n                <div>\n                    <h2>Loading....</h2>\n                </div>\n            );\n        }else if(error){\n            return (\n                <div>\n                    <h2>Error....</h2>\n                </div>\n            );\n        }else {\n            return (\n                <div>\n                    <AppBar position=\"static\" className={classes.appbar}>\n                    <Tab  label=\"All Categories\" />\n                    </AppBar>\n                    <Grid container className={classes.grid} spacing={2}>\n                        {card}\n                    </Grid>\n                    {total === 1?<div className={classes.pages}>No More</div>:\n                    <div className={classes.pages}>\n                        <Pagination count={total} page={page} defaultPage={page} onChange={changePageHandle} variant=\"outlined\" shape=\"rounded\" hidePrevButton={isFirst} hideNextButton={isLast} />\n                    </div>}\n\n                </div>\n            );\n        }\n\n};\n\nexport default withRouter(GenresList);","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/AlbumList.js",["115","116"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/SongPlay.js",["117","118","119","120","121","122"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/libs/contextLib.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/reducers/rootReducer.js",[],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Infotmation.js",["123","124","125","126","127","128","129"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport download from '../img/download.jpeg'\n\nimport {Chip, Avatar, Link} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: '#ccffcc',\n    display: 'flex',\n    height: 400,\n    margin: '30px',\n  },\n  details: {\n    marginTop:'20px',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '0.7 0 auto',\n    padding:0\n  },\n  cover: {\n    margin:'20px',\n    width: 400,\n\n  },\n  name: {\n    textAlign: 'left',\n\n    letterSpacing: '1px',\n    marginLeft: '200px',\n    fontWeight: 500,\n    fontSize: '40px'\n  },\n  tag:{\n    display: 'flex',\n    textAlign: 'left',\n    fontWeight: 500,\n    lineHeight: 4,\n    marginLeft: '200px'\n  },\n  chip:{\n    marginLeft:'7px',\n    background: '#666600'\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n  detail: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  related:{\n    textAlign: 'left',\n      display:'flex',\n      marginLeft:'200px',\n      fontWeight: 500,\n      lineHeight:2.75,\n  },\n  related_icon:{\n    textAlign: 'left',\n      display:'flex',\n  },\n  icon:{\n      marginLeft:'5px'\n  },\n  span_label:{\n      marginRight:'20px'\n  }\n}));\n\nexport default function Information(props) {\n  const classes = useStyles();\n  const {name, image, genre,id,popularity,follower,description, owner, related_album, date, artists} = props;\n  const [related, setRelated] = useState(undefined);\n\n\n  async function getData(url, type){\n    var request = require('request');\n    var client_id = 'c9b1db19becd48f78d6913a3431ae24a'; // Your client id\n    var client_secret = '98145905039345c4a5df9542ca98cc55'; // Your secret\n    var authOptions = {\n        url: 'https://accounts.spotify.com/api/token',\n        headers: {\n          'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n        },\n        form: {\n          grant_type: 'client_credentials'\n        },\n        json: true\n    };\n    request.post(authOptions,function(error, response,body){\n        if (!error && response.statusCode === 200) {\n                var token = body.access_token;\n                var options = {\n                    url: url,\n                    headers: {\n                        'Authorization': 'Bearer ' + token\n                    },\n                    json: true\n                };\n                request.get(options, function(error, response, body) {\n                    setRelated(body.artists);\n                });\n        }\n    });\n}\n\nconst handleJump=(id)=>{\n    if(id){\n        window.location.href=`/albumList/${id}`;\n    }\n}\n\nuseEffect(() => {\n    async function fetchData(){\n        try{\n            if(id){\n            await getData(`https://api.spotify.com/v1/artists/${id}/related-artists`,'related');\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    fetchData();\n},[props.id])\n\n  let genres = genre && genre.map((genre, index)=>{\n    return (\n        <Chip color=\"primary\" size=\"small\" label={genre} className={classes.chip} key={index}/>\n    )\n  });\n    let imageIcon = related && related.map((e, index)=>{\n        if(index<=5){\n            return(\n                <div className={classes.icon} key={index}>\n                    <Avatar alt=\"Remy Sharp\" src={e.images[1].url} className={classes.large}  onClick={()=>handleJump(e.id)}/>\n                </div>\n                )\n        }\n    });\n    let imageAlbum = related_album && related_album.map((e, index)=>{\n        if(index<=5){\n            return(\n                <div className={classes.icon} key={index}>\n                    <Avatar alt=\"Remy Sharp\" src={e.url} className={classes.large} />\n                </div>\n                )\n        }\n    });\n    let imageArtist = artists && artists.map((e, index)=>{\n        if(index<=5){\n            return(\n                <div className={classes.icon}key={index}>\n                    <Avatar alt=\"Remy Sharp\"  className={classes.large}  onClick={()=>handleJump(e.id)}>{e.name}</Avatar>\n                </div>\n                )\n        }\n    });\n\n  return (\n    <Card className={classes.root}>\n        <CardMedia\n        className={classes.cover}\n        image={image?image:download}\n        title=\"photo\"\n        />\n        <div className={classes.details}>\n            <CardContent className={classes.content}>\n                <div component=\"h5\" variant=\"h5\" className={classes.name}>\n                    {name}\n                </div>\n                <div variant=\"subtitle1\" color=\"textSecondary\" className={classes.tag} >\n                    <span className={classes.span_label}>{genre?'Styles:':'Description:'}</span>\n                    {genre?<div>\n                        {genres}\n                        </div>:<div>\n                        {description}\n\n                    </div>\n                    }\n\n                </div>\n                {popularity?<div variant=\"subtitle1\" color=\"textSecondary\" className={classes.tag} >\n                    <span className={classes.span_label}>Popularity:</span>\n                    <div >\n                    {popularity}\n                    </div>\n                </div>:owner=='author'?<div variant=\"subtitle1\" color=\"textSecondary\" className={classes.tag} >\n                    <span className={classes.span_label}>Release Date:</span>\n                    <div >\n                    {date}\n                    </div>\n                </div>:<div variant=\"subtitle1\" color=\"textSecondary\" className={classes.tag} >\n                    <span className={classes.span_label}>Owner:</span>\n                    <div >\n                    {owner}\n                    </div>\n                </div>\n                }\n                <div variant=\"subtitle1\" color=\"textSecondary\" className={classes.tag} >\n                    <span className={classes.span_label}>Followers:</span>\n                    <div >\n                    {follower}\n                    </div>\n                </div>\n\n            </CardContent>\n            {id?<div className={classes.related}>\n                <span className={classes.span_label}>Related Artists:</span>\n                <div className={classes.related_icon}>\n                   {imageIcon}\n                </div>\n            </div>: !artists?<div className={classes.related}>\n                <span className={classes.span_label}>Related Albums:</span>\n                <div className={classes.related_icon}>\n                   {imageAlbum}\n                </div>\n            </div>:<div className={classes.related}>\n                <span className={classes.span_label}>Related Artists:</span>\n                <div className={classes.related_icon}>\n                   {imageArtist}\n                </div>\n            </div>}\n        </div>\n    </Card>\n  );\n}\n","/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/components/Song.js",["130","131","132","133"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/reducers/songPlayer.js",["134"],"/Users/lirupu/cs-554-web2/CS-554A-Final-Project/client/src/actions/playAction.js",[],{"ruleId":"135","severity":1,"message":"136","line":6,"column":13,"nodeType":"137","messageId":"138","endLine":6,"endColumn":26},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"135","severity":1,"message":"143","line":3,"column":42,"nodeType":"137","messageId":"138","endLine":3,"endColumn":46},{"ruleId":"135","severity":1,"message":"144","line":22,"column":21,"nodeType":"137","messageId":"138","endLine":22,"endColumn":33},{"ruleId":"145","severity":1,"message":"146","line":31,"column":6,"nodeType":"147","endLine":31,"endColumn":9,"suggestions":"148"},{"ruleId":"135","severity":1,"message":"149","line":8,"column":9,"nodeType":"137","messageId":"138","endLine":8,"endColumn":15},{"ruleId":"145","severity":1,"message":"150","line":126,"column":8,"nodeType":"147","endLine":126,"endColumn":14,"suggestions":"151"},{"ruleId":"135","severity":1,"message":"152","line":1,"column":26,"nodeType":"137","messageId":"138","endLine":1,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":37,"column":33,"nodeType":"155","messageId":"156","endLine":37,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":40,"column":37,"nodeType":"155","messageId":"156","endLine":40,"endColumn":39},{"ruleId":"153","severity":1,"message":"154","line":43,"column":35,"nodeType":"155","messageId":"156","endLine":43,"endColumn":37},{"ruleId":"153","severity":1,"message":"154","line":46,"column":34,"nodeType":"155","messageId":"156","endLine":46,"endColumn":36},{"ruleId":"153","severity":1,"message":"154","line":49,"column":37,"nodeType":"155","messageId":"156","endLine":49,"endColumn":39},{"ruleId":"153","severity":1,"message":"154","line":52,"column":44,"nodeType":"155","messageId":"156","endLine":52,"endColumn":46},{"ruleId":"135","severity":1,"message":"157","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":39,"column":25,"nodeType":"155","messageId":"156","endLine":39,"endColumn":27},{"ruleId":"153","severity":1,"message":"154","line":42,"column":33,"nodeType":"155","messageId":"156","endLine":42,"endColumn":35},{"ruleId":"135","severity":1,"message":"158","line":7,"column":10,"nodeType":"137","messageId":"138","endLine":7,"endColumn":21},{"ruleId":"145","severity":1,"message":"159","line":201,"column":7,"nodeType":"147","endLine":201,"endColumn":54,"suggestions":"160"},{"ruleId":"145","severity":1,"message":"159","line":227,"column":8,"nodeType":"147","endLine":227,"endColumn":67,"suggestions":"161"},{"ruleId":"135","severity":1,"message":"162","line":6,"column":11,"nodeType":"137","messageId":"138","endLine":6,"endColumn":19},{"ruleId":"145","severity":1,"message":"163","line":125,"column":8,"nodeType":"147","endLine":125,"endColumn":14,"suggestions":"164"},{"ruleId":"135","severity":1,"message":"158","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":21},{"ruleId":"145","severity":1,"message":"165","line":207,"column":8,"nodeType":"147","endLine":207,"endColumn":36,"suggestions":"166"},{"ruleId":"135","severity":1,"message":"167","line":12,"column":10,"nodeType":"137","messageId":"138","endLine":12,"endColumn":28},{"ruleId":"168","severity":1,"message":"169","line":92,"column":37,"nodeType":"170","messageId":"171","endLine":92,"endColumn":39},{"ruleId":"135","severity":1,"message":"172","line":119,"column":11,"nodeType":"137","messageId":"138","endLine":119,"endColumn":21},{"ruleId":"135","severity":1,"message":"173","line":247,"column":17,"nodeType":"137","messageId":"138","endLine":247,"endColumn":21},{"ruleId":"145","severity":1,"message":"174","line":258,"column":8,"nodeType":"147","endLine":258,"endColumn":36,"suggestions":"175"},{"ruleId":"145","severity":1,"message":"176","line":270,"column":8,"nodeType":"147","endLine":270,"endColumn":36,"suggestions":"177"},{"ruleId":"135","severity":1,"message":"178","line":2,"column":22,"nodeType":"137","messageId":"138","endLine":2,"endColumn":30},{"ruleId":"135","severity":1,"message":"143","line":8,"column":23,"nodeType":"137","messageId":"138","endLine":8,"endColumn":27},{"ruleId":"145","severity":1,"message":"179","line":131,"column":3,"nodeType":"147","endLine":131,"endColumn":13,"suggestions":"180"},{"ruleId":"168","severity":1,"message":"181","line":138,"column":54,"nodeType":"170","messageId":"182","endLine":138,"endColumn":56},{"ruleId":"168","severity":1,"message":"181","line":147,"column":67,"nodeType":"170","messageId":"182","endLine":147,"endColumn":69},{"ruleId":"168","severity":1,"message":"181","line":156,"column":56,"nodeType":"170","messageId":"182","endLine":156,"endColumn":58},{"ruleId":"153","severity":1,"message":"154","line":194,"column":29,"nodeType":"155","messageId":"156","endLine":194,"endColumn":31},{"ruleId":"135","severity":1,"message":"183","line":99,"column":13,"nodeType":"137","messageId":"138","endLine":99,"endColumn":18},{"ruleId":"145","severity":1,"message":"184","line":123,"column":7,"nodeType":"147","endLine":123,"endColumn":35,"suggestions":"185"},{"ruleId":"135","severity":1,"message":"186","line":146,"column":11,"nodeType":"137","messageId":"138","endLine":146,"endColumn":20},{"ruleId":"135","severity":1,"message":"187","line":148,"column":15,"nodeType":"137","messageId":"138","endLine":148,"endColumn":22},{"ruleId":"135","severity":1,"message":"188","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":14},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["189"],"no-negated-in-lhs",["190"],"'Link' is defined but never used.","'setUserEmail' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onLoadAgain'. Either include it or remove the dependency array.","ArrayExpression",["191"],"'curUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.match.params.categories' and 'total'. Either include them or remove the dependency array.",["192"],"'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Redirect' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["193"],["194"],"'localUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'total'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has missing dependencies: 'getData' and 'total'. Either include them or remove the dependency array.",["196"],"'deprecationHandler' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'resumeSong' is assigned a value but never used.","'time' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["197"],"React Hook useEffect has missing dependencies: 'audioControl', 'pauseSong', and 'songsPlay.playing'. Either include them or remove the dependency array.",["198"],"'useTheme' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["199"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'pause' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'song.track.id'. Either include it or remove the dependency array.",["200"],"'handleAdd' is assigned a value but never used.","'addSong' is assigned a value but never used.","'json' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},"Update the dependencies array to be: [e, onLoadAgain]",{"range":"221","text":"222"},"Update the dependencies array to be: [page, props.match.params.categories, total]",{"range":"223","text":"224"},"Update the dependencies array to be: [getData, props.match.params.id, props.match.params.type]",{"range":"225","text":"226"},"Update the dependencies array to be: [page, props.match.params.id, total, props.match.params.type, getData]",{"range":"227","text":"228"},"Update the dependencies array to be: [page, total]",{"range":"229","text":"230"},"Update the dependencies array to be: [getData, page, props.match.params.id, total]",{"range":"231","text":"232"},"Update the dependencies array to be: [dispatch, song, songsPlay.globalPlay]",{"range":"233","text":"234"},"Update the dependencies array to be: [songsPlay.globalPlay, song, songsPlay.playing, audioControl, pauseSong]",{"range":"235","text":"236"},"Update the dependencies array to be: [id, props.id]",{"range":"237","text":"238"},"Update the dependencies array to be: [song.track.id, songR, songsPlay.globalPlay]",{"range":"239","text":"240"},[957,960],"[e, onLoadAgain]",[3856,3862],"[page, props.match.params.categories, total]",[5883,5930],"[getData, props.match.params.id, props.match.params.type]",[6572,6631],"[page, props.match.params.id, total, props.match.params.type, getData]",[3543,3549],"[page, total]",[6207,6235],"[getData, page, props.match.params.id, total]",[6870,6898],"[dispatch, song, songsPlay.globalPlay]",[7209,7237],"[songsPlay.globalPlay, song, songsPlay.playing, audioControl, pauseSong]",[3147,3157],"[id, props.id]",[3081,3109],"[song.track.id, songR, songsPlay.globalPlay]"]