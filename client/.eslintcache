[{"/Users/yichaojia/Documents/CS554/Final_Project/client/src/index.js":"1","/Users/yichaojia/Documents/CS554/Final_Project/client/src/reportWebVitals.js":"2","/Users/yichaojia/Documents/CS554/Final_Project/client/src/App.js":"3","/Users/yichaojia/Documents/CS554/Final_Project/client/src/components/Home.js":"4","/Users/yichaojia/Documents/CS554/Final_Project/client/src/components/UserProfile.js":"5","/Users/yichaojia/Documents/CS554/Final_Project/client/src/data/users.js":"6","/Users/yichaojia/Documents/CS554/Final_Project/client/src/data/songs.js":"7","/Users/yichaojia/Documents/CS554/Final_Project/client/src/config/mongoCollections.js":"8","/Users/yichaojia/Documents/CS554/Final_Project/client/src/data/comments.js":"9","/Users/yichaojia/Documents/CS554/Final_Project/client/src/config/mongoConnection.js":"10","/Users/yichaojia/Documents/CS554/Final_Project/client/src/components/Register/Register.js":"11","/Users/yichaojia/Documents/CS554/Final_Project/client/src/components/Login/Login.js":"12"},{"size":500,"mtime":1606889819841,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1606630959444,"results":"15","hashOfConfig":"14"},{"size":974,"mtime":1607480879961,"results":"16","hashOfConfig":"14"},{"size":1125,"mtime":1607462833387,"results":"17","hashOfConfig":"14"},{"size":1031,"mtime":1607154860266,"results":"18","hashOfConfig":"14"},{"size":4640,"mtime":1607402641985,"results":"19","hashOfConfig":"14"},{"size":2752,"mtime":1607460563084,"results":"20","hashOfConfig":"14"},{"size":572,"mtime":1606630959444,"results":"21","hashOfConfig":"14"},{"size":1145,"mtime":1607460557873,"results":"22","hashOfConfig":"23"},{"size":489,"mtime":1606630959444,"results":"24","hashOfConfig":"14"},{"size":4196,"mtime":1607492872439,"results":"25","hashOfConfig":"14"},{"size":1736,"mtime":1607492506182,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"124lhu8",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bmnqq5",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yichaojia/Documents/CS554/Final_Project/client/src/index.js",[],["53","54"],"/Users/yichaojia/Documents/CS554/Final_Project/client/src/reportWebVitals.js",[],"/Users/yichaojia/Documents/CS554/Final_Project/client/src/App.js",[],"/Users/yichaojia/Documents/CS554/Final_Project/client/src/components/Home.js",[],"/Users/yichaojia/Documents/CS554/Final_Project/client/src/components/UserProfile.js",[],"/Users/yichaojia/Documents/CS554/Final_Project/client/src/data/users.js",["55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"const mongoCollections = require('../config/mongoCollections');\nconst users = mongoCollections.users;\nconst songs = mongoCollections.songs;\nconst {ObjectId} = require('mongodb');\nconst songsUtil = require('./songs');\n\nfunction check(obj) {\n  let flag = true;\n  let firstName = obj.firstName;\n  let lastName = obj.lastName;\n  let gender = obj.gender;\n  let email = obj.email;\n\n  if (firstName) {\n    if (typeof firstName !== 'string') {\n      flag = false;\n    }\n  }\n  if (lastName) {\n    if (typeof lastName !== 'string') {\n      flag = false;\n    }\n  }\n  if (gender) {\n    if (typeof gender !== 'string') {\n      flag = false;\n    }\n  }\n  if (email) {\n    if (typeof email !== 'string') {\n      flag = false;\n    }\n  }\n  return flag;\n}\n\n// addUser('jianshuo', 'yang', 'male', '123@qq.com');\nasync function addUser(firstName, lastName, gender, email, password) {\n  if (!firstName || typeof firstName !== 'string') throw `invalid first name`;\n  if (!lastName || typeof lastName !== 'string') throw `invalid last name`;\n  if (!gender || typeof gender !== 'string') throw `invalid gender input`;\n  if (!email || typeof email !== 'string') throw `invalid email input`;\n  if (!password || typeof password !== 'string') throw `invalid password input`;\n\n  const userCollection = await users();\n  let newUser = {\n    firstName: firstName,\n    lastName: lastName,\n    gender: gender,\n    email: email,\n    password: password,\n    likedSongs: []\n  }\n\n  const insertInfo = await userCollection.insertOne(newUser);\n  if (insertInfo.insertedCount === 0) throw `Can't add user`;\n  return await getUserById(insertInfo.insertedId.toString());\n}\n\nasync function getUserById(id) {\n  if (!id || typeof id !== 'string') throw `invalid id input`;\n  const objId = ObjectId.createFromHexString(id);\n  const userCollection = await users();\n  const res = await userCollection.findOne({_id: objId});\n  if (!res) throw `No user found`;\n  return res;\n}\n\nasync function getUsers() {\n  const userCollection = await users();\n  const userList = await userCollection.find({}).toArray();\n  if (!userList) throw `No users exist in database`;\n  return userList;\n}\n\n// update works\nasync function updateUserDelta(id, deltasObj) {\n  if (!id || typeof id !== 'string') throw `invalid id input`;\n  if (!deltasObj || typeof deltasObj !== 'object') throw `invalid object input`;\n  if (check(deltasObj) === false) throw `invalid object input`;\n\n  let userToBeUpdated = await getUserById(id);\n\n  Object.assign(userToBeUpdated, deltasObj);\n  const userCollection = await users();\n  const objId = ObjectId.createFromHexString(id);\n  const updateInfo = await userCollection.updateOne({_id: objId}, {$set: userToBeUpdated});\n  if (updateInfo.modifiedCount === 0) throw `Update failed`;\n  return await getUserById(id);\n}\n\nasync function deleteUser(id) {\n  if (!id || typeof id !== 'string') throw `invalid id input`;\n  const objId = ObjectId.createFromHexString(id);\n  const userCollection = await users();\n  const deletionInfo = await userCollection.removeOne({_id: objId});\n  if (deletionInfo.deletedCount === 0) {\n    throw `Could not delete user with id of ${id}`;\n  }\n}\n\n// addSongToUser('5fc10647acf24ea76d053710', '5fc2a1e28178a4dc6b454038');\nasync function addSongToUser(id, songId) {\n  if (!id || typeof id !== 'string') throw 'invalid id';\n  if (!songId || typeof songId !== 'string') throw 'invalid song id';\n\n  const objId = ObjectId.createFromHexString(id);\n  const songObj = await songsUtil.getSongById(songId);\n  let res = {\n    id: songObj._id,\n    name: songObj.name,\n    singerName: songObj.singerName,\n    albumName: songObj.albumName,\n    comments: songObj.comments\n  }\n\n  const userCollection = await users();\n  await userCollection.updateOne({_id: objId}, {$addToSet: {likedSongs: res}});\n}\n\nasync function removeSongFromUser(id, songId) {\n  if (!id || typeof id !== 'string') throw 'invalid id';\n  if (!songId || typeof songId !== 'string') throw 'invalid song id';\n\n  const objId = ObjectId.createFromHexString(id);\n  const objId2 = ObjectId.createFromHexString(songId);\n  const userCollections = await users();\n  const updateInfo = await userCollections.updateOne({_id: objId}, {$pull: {likedSongs: {id: objId2}}});\n  if (!updateInfo.matchedCount && !updateInfo.modifiedCount) throw 'delete song from user failed';\n\n  const songCollections = await songs();\n  const deleteInfo = await songCollections.removeOne({_id: objId2});\n  if (deleteInfo.deletedCount === 0) {\n    throw `Could not delete the comment with id of ${objId2}`;\n  }\n}\n\nmodule.exports = {\n  addUser,\n  getUserById,\n  getUsers,\n  updateUserDelta,\n  deleteUser,\n  addSongToUser,\n  removeSongFromUser\n}","/Users/yichaojia/Documents/CS554/Final_Project/client/src/data/songs.js",[],"/Users/yichaojia/Documents/CS554/Final_Project/client/src/config/mongoCollections.js",[],"/Users/yichaojia/Documents/CS554/Final_Project/client/src/data/comments.js",[],"/Users/yichaojia/Documents/CS554/Final_Project/client/src/config/mongoConnection.js",[],"/Users/yichaojia/Documents/CS554/Final_Project/client/src/components/Register/Register.js",[],"/Users/yichaojia/Documents/CS554/Final_Project/client/src/components/Login/Login.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":39,"column":52,"nodeType":"82","messageId":"83","endLine":39,"endColumn":79},{"ruleId":"80","severity":1,"message":"81","line":40,"column":50,"nodeType":"82","messageId":"83","endLine":40,"endColumn":76},{"ruleId":"80","severity":1,"message":"81","line":41,"column":46,"nodeType":"82","messageId":"83","endLine":41,"endColumn":75},{"ruleId":"80","severity":1,"message":"81","line":42,"column":44,"nodeType":"82","messageId":"83","endLine":42,"endColumn":72},{"ruleId":"80","severity":1,"message":"81","line":43,"column":50,"nodeType":"82","messageId":"83","endLine":43,"endColumn":81},{"ruleId":"80","severity":1,"message":"81","line":56,"column":39,"nodeType":"82","messageId":"83","endLine":56,"endColumn":62},{"ruleId":"80","severity":1,"message":"81","line":61,"column":38,"nodeType":"82","messageId":"83","endLine":61,"endColumn":63},{"ruleId":"80","severity":1,"message":"81","line":65,"column":13,"nodeType":"82","messageId":"83","endLine":65,"endColumn":35},{"ruleId":"80","severity":1,"message":"81","line":72,"column":18,"nodeType":"82","messageId":"83","endLine":72,"endColumn":53},{"ruleId":"80","severity":1,"message":"81","line":78,"column":38,"nodeType":"82","messageId":"83","endLine":78,"endColumn":63},{"ruleId":"80","severity":1,"message":"81","line":79,"column":52,"nodeType":"82","messageId":"83","endLine":79,"endColumn":81},{"ruleId":"80","severity":1,"message":"81","line":80,"column":35,"nodeType":"82","messageId":"83","endLine":80,"endColumn":64},{"ruleId":"80","severity":1,"message":"81","line":88,"column":39,"nodeType":"82","messageId":"83","endLine":88,"endColumn":61},{"ruleId":"80","severity":1,"message":"81","line":93,"column":38,"nodeType":"82","messageId":"83","endLine":93,"endColumn":63},{"ruleId":"80","severity":1,"message":"81","line":98,"column":5,"nodeType":"82","messageId":"83","endLine":98,"endColumn":52},{"ruleId":"80","severity":1,"message":"81","line":104,"column":38,"nodeType":"82","messageId":"83","endLine":104,"endColumn":57},{"ruleId":"80","severity":1,"message":"81","line":105,"column":46,"nodeType":"82","messageId":"83","endLine":105,"endColumn":70},{"ruleId":"80","severity":1,"message":"81","line":122,"column":38,"nodeType":"82","messageId":"83","endLine":122,"endColumn":57},{"ruleId":"80","severity":1,"message":"81","line":123,"column":46,"nodeType":"82","messageId":"83","endLine":123,"endColumn":70},{"ruleId":"80","severity":1,"message":"81","line":129,"column":62,"nodeType":"82","messageId":"83","endLine":129,"endColumn":99},{"ruleId":"80","severity":1,"message":"81","line":134,"column":5,"nodeType":"82","messageId":"83","endLine":134,"endColumn":63},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-global-assign","no-unsafe-negation"]